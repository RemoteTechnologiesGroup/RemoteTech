Localization
{
    zh-cn
    {
        //parts
        #RemoteTech_Extend = 激活
        #RemoteTech_Retract = 停用
        #RemoteTech_Toggle = 开关天线

        #RT_RTGigaDish1_title = 中继天线GX-128
        #RT_RTGigaDish1_manufacturer = Parabolic Industries
        #RT_RTGigaDish1_desc = 一个巨大的中型行星际级天线盘。无论你在Kerbol系统中的什么地方，你都可以与之保持连接.

        #RT_GigaDish2_title = 通讯者-1
        #RT_GigaDish2_manufacturer = AIES Aerospace
        #RT_GigaDish2_desc = 一个强大的高增益固定盘。它几乎可以到达太阳系的任何地方。
        
        #RT_LongAntenna2_title = 通信者32
        #RT_LongAntenna2_manufacturer = Ionic Protonic Electronics
        #RT_LongAntenna2_desc = 通信者32是比上一代的增长了天线范围的版本, 现在有了更大的间谍潜力. 如果你不相信我们，去问问坎巴拉安全局。

        #RT_LongAntenna3_title = 通讯者 EXP-VR-2T
        #RT_LongAntenna3_manufacturer = AIES Aerospace
        #RT_LongAntenna3_desc = 对于科学研究任务我们强烈推荐使用这种有效又省空间的折叠天线.

        #RT_LongDish1_title = LL-5中继天线
        #RT_LongDish1_manufacturer = Parabolic Industries
        #RT_LongDish1_desc = 这个天线能把你的信号传到Duna.但不要指望它能进一步发挥作用.如果用来放沙拉，则保修无效.
        
        #RT_LongDish2_title = KR-14中继天线
        #RT_LongDish2_manufacturer = Parabolic Industries
        #RT_LongDish2_desc = 取代LL-5，这个天线限制能把你的信号带到比Duna更远的地方，让其看起来比以往任何时候都更华丽.

        #RT_ShortAntenna1_title =  DP-10中继天线
        #RT_ShortAntenna1_manufacturer = Parabolic Industries
        #RT_ShortAntenna1_desc = 当把天线移到测试地点时，工程师们总是忘记提前打开它,他们因此沮丧的走来走去.于是这根天线现在默认处于开启状态.

        #RT_ShortDish1_title =  SS-5中继天线
        #RT_ShortDish1_manufacturer = Parabolic Industries.
        #RT_ShortDish1_desc = 如果你想打破Kerbin的引力束缚，你将需要一些真正的大功率天线。曾经被认为只是个垃圾桶盖子的东西，现在变成了和Münar交流的基石

        #RT_ShortDish2_title =  KR-7中继天线
        #RT_ShortDish2_manufacturer = Parabolic Industries.
        #RT_ShortDish2_desc = 当地人抱怨他们的垃圾桶盖不见了，所以我们的工程师很快就找到了替代方案.只需双倍的成本就能达到与SS-5匹配的性能！

        //UI
        #RT_OptionWindow_title = RemoteTech <<1>> 选项
        #RT_OptionWindow_closebutton = 关闭

        #RT_OptionWindow_start_Text = 点击上面的小菜单按钮浏览不同的选项。
        #RT_OptionWindow_start_Text2 = 需要远程技术方面的帮助吗？查看在线手册和教程。如果找不到答案，请在论坛发布页中发表你的问题。\n（单击将打开浏览器）
        #RT_OptionWindow_start_button1 = 在线手册和教程
        #RT_OptionWindow_start_button2 = KSP官方论坛

        #RT_OptionWindow_WorldScale_ConsMulti_head = 功耗倍数: (<<1>>)
        #RT_OptionWindow_WorldScale_ConsMulti_text = 如果设置为1以外的值，则所有天线的功耗都将按此因数增加或减少。\n不影响科学传输的能耗。
        #RT_OptionWindow_WorldScale_RangeMulti_head = 天线距离倍数: (<<1>>)
        #RT_OptionWindow_WorldScale_RangeMulti_text = 如果设置为1以外的值, 则所有<b><color=#bada55>天线范围</color></b>都将按此因子增大或减小.\n不影响任务控制范围.
        #RT_OptionWindow_WorldScale_MissionControlRangeMulti_head = 任务控制距离倍数: (<<1>>)
        #RT_OptionWindow_WorldScale_MissionControlRangeMulti_text = 如果设置为1以外的值, 所有<b><color=#bada55>任务控制中心</color></b>的控制范围都将按此因素增大或减小.\n不影响天线范围.

        #RT_OptionWindow_AlternativeRules_EnableSignalDelay = 启用信号延迟
        #RT_OptionWindow_AlternativeRules_disabledSignalDelay = 禁用信号延迟
        #RT_OptionWindow_AlternativeRules_SignalDelaydesc = 打开：发送到兼容RemoteTech探测器核心的所有的指令都受光速限制，并且在执行之前会根据距离有一个延迟。\n关闭：所有指令都将立即执行，不过仍然需要与任务控制中心建立连接.
        
        #RT_OptionWindow_AlternativeRules_RangeModelMode_head = 天线通讯模式
        #RT_OptionWindow_AlternativeRules_RangeModelMode_text = 此设置控制游戏如何确定两个天线是否在彼此的范围内。\n有关每个规则的差异的详细信息，请参阅我们的在线手册。
        #RT_OptionWindow_AlternativeRules_RangeModelMode_Standard = 标准
        #RT_OptionWindow_AlternativeRules_RangeModelMode_Root = Root

        #RT_OptionWindow_AlternativeRules_MultipleAntennaMulti_head = 天线叠加倍数 : (<<1>>)
        #RT_OptionWindow_AlternativeRules_MultipleAntennaMulti_text = 同一飞行器上的多个全向天线将进行协同工作。\n默认值0表示禁用。\n最大值1.0将所有全向天线的范围相加，以提供更大的有效范围。\n有效范围线性叠加，此选项适用于标准和Root模式.

        #RT_OptionWindow_ColorSlider_Red = 红: (<<1>>)
        #RT_OptionWindow_ColorSlider_Green = 绿: (<<1>>)
        #RT_OptionWindow_ColorSlider_Blue = 蓝: (<<1>>)

        #RT_OptionWindow_VisualStyle_DishColor = 定向天线连接颜色:
        #RT_OptionWindow_VisualStyle_OmniColor = 全向天线连接颜色:
        #RT_OptionWindow_VisualStyle_ActiveColor = 连通连接颜色:
        #RT_OptionWindow_VisualStyle_RemoteStationColor = 远程站颜色:
        #RT_OptionWindow_VisualStyle_StationsBehindBodyHide = 地面站在天体后面隐藏
        #RT_OptionWindow_VisualStyle_StationsBehindBodyShow = 始终显示地面站
        #RT_OptionWindow_VisualStyle_StationsBehindBodytext = 打开：地面站被行星或天体遮挡，在其后面将不可见。\n关闭：地面站始终显示（见下面的范围选项）。

        #RT_OptionWindow_VisualStyle_StationsOnDistancehide = 地面站在规定的距离内隐藏
        #RT_OptionWindow_VisualStyle_StationsOnDistanceShow = 始终显示地面站
        #RT_OptionWindow_VisualStyle_StationsOnDistanceText = 打开：地面站将不会显示超过地图视图相机的定义距离。\n关闭：无论距离如何，都会显示地面站。
        
        #RT_OptionWindow_VisualStyle_MouseOverInfoGroundStationsE = 鼠标悬停显示地面站
        #RT_OptionWindow_VisualStyle_MouseOverInfoGroundStationsD = 鼠标悬停禁用地面站
        #RT_OptionWindow_VisualStyle_MouseOverInfoGroundStationsDesc = 打开：当您在地图视图或跟踪站上鼠标悬停地面站时，会显示一些有用的信息。\n关闭：鼠标悬停期间不会显示信息。
        
        #RT_OptionWindow_Miscellaneous_ThrottleTimeWarp = RemoteTech将限制时间加速
        #RT_OptionWindow_Miscellaneous_NoThrottleTimeWarp = RemoteTech不会阻止时间加速
        #RT_OptionWindow_Miscellaneous_ThrottleTimeWarp_text = 打开：飞行计算机将在执行排队命令前几秒自动停止时间扭曲。\n关闭：播放机负责在预定操作期间控制时间扭曲。

        #RT_OptionWindow_Miscellaneous_ThrottleZeroOnNoConnection = 连接断开时节流阀降至零
        #RT_OptionWindow_Miscellaneous_NoThrottleZeroOnNoConnection = 节流阀不受连接断开的影响
        #RT_OptionWindow_Miscellaneous_ThrottleZeroOnNoConnection_text = 开：如果失去与任务控制中心的连接，飞行计算机会切断飞船的推力。\n关：节流阀不会自动调整.

        #RT_OptionWindow_Miscellaneous_UpgradeableMissionControl = 任务控制中心天线可升级
        #RT_OptionWindow_Miscellaneous_NoUpgradeableMissionControl = 任务控制中心天线不可升级
        #RT_OptionWindow_Miscellaneous_UpgradeableMissionControlText = 打开：任务控制中心天线范围在升级跟踪中心时升级。\n关闭：任务控制天线范围不可升级。

        #RT_OptionWindow_Miscellaneous_AutoInsertKaCAlerts = 警报添加到Kerbal Alarm Clock中
        #RT_OptionWindow_Miscellaneous_NotAutoInsertKaCAlerts = 不添加到Kerbal Alarm Clock
        #RT_OptionWindow_Miscellaneous_AutoInsertKaCAlertsText = 开启：飞行人工智能将自动向Kerbal Alarm Clock mod添加用于点火和机动命令的警报。警报在命令执行前3分钟关闭。\n关闭：没有警报会添加到Kerbal Alarm Clock
        
        #RT_OptionWindow_Presets_HelpText = 您可以将当前设置还原为起始设置，由已安装的mods的MM补丁程序构造。此外，您还可以使用第三方mod来配置自己的RemoteTech设置（没有MM补丁时的回退）并加载到当前设置。\n\n您可以查看当前可用的预设配置：
        #RT_OptionWindow_Presets_NotFound = 找不到预设
        #RT_OptionWindow_Presets_Reload = 重新加载
        #RT_OptionWindow_Presets_msg1 = 您的RemoteTech配置设置为 <<1>>
        
        #RT_OptionWindow_Cheat_ControlAntennaWithoutConnection = 不需要连接信号就能控制天线
        #RT_OptionWindow_Cheat_ControlAntennaNeedConnection = 控制天线需要连接信号
        #RT_OptionWindow_Cheat_ControlAntennaWithoutConnectionText = 开：天线可以在没有连接的情况下被激活、停用和锁定。\n关：在没有有效连接链路的情况下不能进行控制.

        #RT_OptionWindow_Cheat_IgnoreLineOfSight = 行星和卫星不会阻挡信号
        #RT_OptionWindow_Cheat_NoIgnoreLineOfSight = 行星和卫星会阻挡信号
        #RT_OptionWindow_Cheat_IgnoreLineOfSightText = 开：全向天线和定向天线不需要视线就能保持连接，确保它们在合适的范围和有相应的电力。\n关：全向天线和定向天线需要视线来保持连接.

        #RT_ModuleUI_DishRange = 定向天线范围
        #RT_ModuleUI_EnergyReq = 耗电量
        #RT_ModuleUI_Omnirange = 全向天线范围
        #RT_ModuleUI_Status = 状态
        #RT_ModuleUI_Status_tolower = 状态

        #RT_ModuleUI_Off = 关闭
        #RT_ModuleUI_Operational = 可操作
        #RT_ModuleUI_Deactivate = 停用
        #RT_ModuleUI_Activate = 激活
        #RT_ModuleUI_Toggle = 收放天线
        #RT_ModuleUI_Target = 目标
        #RT_ModuleUI_SetTarget = [EVA] 设置目标
        #RT_ModuleUI_ForceOpen = [EVA] 强制开启
        #RT_ModuleUI_ForceClose = [EVA] 强制关闭

        #RT_ModuleUI_Autothreshold = 自动开关
        #RT_ModuleUI_Autothreshold_Off = 关闭
        #RT_ModuleUI_DeactivateatEC = 当EC达到 %停用
        #RT_ModuleUI_ActivateatEC = 当EC达到 %激活
        
        #RT_ModuleUI_Transmit = 传输科学点数
        #RT_ModuleUI_SciencePacketSize = 数据包大小
        #RT_ModuleUI_SciencePacketInterval = 数据包传输间隔
        #RT_ModuleUI_SciencePacketCost = 数据包成本

        #RT_ModuleUI_Connected = 连接
        #RT_ModuleUI_NoResources = 电力耗尽
        #RT_ModuleUI_Malfunction = 故障

        #RT_ModuleUI_DeployAntenna = 激活天线
        #RT_ModuleUI_RetractAntenna = 停用天线

        #RT_ModuleUI_Comms = 通讯
        #RT_ModuleUI_Comms_Status = 闲置
        #RT_ModuleUI_Comms_Status2 = 上传数据中...
        #RT_ModuleUI_TransmitMsg = [<<1>>]: 开始发送数据...
        #RT_ModuleUI_TransmitMsg2 = [<<1>>]: 上传数据... <<2>>
        #RT_ModuleUI_TransmitMsg3 = [<<1>>]: 警告! 无足够的 <<2>>!
        #RT_ModuleUI_TransmitMsg4 = [<<1>>]: 完成!
        #RT_ModuleUI_SPU = SPU
        #RT_ModuleUI_SPU_Status = 可操作.
        #RT_ModuleUI_SPU_Status2 = 无连接.
        #RT_ModuleUI_SPU_Msg = 没有可用链路能发送指令.
        #RT_ModuleUI_ActiveVessel = 任意载具
        #RT_ModuleUI_ActiveVessel_Tolower = 任意载具
        #RT_ModuleUI_NoTarget = 无目标
        #RT_ModuleUI_NoTarget_Tolower = 无目标
        #RT_ModuleUI_UnknownTarget = 未知物体

        #RT_ModuleUI_rippedoff = [<<1>>]: <<2>> 被强烈的气流扯掉了.

        //Flight Computer
        #RT_FC_Title = 飞行人工智能
        #RT_FC_desc = 切换到高度、车辆、电源或PID控制模式
        #RT_ConnectionStatus1 = N/A(不可用)
        #RT_ConnectionStatus2 = 本地控制
        #RT_ConnectionStatus3 = 时延 <<1>>s
        #RT_ConnectionStatus4 = 连接
        #RT_ConnectionStatus5 = 无连接

        #RT_FC_msg1 = [飞行人工智能]: 停止时间加速...
        #RT_FC_msg2 = [飞行人工智能]: 失去电力,无法按计划执行"<<1>>".
        #RT_FC_msg3 = 需要机动燃烧
        #RT_FC_msg4 = 需要点火指令
        #RT_FC_msg5 = [飞行人工智能]: 信号延迟过高，无法在适当的时间执行此操作。

        #RT_MissionControl = 任务控制中心

        #RT_Editor_Antenna = 天线
        #RT_Editor_Omni = 全向
        #RT_Editor_range = 范围
        #RT_Editor_Dish = 定向
        #RT_Editor_power = 电力

        #RT_Editor_SignalProcessor = 信号处理器
        #RT_Editor_SignalProcessor_info1 = 远程指令支持 (<<1>>+ 乘员)
        #RT_Editor_SignalProcessor_info2 = 远程控制支持

        #RT_Editor_TechnologyPerk = 科技特性
        #RT_Editor_TechnologyPerk_info1 = 内置全向天线:范围 <<1>> 总是开启

        #RT_Editor_Coneangle = 发射范围:\u0020
        #RT_degrees = \u0020度
        #RT_Editor_Activatedbydefault = 默认激活
        #RT_Editor_Snaps = 在高大气压力下损坏
        #RT_Editor_Notretractable = 天线不可收回
        #RT_Editor_Requires = 需要:
        #RT_Editor_ElectricCharge = 电力:

        //Network Feed Back
        #RT_NetworkFB_statusTitle = 状态:
        #RT_NetworkFB_status = OK
        #RT_NetworkFB_status2 = 没有视线
        #RT_NetworkFB_status3 = 目标不在范围内
        #RT_NetworkFB_Currentdistance = 当前距离:
        #RT_NetworkFB_Antennarange = 天线范围:
        #RT_NetworkFB_Targetinfo = 摘要:<<1>> 波束覆盖 <<2>> 目标
        #RT_NetworkFB_NameButton = 命名
        #RT_NetworkFB_Target = 目标:\u0020
        #RT_NetworkFB_Omni = 全向距离:
        #RT_NetworkFB_Dish = 定向距离:

        //debug window
        #RT_DEBUG_title = RemoteTech Debug窗口
        #RT_DEBUG_LoadedScene = 地面站仅在飞行界面或跟踪站界面可用.
        #RT_DEBUG_RTSettings = RemoteTech设置
        #RT_DEBUG_APITester = API-测试
        #RT_DEBUG_GUIDReader = GUID-读取
        #RT_DEBUG_Clearbutton = 清除在 <<1>> 的日志
        #RT_DEBUG_Onbtton = 开
        #RT_DEBUG_Offbtton = 关

        //RemoteTech Settings label
        #RT_DEBUG_DeactivateKSC = 停用KSC:\u0020
        #RT_DEBUG_CheatOptions = 作弊选项
        #RT_DEBUG_SignalThroughBodies = 信号穿越天体:
        #RT_DEBUG_InfiniteFuel = 无限燃料: 
        #RT_DEBUG_InfiniteRCSFuel = 无限RCS燃料: 

        //Flight Computer buttons & desc

        #RT_AttitudeCommand_Off = 模式: 关闭
        #RT_AttitudeCommand_Killrotation = 模式: 停止旋转
        #RT_AttitudeCommand_Hold = 模式: 保持
        #RT_AttitudeCommand_Prograde = 顺向
        #RT_AttitudeCommand_Retrograde = 逆向
        #RT_AttitudeCommand_RadialMinus = 径向 -
        #RT_AttitudeCommand_RadialPlus = 径向 +
        #RT_AttitudeCommand_NormalMinus = 法线 -
        #RT_AttitudeCommand_NormalPlus = 法线 +
        #RT_AttitudeCommand_Direction = 方向
        #RT_Command_Signaldelay = 信号延迟: 

        #RT_AttitudeCommand_Orbit = 轨道
        #RT_AttitudeCommand_Surface = 地面
        #RT_AttitudeCommand_TargetVelocity = RVEL
        #RT_AttitudeCommand_TargetParallel = 目标平面
        #RT_AttitudeCommand_North = 北面
        #RT_AttitudeCommand_Maneuver = 机动
        #RT_AttitudeCommand_World = 世界

        //Buttons

        #RT_AttitudeFragment_KILL = 稳定
        #RT_AttitudeFragment_KILL_desc = 稳定航天器.
        #RT_AttitudeFragment_NODE = NODE
        #RT_AttitudeFragment_NODE_desc = 沿顺向指向第一个机动节点的方向。
        #RT_AttitudeFragment_RVEL = RVEL
        #RT_AttitudeFragment_RVEL_desc = 朝向所设定目标相对顺向方向.
        #RT_AttitudeFragment_ORB = ORB
        #RT_AttitudeFragment_ORB_desc = 朝向相对轨道顺向方向.
        #RT_AttitudeFragment_SRF = SRF
        #RT_AttitudeFragment_SRF_desc = 朝向相对地面顺向方向.
        #RT_AttitudeFragment_TGT = TGT
        #RT_AttitudeFragment_TGT_desc = 朝向目标所在位置.
        #RT_AttitudeFragment_OFF = 关闭
        #RT_AttitudeFragment_OFF_desc = 关闭功能.
        #RT_AttitudeFragment_CUSTOM = 自定义
        #RT_AttitudeFragment_CUSTOM_desc = 相对北面固定朝向为所设置的俯仰角、偏航角和滚转角.
        #RT_AttitudeFragment_Prograde = 顺向
        #RT_AttitudeFragment_Prograde_desc = 朝向顺向.
        #RT_AttitudeFragment_RadialPlus = 径上
        #RT_AttitudeFragment_RadialPlus_desc = 朝向径向向上.
        #RT_AttitudeFragment_NormalPlus = 法向
        #RT_AttitudeFragment_NormalPlus_desc = 朝向法线方向.
        #RT_AttitudeFragment_Retrograde = 逆向
        #RT_AttitudeFragment_Retrograde_desc = 朝向逆向方向.
        #RT_AttitudeFragment_RadialMinus = 径下
        #RT_AttitudeFragment_RadialMinus_desc = 朝向径向向下.
        #RT_AttitudeFragment_NormalMinus = 反法向
        #RT_AttitudeFragment_NormalMinus_desc = 朝向反法线方向.
        #RT_AttitudeFragment_PIT = PIT:
        #RT_AttitudeFragment_PIT_desc = 设定俯仰角.
        #RT_AttitudeFragment_HDG = HDG:
        #RT_AttitudeFragment_HDG_desc = 设定偏航角.
        #RT_AttitudeFragment_RLL = RLL:
        #RT_AttitudeFragment_RLL_desc = 设定滚转角.
        #RT_AttitudeFragment_Throttle = 节流阀:
        #RT_AttitudeFragment_BURN = 点火
        #RT_AttitudeFragment_BURN_desc = 例如: 125, 125s, 5m20s, 1d6h20m10s, 123m/s.
        #RT_AttitudeFragment_EXEC = 执行
        #RT_AttitudeFragment_EXEC_desc = 执行下一个和后续的机动节点。
        #RT_AttitudeFragment_Queue_desc = 切换到指令队列和延时功能.

        #RT_RoverFragment_TGT = TGT
        #RT_RoverFragment_TGT_desc = 驶向物体的经纬度或船只目标.
        #RT_RoverFragment_HDG = HDG
        #RT_RoverFragment_HDG_desc = 驾驶在特定航向和特定距离.
        #RT_RoverFragment_FINE = FINE
        #RT_RoverFragment_FINE_desc = 以特定的滚转或距离行驶。.
        #RT_RoverFragment_DRIVE = 行驶
        #RT_RoverFragment_DRIVE_desc = 启动自动驾驶.
        #RT_RoverFragment_Queue_desc = 切换到指令队列和延时功能.

        //FINE
        #RT_RoverFragment_FINESteer = 转向:
        #RT_RoverFragment_FINESteer_desc = 转多少
        #RT_RoverFragment_right = 右
        #RT_RoverFragment_left = 左
        #RT_RoverFragment_Turn = 转
        #RT_RoverFragment_Turn_desc = 转几度
        #RT_RoverFragment_Dist = 距
        #RT_RoverFragment_Dist_desc = 行驶距离
        #RT_RoverFragment_Speed = 速度
        #RT_RoverFragment_Speed_desc = 保持多少速度，反向为负

        //HDG
        #RT_RoverFragment_HDGSteer = 转向: 
        #RT_RoverFragment_HDGSteer_desc = 最大转弯速度有多快
        #RT_RoverFragment_mHdg = Hdg
        #RT_RoverFragment_mHdg_desc = 航向保持
        #RT_RoverFragment_HDGSpeed_desc = 速度保持

        //TGT
        #RT_RoverFragment_coordinations = 天体坐标
        #RT_RoverFragment_coordinations_desc = 按住<<1>>并单击天体地表输入坐标
        #RT_RoverFragment_TargetVessel = 指定飞船
        #RT_RoverFragment_TargetVessel_desc = 开往这艘飞船
        #RT_RoverFragment_ModeLabel = 模式: <<1>>
        #RT_RoverFragment_LAT = 纬
        #RT_RoverFragment_LAT_desc = 开往的纬度
        #RT_RoverFragment_LON = 经
        #RT_RoverFragment_LON_desc = 开往的经度

        //PowerFragment
        #RT_PowerFragment_HBNT = 节能
        #RT_PowerFragment_HBNT_desc = 超低功耗休眠，关闭所有开启的天线.
        #RT_PowerFragment_THLD = 平衡
        #RT_PowerFragment_THLD_desc = 自动节能
        #RT_PowerFragment_WAKE = 高性能
        #RT_PowerFragment_WAKE_desc = 关闭任何省电方案.
        #RT_PowerFragment_Queue_desc = 调整指令队列和信号延迟功能.

        //QueueFragment
        #RT_QueueFragment_statuText = 状态: <<1>>.
        #RT_QueueFragment_statuText_desc = 影响: <<1>>.
        #RT_QueueFragment_statu1 = 连接错误
        #RT_QueueFragment_statu1_desc = 无法添加指令到队列
        #RT_QueueFragment_statu2 = 电量耗尽
        #RT_QueueFragment_statu2_desc = 指令可能会丢失
        #RT_QueueFragment_statu2_desc2 = 计时器内容
        #RT_QueueFragment_statu3 = 待机
        #RT_QueueFragment_statu3_desc = 无法控制
        #RT_QueueFragment_statu4 = 堵塞
        #RT_QueueFragment_statu4_desc = 冻结
        #RT_QueueFragment_statu5 = 所有系统类别
        #RT_QueueFragment_statu5_desc = 无
        #RT_QueueFragment_Setsignaldelay = 设置信号延迟在此之后-当前：<<1>>
        #RT_QueueFragment_Signaldelay = 延迟(+信号): <<1>>
        #RT_QueueFragment_Signaldelay_desc = 包括信号延迟在内的总延迟。
        #RT_QueueFragment_AddExtraDelay_desc = 添加额外的信号延迟 - 例如：125,125s,5m20s,1d6h20m10s

        #RT_PowerModecmd_Hibernate = 电源: 休眠 (<<1>> 天线)
        #RT_PowerModecmd_Hibernate_deact = 停用
        #RT_PowerModecmd_Hibernate_inact = 停止工作 <<1>>
        #RT_PowerModecmd_AntennaSaver = 电源：在阈值时自动取消/重新激活天线
        #RT_PowerModecmd_Wake = 电源：终止任何活动用电状态
        #RT_PowerModecmd_Unknown = 电源: 未知

        //PIDControllerFragment
        //Pitch Info
        #RT_PIDControllerFragment_Pitch = 俯仰
        //Roll Info
        #RT_PIDControllerFragment_Roll = 滚转
        //Yaw Info
        #RT_PIDControllerFragment_Yaw = 偏航

        #RT_PIDControllerFragment_TorqueMoI = 惯性扭矩速率: 
        #RT_PIDControllerFragment_TorqueMoI_desc = 当前转矩对质量惯性的速率

        #RT_PIDControllerFragment_DeviationError = 偏差: 
        #RT_PIDControllerFragment_DeviationError_desc = 目标点偏差
        
        #RT_PIDControllerFragment_Output = 输出: 
        #RT_PIDControllerFragment_Output_desc = 飞行控制状态输出

        //PIDControl
        #RT_PIDControllerFragment_PIDHelp = 请查看 ni.com/white-paper/3782/en
        #RT_PIDControllerFragment_Kp = 比例增益
        #RT_PIDControllerFragment_Kp_desc = (1) 当I和D项设置为0时，增加，直到循环的输出振荡为止

        #RT_PIDControllerFragment_Ki = 积分
        #RT_PIDControllerFragment_Ki_desc = (2) 增加以停止振荡.
        
        #RT_PIDControllerFragment_Kd = 微分
        #RT_PIDControllerFragment_Kd_desc = (3) 增加，直到循环可以接受地快速到达其目标点.
        
        #RT_PIDControllerFragment_button1 = 保存
        #RT_PIDControllerFragment_button1_desc = 永久保存所有值。
        #RT_PIDControllerFragment_button2 = 接受
        #RT_PIDControllerFragment_button2_desc = 将所有值连接到飞行PID控制器。
        #RT_PIDControllerFragment_Queue_desc = 切换队列和延迟功能。
    
    }
}
