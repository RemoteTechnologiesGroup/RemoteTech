<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RemoteTech2.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.RemoteTech2Delegates">
            <summary>Contains custom delegates used for the stubs and shims of RemoteTech2</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAPI">
            <summary>Shim type of RemoteTech.API</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAPI.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAPI.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAPI.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.AddSanctionedPilotGuidActionOfFlightCtrlState">
            <summary>Sets the shim of API.AddSanctionedPilot(Guid id, Action`1&lt;FlightCtrlState&gt; autopilot)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.GetShortestSignalDelayGuid">
            <summary>Sets the shim of API.GetShortestSignalDelay(Guid id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.GetSignalDelayToKSCGuid">
            <summary>Sets the shim of API.GetSignalDelayToKSC(Guid id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.GetSignalDelayToSatelliteGuidGuid">
            <summary>Sets the shim of API.GetSignalDelayToSatellite(Guid a, Guid b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.HasAnyConnectionGuid">
            <summary>Sets the shim of API.HasAnyConnection(Guid id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.HasConnectionToKSCGuid">
            <summary>Sets the shim of API.HasConnectionToKSC(Guid id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.HasFlightComputerGuid">
            <summary>Sets the shim of API.HasFlightComputer(Guid id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAPI.RemoveSanctionedPilotGuidActionOfFlightCtrlState">
            <summary>Sets the shim of API.RemoveSanctionedPilot(Guid id, Action`1&lt;FlightCtrlState&gt; autopilot)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAbstractCommand">
            <summary>Shim type of RemoteTech.AbstractCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractCommand.#ctor(RemoteTech.AbstractCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.Abort">
            <summary>Sets the shim of AbstractCommand.Abort()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.CompareToICommand">
            <summary>Sets the shim of AbstractCommand.CompareTo(ICommand dc)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.Constructor">
            <summary>Sets the shim of AbstractCommand.AbstractCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.DescriptionGet">
            <summary>Sets the shim of AbstractCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.ExtraDelayGet">
            <summary>Sets the shim of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.ExtraDelaySetDouble">
            <summary>Sets the shim of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.PopFlightComputer">
            <summary>Sets the shim of AbstractCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.PriorityGet">
            <summary>Sets the shim of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.TimeStampGet">
            <summary>Sets the shim of AbstractCommand.get_TimeStamp()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.TimeStampSetDouble">
            <summary>Sets the shim of AbstractCommand.set_TimeStamp(Double value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAbstractCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.Abort">
            <summary>Sets the shim of AbstractCommand.Abort()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.CompareToICommand">
            <summary>Sets the shim of AbstractCommand.CompareTo(ICommand dc)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of AbstractCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.ExtraDelayGet">
            <summary>Sets the shim of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.ExtraDelaySetDouble">
            <summary>Sets the shim of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of AbstractCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.PriorityGet">
            <summary>Sets the shim of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.TimeStampGet">
            <summary>Sets the shim of AbstractCommand.get_TimeStamp()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractCommand.AllInstances.TimeStampSetDouble">
            <summary>Sets the shim of AbstractCommand.set_TimeStamp(Double value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAbstractWindow">
            <summary>Shim type of RemoteTech.AbstractWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractWindow.#ctor(RemoteTech.AbstractWindow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractWindow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAbstractWindow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AlignmentGet">
            <summary>Sets the shim of AbstractWindow.get_Alignment()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AlignmentSetWindowAlign">
            <summary>Sets the shim of AbstractWindow.set_Alignment(WindowAlign value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.ConstructorGuidStringRectWindowAlign">
            <summary>Sets the shim of AbstractWindow.AbstractWindow(Guid id, String title, Rect position, WindowAlign align)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.Draw">
            <summary>Sets the shim of AbstractWindow.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.Hide">
            <summary>Sets the shim of AbstractWindow.Hide()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.RequestPosition">
            <summary>Sets the shim of AbstractWindow.RequestPosition()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.Show">
            <summary>Sets the shim of AbstractWindow.Show()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.StaticConstructor">
            <summary>Sets the shim of AbstractWindow.AbstractWindow()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.TitleGet">
            <summary>Sets the shim of AbstractWindow.get_Title()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.TitleSetString">
            <summary>Sets the shim of AbstractWindow.set_Title(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.TooltipGet">
            <summary>Sets the shim of AbstractWindow.get_Tooltip()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.TooltipSetString">
            <summary>Sets the shim of AbstractWindow.set_Tooltip(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.WindowInt32">
            <summary>Sets the shim of AbstractWindow.Window(Int32 uid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.WindowPreInt32">
            <summary>Sets the shim of AbstractWindow.WindowPre(Int32 uid)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAbstractWindow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.AlignmentGet">
            <summary>Sets the shim of AbstractWindow.get_Alignment()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.AlignmentSetWindowAlign">
            <summary>Sets the shim of AbstractWindow.set_Alignment(WindowAlign value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.Draw">
            <summary>Sets the shim of AbstractWindow.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.Hide">
            <summary>Sets the shim of AbstractWindow.Hide()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.RequestPosition">
            <summary>Sets the shim of AbstractWindow.RequestPosition()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.Show">
            <summary>Sets the shim of AbstractWindow.Show()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.TitleGet">
            <summary>Sets the shim of AbstractWindow.get_Title()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.TitleSetString">
            <summary>Sets the shim of AbstractWindow.set_Title(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.TooltipGet">
            <summary>Sets the shim of AbstractWindow.get_Tooltip()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.TooltipSetString">
            <summary>Sets the shim of AbstractWindow.set_Tooltip(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.WindowInt32">
            <summary>Sets the shim of AbstractWindow.Window(Int32 uid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAbstractWindow.AllInstances.WindowPreInt32">
            <summary>Sets the shim of AbstractWindow.WindowPre(Int32 uid)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimActionGroupCommand">
            <summary>Shim type of RemoteTech.ActionGroupCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimActionGroupCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimActionGroupCommand.#ctor(RemoteTech.ActionGroupCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimActionGroupCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimActionGroupCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimActionGroupCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimActionGroupCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.ActionGroupGet">
            <summary>Sets the shim of ActionGroupCommand.get_ActionGroup()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.ActionGroupSetKSPActionGroup">
            <summary>Sets the shim of ActionGroupCommand.set_ActionGroup(KSPActionGroup value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.Constructor">
            <summary>Sets the shim of ActionGroupCommand.ActionGroupCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.DescriptionGet">
            <summary>Sets the shim of ActionGroupCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.PopFlightComputer">
            <summary>Sets the shim of ActionGroupCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.WithGroupKSPActionGroup">
            <summary>Sets the shim of ActionGroupCommand.WithGroup(KSPActionGroup group)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimActionGroupCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.AllInstances.ActionGroupGet">
            <summary>Sets the shim of ActionGroupCommand.get_ActionGroup()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.AllInstances.ActionGroupSetKSPActionGroup">
            <summary>Sets the shim of ActionGroupCommand.set_ActionGroup(KSPActionGroup value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of ActionGroupCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimActionGroupCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of ActionGroupCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAdjacencyMap">
            <summary>Shim type of RemoteTech.AdjacencyMap</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.#ctor(RemoteTech.AdjacencyMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{RemoteTech.ISatellite,RemoteTech.NetworkLink{RemoteTech.ISatellite}}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{RemoteTech.ISatellite,RemoteTech.NetworkLink{RemoteTech.ISatellite}}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{RemoteTech.ISatellite,RemoteTech.NetworkLink{RemoteTech.ISatellite}}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.Generic.IDictionary{RemoteTech.ISatellite,RemoteTech.NetworkLink{RemoteTech.ISatellite}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Collections.Generic.IReadOnlyDictionary{RemoteTech.ISatellite,RemoteTech.NetworkLink{RemoteTech.ISatellite}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAdjacencyMap.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAdjacencyMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAdjacencyMap.Constructor">
            <summary>Sets the shim of AdjacencyMap.AdjacencyMap()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAdjacencyMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAntennaFragment">
            <summary>Shim type of RemoteTech.AntennaFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaFragment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaFragment.#ctor(RemoteTech.AntennaFragment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaFragment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaFragment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaFragment.Bind(RemoteTech.IFragment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaFragment.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AntennaGet">
            <summary>Sets the shim of AntennaFragment.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AntennaSetIAntenna">
            <summary>Sets the shim of AntennaFragment.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.ConstructorIAntenna">
            <summary>Sets the shim of AntennaFragment.AntennaFragment(IAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.Dispose">
            <summary>Sets the shim of AntennaFragment.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.Draw">
            <summary>Sets the shim of AntennaFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.DrawPlanetList">
            <summary>Sets the shim of AntennaFragment.DrawPlanetList()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.DrawPlanetSatelliteTree">
            <summary>Sets the shim of AntennaFragment.DrawPlanetSatelliteTree()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.Refresh">
            <summary>Sets the shim of AntennaFragment.Refresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.RefreshIAntenna">
            <summary>Sets the shim of AntennaFragment.Refresh(IAntenna sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.RefreshISatellite">
            <summary>Sets the shim of AntennaFragment.Refresh(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment._DrawPlanetSatelliteTreeb__5">
            <summary>Sets the shim of AntennaFragment.&lt;DrawPlanetSatelliteTree&gt;b__5()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment._Drawb__0">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__0()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment._Drawb__1Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__1(Int32 s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment._Drawb__2Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__2(Int32 s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment._Drawb__3Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__3(Int32 s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment._Drawb__4Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__4(Int32 s)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAntennaFragment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.AntennaGet">
            <summary>Sets the shim of AntennaFragment.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.AntennaSetIAntenna">
            <summary>Sets the shim of AntennaFragment.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.Dispose">
            <summary>Sets the shim of AntennaFragment.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.Draw">
            <summary>Sets the shim of AntennaFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.DrawPlanetList">
            <summary>Sets the shim of AntennaFragment.DrawPlanetList()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.DrawPlanetSatelliteTree">
            <summary>Sets the shim of AntennaFragment.DrawPlanetSatelliteTree()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.Refresh">
            <summary>Sets the shim of AntennaFragment.Refresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.RefreshIAntenna">
            <summary>Sets the shim of AntennaFragment.Refresh(IAntenna sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances.RefreshISatellite">
            <summary>Sets the shim of AntennaFragment.Refresh(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances._DrawPlanetSatelliteTreeb__5">
            <summary>Sets the shim of AntennaFragment.&lt;DrawPlanetSatelliteTree&gt;b__5()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances._Drawb__0">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__0()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances._Drawb__1Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__1(Int32 s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances._Drawb__2Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__2(Int32 s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances._Drawb__3Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__3(Int32 s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaFragment.AllInstances._Drawb__4Int32">
            <summary>Sets the shim of AntennaFragment.&lt;Draw&gt;b__4(Int32 s)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAntennaManager">
            <summary>Shim type of RemoteTech.AntennaManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaManager.#ctor(RemoteTech.AntennaManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaManager.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaManager.Bind(System.Collections.Generic.IEnumerable{RemoteTech.IVesselAntenna})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.Constructor">
            <summary>Sets the shim of AntennaManager.AntennaManager()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.ForGuid">
            <summary>Sets the shim of AntennaManager.For(Guid key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.GetEnumerator">
            <summary>Sets the shim of AntennaManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.ItemGetGuid">
            <summary>Sets the shim of AntennaManager.get_Item(Guid g)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.ItemGetISatellite">
            <summary>Sets the shim of AntennaManager.get_Item(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.ItemGetVessel">
            <summary>Sets the shim of AntennaManager.get_Item(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.OnFixedUpdate">
            <summary>Sets the shim of AntennaManager.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.OnRegisterAddActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.add_OnRegister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.OnRegisterRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.remove_OnRegister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.OnUnregisterAddActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.add_OnUnregister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.OnUnregisterRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.remove_OnUnregister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.OnVesselAntennaDestroyIVesselAntenna">
            <summary>Sets the shim of AntennaManager.OnVesselAntennaDestroy(IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.RegisterIVesselAntenna">
            <summary>Sets the shim of AntennaManager.Register(IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.RegisterProtosVessel">
            <summary>Sets the shim of AntennaManager.RegisterProtos(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AntennaManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.UnregisterGuidIVesselAntenna">
            <summary>Sets the shim of AntennaManager.Unregister(Guid key, IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.UnregisterIVesselAntenna">
            <summary>Sets the shim of AntennaManager.Unregister(IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.UnregisterProtosVessel">
            <summary>Sets the shim of AntennaManager.UnregisterProtos(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager._GetEnumeratorb__aListOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.&lt;GetEnumerator&gt;b__a(List`1&lt;IVesselAntenna&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager._GetEnumeratorb__bListOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.&lt;GetEnumerator&gt;b__b(List`1&lt;IVesselAntenna&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager._RegisterProtosb__8ProtoPartModuleSnapshot">
            <summary>Sets the shim of AntennaManager.&lt;RegisterProtos&gt;b__8(ProtoPartModuleSnapshot ppms)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager._ctorb__0IVesselAntenna">
            <summary>Sets the shim of AntennaManager.&lt;.ctor&gt;b__0(IVesselAntenna param0)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager._ctorb__1IVesselAntenna">
            <summary>Sets the shim of AntennaManager.&lt;.ctor&gt;b__1(IVesselAntenna param0)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager._ctorb__2IVesselAntenna">
            <summary>Sets the shim of AntennaManager.&lt;.ctor&gt;b__2(IVesselAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager._ctorb__3IVesselAntenna">
            <summary>Sets the shim of AntennaManager.&lt;.ctor&gt;b__3(IVesselAntenna a)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAntennaManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.ForGuid">
            <summary>Sets the shim of AntennaManager.For(Guid key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.GetEnumerator">
            <summary>Sets the shim of AntennaManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.ItemGetGuid">
            <summary>Sets the shim of AntennaManager.get_Item(Guid g)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.ItemGetISatellite">
            <summary>Sets the shim of AntennaManager.get_Item(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.ItemGetVessel">
            <summary>Sets the shim of AntennaManager.get_Item(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.OnFixedUpdate">
            <summary>Sets the shim of AntennaManager.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.OnRegisterAddActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.add_OnRegister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.OnRegisterRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.remove_OnRegister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.OnUnregisterAddActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.add_OnUnregister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.OnUnregisterRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of AntennaManager.remove_OnUnregister(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.OnVesselAntennaDestroyIVesselAntenna">
            <summary>Sets the shim of AntennaManager.OnVesselAntennaDestroy(IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.RegisterIVesselAntenna">
            <summary>Sets the shim of AntennaManager.Register(IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.RegisterProtosVessel">
            <summary>Sets the shim of AntennaManager.RegisterProtos(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AntennaManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.UnregisterGuidIVesselAntenna">
            <summary>Sets the shim of AntennaManager.Unregister(Guid key, IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.UnregisterIVesselAntenna">
            <summary>Sets the shim of AntennaManager.Unregister(IVesselAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaManager.AllInstances.UnregisterProtosVessel">
            <summary>Sets the shim of AntennaManager.UnregisterProtos(Vessel vessel)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAntennaWindow">
            <summary>Shim type of RemoteTech.AntennaWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaWindow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaWindow.#ctor(RemoteTech.AntennaWindow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaWindow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAntennaWindow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AntennaGet">
            <summary>Sets the shim of AntennaWindow.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AntennaSetIAntenna">
            <summary>Sets the shim of AntennaWindow.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.ConstructorIAntenna">
            <summary>Sets the shim of AntennaWindow.AntennaWindow(IAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.Hide">
            <summary>Sets the shim of AntennaWindow.Hide()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.OnVesselChangeVessel">
            <summary>Sets the shim of AntennaWindow.OnVesselChange(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.Show">
            <summary>Sets the shim of AntennaWindow.Show()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.StaticConstructor">
            <summary>Sets the shim of AntennaWindow.AntennaWindow()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.WindowInt32">
            <summary>Sets the shim of AntennaWindow.Window(Int32 uid)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAntennaWindow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AllInstances.AntennaGet">
            <summary>Sets the shim of AntennaWindow.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AllInstances.AntennaSetIAntenna">
            <summary>Sets the shim of AntennaWindow.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AllInstances.Hide">
            <summary>Sets the shim of AntennaWindow.Hide()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AllInstances.OnVesselChangeVessel">
            <summary>Sets the shim of AntennaWindow.OnVesselChange(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AllInstances.Show">
            <summary>Sets the shim of AntennaWindow.Show()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAntennaWindow.AllInstances.WindowInt32">
            <summary>Sets the shim of AntennaWindow.Window(Int32 uid)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAttitudeCommand">
            <summary>Shim type of RemoteTech.AttitudeCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeCommand.#ctor(RemoteTech.AttitudeCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.Abort">
            <summary>Sets the shim of AttitudeCommand.Abort()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AltitudeGet">
            <summary>Sets the shim of AttitudeCommand.get_Altitude()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AltitudeSetSingle">
            <summary>Sets the shim of AttitudeCommand.set_Altitude(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AttitudeGet">
            <summary>Sets the shim of AttitudeCommand.get_Attitude()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AttitudeSetFlightAttitude">
            <summary>Sets the shim of AttitudeCommand.set_Attitude(FlightAttitude value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.Constructor">
            <summary>Sets the shim of AttitudeCommand.AttitudeCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.DescriptionGet">
            <summary>Sets the shim of AttitudeCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of AttitudeCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.FrameGet">
            <summary>Sets the shim of AttitudeCommand.get_Frame()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.FrameSetReferenceFrame">
            <summary>Sets the shim of AttitudeCommand.set_Frame(ReferenceFrame value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.KillRot">
            <summary>Sets the shim of AttitudeCommand.KillRot()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.ManeuverNode">
            <summary>Sets the shim of AttitudeCommand.ManeuverNode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.ModeGet">
            <summary>Sets the shim of AttitudeCommand.get_Mode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.ModeSetFlightMode">
            <summary>Sets the shim of AttitudeCommand.set_Mode(FlightMode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.Off">
            <summary>Sets the shim of AttitudeCommand.Off()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.OrientationGet">
            <summary>Sets the shim of AttitudeCommand.get_Orientation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.OrientationSetQuaternion">
            <summary>Sets the shim of AttitudeCommand.set_Orientation(Quaternion value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.PopFlightComputer">
            <summary>Sets the shim of AttitudeCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.PriorityGet">
            <summary>Sets the shim of AttitudeCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.StaticConstructor">
            <summary>Sets the shim of AttitudeCommand.AttitudeCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.WithAltitudeSingle">
            <summary>Sets the shim of AttitudeCommand.WithAltitude(Single height)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.WithAttitudeFlightAttitudeReferenceFrame">
            <summary>Sets the shim of AttitudeCommand.WithAttitude(FlightAttitude att, ReferenceFrame frame)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.WithSurfaceDoubleDoubleDouble">
            <summary>Sets the shim of AttitudeCommand.WithSurface(Double pitch, Double yaw, Double roll)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.Abort">
            <summary>Sets the shim of AttitudeCommand.Abort()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.AltitudeGet">
            <summary>Sets the shim of AttitudeCommand.get_Altitude()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.AltitudeSetSingle">
            <summary>Sets the shim of AttitudeCommand.set_Altitude(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.AttitudeGet">
            <summary>Sets the shim of AttitudeCommand.get_Attitude()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.AttitudeSetFlightAttitude">
            <summary>Sets the shim of AttitudeCommand.set_Attitude(FlightAttitude value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of AttitudeCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of AttitudeCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.FrameGet">
            <summary>Sets the shim of AttitudeCommand.get_Frame()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.FrameSetReferenceFrame">
            <summary>Sets the shim of AttitudeCommand.set_Frame(ReferenceFrame value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.ModeGet">
            <summary>Sets the shim of AttitudeCommand.get_Mode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.ModeSetFlightMode">
            <summary>Sets the shim of AttitudeCommand.set_Mode(FlightMode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.OrientationGet">
            <summary>Sets the shim of AttitudeCommand.get_Orientation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.OrientationSetQuaternion">
            <summary>Sets the shim of AttitudeCommand.set_Orientation(Quaternion value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of AttitudeCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeCommand.AllInstances.PriorityGet">
            <summary>Sets the shim of AttitudeCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAttitudeFragment">
            <summary>Shim type of RemoteTech.AttitudeFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeFragment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeFragment.#ctor(RemoteTech.AttitudeFragment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeFragment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeFragment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimAttitudeFragment.Bind(RemoteTech.IFragment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AttitudeGet">
            <summary>Sets the shim of AttitudeFragment.get_Attitude()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.Confirm">
            <summary>Sets the shim of AttitudeFragment.Confirm()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.ConstructorFlightComputerAction">
            <summary>Sets the shim of AttitudeFragment.AttitudeFragment(FlightComputer fc, Action queue)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.DeltaVGet">
            <summary>Sets the shim of AttitudeFragment.get_DeltaV()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.Draw">
            <summary>Sets the shim of AttitudeFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.DurationGet">
            <summary>Sets the shim of AttitudeFragment.get_Duration()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.DurationSetDouble">
            <summary>Sets the shim of AttitudeFragment.set_Duration(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.HeadingGet">
            <summary>Sets the shim of AttitudeFragment.get_Heading()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.HeadingSetSingle">
            <summary>Sets the shim of AttitudeFragment.set_Heading(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.OnAttitudeClickInt32">
            <summary>Sets the shim of AttitudeFragment.OnAttitudeClick(Int32 state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.OnBurnClick">
            <summary>Sets the shim of AttitudeFragment.OnBurnClick()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.OnExecClick">
            <summary>Sets the shim of AttitudeFragment.OnExecClick()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.OnModeClickInt32">
            <summary>Sets the shim of AttitudeFragment.OnModeClick(Int32 state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.PitchGet">
            <summary>Sets the shim of AttitudeFragment.get_Pitch()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.PitchSetSingle">
            <summary>Sets the shim of AttitudeFragment.set_Pitch(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.RollGet">
            <summary>Sets the shim of AttitudeFragment.get_Roll()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.RollSetSingle">
            <summary>Sets the shim of AttitudeFragment.set_Roll(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment._Drawb__0">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__0()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment._Drawb__1">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__1()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment._Drawb__2">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__2()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment._Drawb__3">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__3()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment._Drawb__4">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__4()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment._Drawb__5">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__5()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.AttitudeGet">
            <summary>Sets the shim of AttitudeFragment.get_Attitude()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.Confirm">
            <summary>Sets the shim of AttitudeFragment.Confirm()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.DeltaVGet">
            <summary>Sets the shim of AttitudeFragment.get_DeltaV()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.Draw">
            <summary>Sets the shim of AttitudeFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.DurationGet">
            <summary>Sets the shim of AttitudeFragment.get_Duration()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.DurationSetDouble">
            <summary>Sets the shim of AttitudeFragment.set_Duration(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.HeadingGet">
            <summary>Sets the shim of AttitudeFragment.get_Heading()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.HeadingSetSingle">
            <summary>Sets the shim of AttitudeFragment.set_Heading(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.OnAttitudeClickInt32">
            <summary>Sets the shim of AttitudeFragment.OnAttitudeClick(Int32 state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.OnBurnClick">
            <summary>Sets the shim of AttitudeFragment.OnBurnClick()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.OnExecClick">
            <summary>Sets the shim of AttitudeFragment.OnExecClick()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.OnModeClickInt32">
            <summary>Sets the shim of AttitudeFragment.OnModeClick(Int32 state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.PitchGet">
            <summary>Sets the shim of AttitudeFragment.get_Pitch()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.PitchSetSingle">
            <summary>Sets the shim of AttitudeFragment.set_Pitch(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.RollGet">
            <summary>Sets the shim of AttitudeFragment.get_Roll()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances.RollSetSingle">
            <summary>Sets the shim of AttitudeFragment.set_Roll(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances._Drawb__0">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__0()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances._Drawb__1">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__1()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances._Drawb__2">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__2()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances._Drawb__3">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__3()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances._Drawb__4">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__4()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimAttitudeFragment.AllInstances._Drawb__5">
            <summary>Sets the shim of AttitudeFragment.&lt;Draw&gt;b__5()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimBurnCommand">
            <summary>Shim type of RemoteTech.BurnCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimBurnCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimBurnCommand.#ctor(RemoteTech.BurnCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimBurnCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimBurnCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimBurnCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimBurnCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.Abort">
            <summary>Sets the shim of BurnCommand.Abort()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.Constructor">
            <summary>Sets the shim of BurnCommand.BurnCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.DeltaVGet">
            <summary>Sets the shim of BurnCommand.get_DeltaV()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.DeltaVSetDouble">
            <summary>Sets the shim of BurnCommand.set_DeltaV(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.DescriptionGet">
            <summary>Sets the shim of BurnCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.DurationGet">
            <summary>Sets the shim of BurnCommand.get_Duration()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.DurationSetDouble">
            <summary>Sets the shim of BurnCommand.set_Duration(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of BurnCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.Off">
            <summary>Sets the shim of BurnCommand.Off()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.PopFlightComputer">
            <summary>Sets the shim of BurnCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.PriorityGet">
            <summary>Sets the shim of BurnCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.ThrottleGet">
            <summary>Sets the shim of BurnCommand.get_Throttle()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.ThrottleSetSingle">
            <summary>Sets the shim of BurnCommand.set_Throttle(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.WithDeltaVSingleDouble">
            <summary>Sets the shim of BurnCommand.WithDeltaV(Single throttle, Double delta)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.WithDurationSingleDouble">
            <summary>Sets the shim of BurnCommand.WithDuration(Single throttle, Double duration)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimBurnCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.Abort">
            <summary>Sets the shim of BurnCommand.Abort()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.DeltaVGet">
            <summary>Sets the shim of BurnCommand.get_DeltaV()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.DeltaVSetDouble">
            <summary>Sets the shim of BurnCommand.set_DeltaV(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of BurnCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.DurationGet">
            <summary>Sets the shim of BurnCommand.get_Duration()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.DurationSetDouble">
            <summary>Sets the shim of BurnCommand.set_Duration(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of BurnCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of BurnCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.PriorityGet">
            <summary>Sets the shim of BurnCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.ThrottleGet">
            <summary>Sets the shim of BurnCommand.get_Throttle()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimBurnCommand.AllInstances.ThrottleSetSingle">
            <summary>Sets the shim of BurnCommand.set_Throttle(Single value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimCachedField`1">
            <summary>Shim type of RemoteTech.CachedField`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCachedField`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCachedField`1.#ctor(RemoteTech.CachedField{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCachedField`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCachedField`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCachedField`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCachedField`1.CacheFuncOfT0">
            <summary>Sets the shim of CachedField`1.Cache(Func`1&lt;!0&gt; getter)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCachedField`1.Constructor">
            <summary>Sets the shim of CachedField`1.CachedField`1()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimCachedField`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCachedField`1.AllInstances.CacheFuncOfT0">
            <summary>Sets the shim of CachedField`1.Cache(Func`1&lt;!0&gt; getter)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimCancelCommand">
            <summary>Shim type of RemoteTech.CancelCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCancelCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCancelCommand.#ctor(RemoteTech.CancelCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCancelCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCancelCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCancelCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCancelCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.CommandGet">
            <summary>Sets the shim of CancelCommand.get_Command()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.CommandSetICommand">
            <summary>Sets the shim of CancelCommand.set_Command(ICommand value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.Constructor">
            <summary>Sets the shim of CancelCommand.CancelCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.DescriptionGet">
            <summary>Sets the shim of CancelCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.ExtraDelayGet">
            <summary>Sets the shim of CancelCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.ExtraDelaySetDouble">
            <summary>Sets the shim of CancelCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.PopFlightComputer">
            <summary>Sets the shim of CancelCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.ResetActive">
            <summary>Sets the shim of CancelCommand.ResetActive()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.WithCommandICommand">
            <summary>Sets the shim of CancelCommand.WithCommand(ICommand cmd)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimCancelCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.AllInstances.CommandGet">
            <summary>Sets the shim of CancelCommand.get_Command()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.AllInstances.CommandSetICommand">
            <summary>Sets the shim of CancelCommand.set_Command(ICommand value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of CancelCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.AllInstances.ExtraDelayGet">
            <summary>Sets the shim of CancelCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.AllInstances.ExtraDelaySetDouble">
            <summary>Sets the shim of CancelCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCancelCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of CancelCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimCelestialBodyExtensions">
            <summary>Shim type of RemoteTech.CelestialBodyExtensions</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCelestialBodyExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCelestialBodyExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimCelestialBodyExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCelestialBodyExtensions.AsSatelliteCelestialBody">
            <summary>Sets the shim of CelestialBodyExtensions.AsSatellite(CelestialBody cb)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimCelestialBodyExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimConnectionMap">
            <summary>Shim type of RemoteTech.ConnectionMap</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.#ctor(RemoteTech.ConnectionMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{RemoteTech.ISatellite,RemoteTech.NetworkRoute{RemoteTech.ISatellite}}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{RemoteTech.ISatellite,RemoteTech.NetworkRoute{RemoteTech.ISatellite}}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{RemoteTech.ISatellite,RemoteTech.NetworkRoute{RemoteTech.ISatellite}}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.Generic.IDictionary{RemoteTech.ISatellite,RemoteTech.NetworkRoute{RemoteTech.ISatellite}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Collections.Generic.IReadOnlyDictionary{RemoteTech.ISatellite,RemoteTech.NetworkRoute{RemoteTech.ISatellite}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimConnectionMap.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.ConnectedToCommandStationISatellite">
            <summary>Sets the shim of ConnectionMap.ConnectedToCommandStation(ISatellite satellite)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.ConnectedToKSC">
            <summary>Sets the shim of ConnectionMap.ConnectedToKSC()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.Constructor">
            <summary>Sets the shim of ConnectionMap.ConnectionMap()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.DelayToCommandStationISatellite">
            <summary>Sets the shim of ConnectionMap.DelayToCommandStation(ISatellite satellite)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.DelayToKSC">
            <summary>Sets the shim of ConnectionMap.DelayToKSC()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.ShortestDelay">
            <summary>Sets the shim of ConnectionMap.ShortestDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap._DelayToKSCb__0NetworkRouteOfISatellite">
            <summary>Sets the shim of ConnectionMap.&lt;DelayToKSC&gt;b__0(NetworkRoute`1&lt;ISatellite&gt; r)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimConnectionMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.AllInstances.ConnectedToCommandStationISatellite">
            <summary>Sets the shim of ConnectionMap.ConnectedToCommandStation(ISatellite satellite)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.AllInstances.ConnectedToKSC">
            <summary>Sets the shim of ConnectionMap.ConnectedToKSC()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.AllInstances.DelayToCommandStationISatellite">
            <summary>Sets the shim of ConnectionMap.DelayToCommandStation(ISatellite satellite)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.AllInstances.DelayToKSC">
            <summary>Sets the shim of ConnectionMap.DelayToKSC()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimConnectionMap.AllInstances.ShortestDelay">
            <summary>Sets the shim of ConnectionMap.ShortestDelay()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimDelayedFlightCtrlState">
            <summary>Shim type of RemoteTech.DelayedFlightCtrlState</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedFlightCtrlState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedFlightCtrlState.#ctor(RemoteTech.DelayedFlightCtrlState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedFlightCtrlState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedFlightCtrlState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedFlightCtrlState.Bind(System.IComparable{RemoteTech.DelayedFlightCtrlState})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.CompareToDelayedFlightCtrlState">
            <summary>Sets the shim of DelayedFlightCtrlState.CompareTo(DelayedFlightCtrlState dfcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.ConstructorFlightCtrlState">
            <summary>Sets the shim of DelayedFlightCtrlState.DelayedFlightCtrlState(FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.StateGet">
            <summary>Sets the shim of DelayedFlightCtrlState.get_State()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.StateSetFlightCtrlState">
            <summary>Sets the shim of DelayedFlightCtrlState.set_State(FlightCtrlState value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.TimeStampGet">
            <summary>Sets the shim of DelayedFlightCtrlState.get_TimeStamp()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.TimeStampSetDouble">
            <summary>Sets the shim of DelayedFlightCtrlState.set_TimeStamp(Double value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimDelayedFlightCtrlState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.AllInstances.CompareToDelayedFlightCtrlState">
            <summary>Sets the shim of DelayedFlightCtrlState.CompareTo(DelayedFlightCtrlState dfcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.AllInstances.StateGet">
            <summary>Sets the shim of DelayedFlightCtrlState.get_State()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.AllInstances.StateSetFlightCtrlState">
            <summary>Sets the shim of DelayedFlightCtrlState.set_State(FlightCtrlState value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.AllInstances.TimeStampGet">
            <summary>Sets the shim of DelayedFlightCtrlState.get_TimeStamp()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedFlightCtrlState.AllInstances.TimeStampSetDouble">
            <summary>Sets the shim of DelayedFlightCtrlState.set_TimeStamp(Double value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimDelayedManeuver">
            <summary>Shim type of RemoteTech.DelayedManeuver</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedManeuver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedManeuver.#ctor(RemoteTech.DelayedManeuver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedManeuver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedManeuver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDelayedManeuver.Bind(System.IComparable{RemoteTech.DelayedManeuver})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.CompareToDelayedManeuver">
            <summary>Sets the shim of DelayedManeuver.CompareTo(DelayedManeuver dm)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.ConstructorManeuverNode">
            <summary>Sets the shim of DelayedManeuver.DelayedManeuver(ManeuverNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.NodeGet">
            <summary>Sets the shim of DelayedManeuver.get_Node()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.NodeSetManeuverNode">
            <summary>Sets the shim of DelayedManeuver.set_Node(ManeuverNode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.TimeStampGet">
            <summary>Sets the shim of DelayedManeuver.get_TimeStamp()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.TimeStampSetDouble">
            <summary>Sets the shim of DelayedManeuver.set_TimeStamp(Double value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimDelayedManeuver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.AllInstances.CompareToDelayedManeuver">
            <summary>Sets the shim of DelayedManeuver.CompareTo(DelayedManeuver dm)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.AllInstances.NodeGet">
            <summary>Sets the shim of DelayedManeuver.get_Node()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.AllInstances.NodeSetManeuverNode">
            <summary>Sets the shim of DelayedManeuver.set_Node(ManeuverNode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.AllInstances.TimeStampGet">
            <summary>Sets the shim of DelayedManeuver.get_TimeStamp()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDelayedManeuver.AllInstances.TimeStampSetDouble">
            <summary>Sets the shim of DelayedManeuver.set_TimeStamp(Double value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimDish">
            <summary>Shim type of RemoteTech.Dish</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDish.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDish.#ctor(RemoteTech.Dish)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDish.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimDish.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDish.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDish.ConstructorGuidDoubleSingle">
            <summary>Sets the shim of Dish.Dish(Guid target, Double radians, Single distance)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDish.ToString">
            <summary>Sets the shim of Dish.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimDish.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimDish.AllInstances.ToString01">
            <summary>Sets the shim of Dish.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher">
            <summary>Shim type of RemoteTech.EZGUIPointerDisablePatcher</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.#ctor(RemoteTech.EZGUIPointerDisablePatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.Constructor">
            <summary>Sets the shim of EZGUIPointerDisablePatcher.EZGUIPointerDisablePatcher()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.Dispose">
            <summary>Sets the shim of EZGUIPointerDisablePatcher.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.EZGUIMouseTouchPtrListenerPOINTER_INFO">
            <summary>Sets the shim of EZGUIPointerDisablePatcher.EZGUIMouseTouchPtrListener(POINTER_INFO ptr)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.RegisterFuncOfRect">
            <summary>Sets the shim of EZGUIPointerDisablePatcher.Register(Func`1&lt;Rect&gt; del)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.UnregisterFuncOfRect">
            <summary>Sets the shim of EZGUIPointerDisablePatcher.Unregister(Func`1&lt;Rect&gt; del)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.AllInstances.Dispose">
            <summary>Sets the shim of EZGUIPointerDisablePatcher.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEZGUIPointerDisablePatcher.AllInstances.EZGUIMouseTouchPtrListenerPOINTER_INFO">
            <summary>Sets the shim of EZGUIPointerDisablePatcher.EZGUIMouseTouchPtrListener(POINTER_INFO ptr)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimEventCommand">
            <summary>Shim type of RemoteTech.EventCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventCommand.#ctor(RemoteTech.EventCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.BaseEventGet">
            <summary>Sets the shim of EventCommand.get_BaseEvent()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.BaseEventSetBaseEvent">
            <summary>Sets the shim of EventCommand.set_BaseEvent(BaseEvent value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.Constructor">
            <summary>Sets the shim of EventCommand.EventCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.DescriptionGet">
            <summary>Sets the shim of EventCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.EventBaseEvent">
            <summary>Sets the shim of EventCommand.Event(BaseEvent ev)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.PopFlightComputer">
            <summary>Sets the shim of EventCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimEventCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.AllInstances.BaseEventGet">
            <summary>Sets the shim of EventCommand.get_BaseEvent()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.AllInstances.BaseEventSetBaseEvent">
            <summary>Sets the shim of EventCommand.set_BaseEvent(BaseEvent value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of EventCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of EventCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimEventListWrapper`1">
            <summary>Shim type of RemoteTech.EventListWrapper`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.#ctor(RemoteTech.EventListWrapper{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.Bind(IConfigNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimEventListWrapper`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AddT0">
            <summary>Sets the shim of EventListWrapper`1.Add(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AddingNewAddAction">
            <summary>Sets the shim of EventListWrapper`1.add_AddingNew(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AddingNewRemoveAction">
            <summary>Sets the shim of EventListWrapper`1.remove_AddingNew(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.Clear">
            <summary>Sets the shim of EventListWrapper`1.Clear()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.Constructor">
            <summary>Sets the shim of EventListWrapper`1.EventListWrapper`1()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.ConstructorIListOfT0">
            <summary>Sets the shim of EventListWrapper`1.EventListWrapper`1(IList`1&lt;!0&gt; list)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.ContainsT0">
            <summary>Sets the shim of EventListWrapper`1.Contains(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of EventListWrapper`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.CountGet">
            <summary>Sets the shim of EventListWrapper`1.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.GetEnumerator">
            <summary>Sets the shim of EventListWrapper`1.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.IndexOfT0">
            <summary>Sets the shim of EventListWrapper`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.InsertInt32T0">
            <summary>Sets the shim of EventListWrapper`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.IsReadOnlyGet">
            <summary>Sets the shim of EventListWrapper`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.ItemGetInt32">
            <summary>Sets the shim of EventListWrapper`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.ItemSetInt32T0">
            <summary>Sets the shim of EventListWrapper`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.ListChangedAddAction">
            <summary>Sets the shim of EventListWrapper`1.add_ListChanged(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.ListChangedRemoveAction">
            <summary>Sets the shim of EventListWrapper`1.remove_ListChanged(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.LoadConfigNode">
            <summary>Sets the shim of EventListWrapper`1.Load(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.RemoveAtInt32">
            <summary>Sets the shim of EventListWrapper`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.RemoveT0">
            <summary>Sets the shim of EventListWrapper`1.Remove(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.SaveConfigNode">
            <summary>Sets the shim of EventListWrapper`1.Save(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EventListWrapper`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1._ctorb__0">
            <summary>Sets the shim of EventListWrapper`1.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1._ctorb__1">
            <summary>Sets the shim of EventListWrapper`1.&lt;.ctor&gt;b__1()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1._ctorb__4">
            <summary>Sets the shim of EventListWrapper`1.&lt;.ctor&gt;b__4()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1._ctorb__5">
            <summary>Sets the shim of EventListWrapper`1.&lt;.ctor&gt;b__5()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.AddT0">
            <summary>Sets the shim of EventListWrapper`1.Add(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.AddingNewAddAction">
            <summary>Sets the shim of EventListWrapper`1.add_AddingNew(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.AddingNewRemoveAction">
            <summary>Sets the shim of EventListWrapper`1.remove_AddingNew(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.Clear">
            <summary>Sets the shim of EventListWrapper`1.Clear()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.ContainsT0">
            <summary>Sets the shim of EventListWrapper`1.Contains(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of EventListWrapper`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.CountGet">
            <summary>Sets the shim of EventListWrapper`1.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of EventListWrapper`1.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of EventListWrapper`1.IndexOf(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of EventListWrapper`1.Insert(Int32 index, !0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of EventListWrapper`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EventListWrapper`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of EventListWrapper`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.ListChangedAddAction">
            <summary>Sets the shim of EventListWrapper`1.add_ListChanged(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.ListChangedRemoveAction">
            <summary>Sets the shim of EventListWrapper`1.remove_ListChanged(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.LoadConfigNode">
            <summary>Sets the shim of EventListWrapper`1.Load(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of EventListWrapper`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.RemoveT0">
            <summary>Sets the shim of EventListWrapper`1.Remove(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.SaveConfigNode">
            <summary>Sets the shim of EventListWrapper`1.Save(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimEventListWrapper`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EventListWrapper`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFilterOverlay">
            <summary>Shim type of RemoteTech.FilterOverlay</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFilterOverlay.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFilterOverlay.#ctor(RemoteTech.FilterOverlay)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFilterOverlay.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFilterOverlay.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFilterOverlay.Bind(RemoteTech.IFragment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFilterOverlay.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.Constructor">
            <summary>Sets the shim of FilterOverlay.FilterOverlay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.Dispose">
            <summary>Sets the shim of FilterOverlay.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.Draw">
            <summary>Sets the shim of FilterOverlay.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.OnChangeTargetMapObject">
            <summary>Sets the shim of FilterOverlay.OnChangeTarget(MapObject mo)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.OnClickCompath">
            <summary>Sets the shim of FilterOverlay.OnClickCompath()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.OnClickPlanet">
            <summary>Sets the shim of FilterOverlay.OnClickPlanet()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.OnClickStatus">
            <summary>Sets the shim of FilterOverlay.OnClickStatus()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.OnClickType">
            <summary>Sets the shim of FilterOverlay.OnClickType()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.OnEnterMapView">
            <summary>Sets the shim of FilterOverlay.OnEnterMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.OnExitMapView">
            <summary>Sets the shim of FilterOverlay.OnExitMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.PositionAntennaGet">
            <summary>Sets the shim of FilterOverlay.get_PositionAntenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.PositionGet">
            <summary>Sets the shim of FilterOverlay.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.PositionSatelliteGet">
            <summary>Sets the shim of FilterOverlay.get_PositionSatellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.StyleStatusButtonGet">
            <summary>Sets the shim of FilterOverlay.get_StyleStatusButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.TextureComButtonGet">
            <summary>Sets the shim of FilterOverlay.get_TextureComButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.TexturePlanetButtonGet">
            <summary>Sets the shim of FilterOverlay.get_TexturePlanetButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.TextureTypeButtonGet">
            <summary>Sets the shim of FilterOverlay.get_TextureTypeButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.Update">
            <summary>Sets the shim of FilterOverlay.Update()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFilterOverlay.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.Dispose">
            <summary>Sets the shim of FilterOverlay.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.Draw">
            <summary>Sets the shim of FilterOverlay.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.OnChangeTargetMapObject">
            <summary>Sets the shim of FilterOverlay.OnChangeTarget(MapObject mo)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.OnClickCompath">
            <summary>Sets the shim of FilterOverlay.OnClickCompath()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.OnClickPlanet">
            <summary>Sets the shim of FilterOverlay.OnClickPlanet()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.OnClickStatus">
            <summary>Sets the shim of FilterOverlay.OnClickStatus()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.OnClickType">
            <summary>Sets the shim of FilterOverlay.OnClickType()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.OnEnterMapView">
            <summary>Sets the shim of FilterOverlay.OnEnterMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.OnExitMapView">
            <summary>Sets the shim of FilterOverlay.OnExitMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.PositionAntennaGet">
            <summary>Sets the shim of FilterOverlay.get_PositionAntenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.PositionGet">
            <summary>Sets the shim of FilterOverlay.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.PositionSatelliteGet">
            <summary>Sets the shim of FilterOverlay.get_PositionSatellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.StyleStatusButtonGet">
            <summary>Sets the shim of FilterOverlay.get_StyleStatusButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.TextureComButtonGet">
            <summary>Sets the shim of FilterOverlay.get_TextureComButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.TexturePlanetButtonGet">
            <summary>Sets the shim of FilterOverlay.get_TexturePlanetButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.TextureTypeButtonGet">
            <summary>Sets the shim of FilterOverlay.get_TextureTypeButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFilterOverlay.AllInstances.Update">
            <summary>Sets the shim of FilterOverlay.Update()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFlightComputer">
            <summary>Shim type of RemoteTech.FlightComputer</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputer.#ctor(RemoteTech.FlightComputer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.ActiveCommandsGet">
            <summary>Sets the shim of FlightComputer.get_ActiveCommands()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.ConstructorISignalProcessor">
            <summary>Sets the shim of FlightComputer.FlightComputer(ISignalProcessor s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.DelayGet">
            <summary>Sets the shim of FlightComputer.get_Delay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.DelayedManeuverGet">
            <summary>Sets the shim of FlightComputer.get_DelayedManeuver()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.DelayedManeuverSetManeuverNode">
            <summary>Sets the shim of FlightComputer.set_DelayedManeuver(ManeuverNode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.DelayedTargetGet">
            <summary>Sets the shim of FlightComputer.get_DelayedTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.DelayedTargetSetITargetable">
            <summary>Sets the shim of FlightComputer.set_DelayedTarget(ITargetable value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.Dispose">
            <summary>Sets the shim of FlightComputer.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.EnqueueFlightCtrlState">
            <summary>Sets the shim of FlightComputer.Enqueue(FlightCtrlState fs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.EnqueueICommandBooleanBooleanBoolean">
            <summary>Sets the shim of FlightComputer.Enqueue(ICommand cmd, Boolean ignore_control, Boolean ignore_delay, Boolean ignore_extra)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.InputAllowedGet">
            <summary>Sets the shim of FlightComputer.get_InputAllowed()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.IsMasterGet">
            <summary>Sets the shim of FlightComputer.get_IsMaster()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.OnFixedUpdate">
            <summary>Sets the shim of FlightComputer.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.OnFlyByWirePostFlightCtrlState">
            <summary>Sets the shim of FlightComputer.OnFlyByWirePost(FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.OnFlyByWirePreFlightCtrlState">
            <summary>Sets the shim of FlightComputer.OnFlyByWirePre(FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.OnUpdate">
            <summary>Sets the shim of FlightComputer.OnUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.PopCommand">
            <summary>Sets the shim of FlightComputer.PopCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.PopFlightCtrlFlightCtrlStateISatellite">
            <summary>Sets the shim of FlightComputer.PopFlightCtrl(FlightCtrlState fcs, ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.QueuedCommandsGet">
            <summary>Sets the shim of FlightComputer.get_QueuedCommands()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.RemoveICommand">
            <summary>Sets the shim of FlightComputer.Remove(ICommand cmd)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.Reset">
            <summary>Sets the shim of FlightComputer.Reset()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.SanctionedPilotsGet">
            <summary>Sets the shim of FlightComputer.get_SanctionedPilots()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.SanctionedPilotsSetListOfActionOfFlightCtrlState">
            <summary>Sets the shim of FlightComputer.set_SanctionedPilots(List`1&lt;Action`1&lt;FlightCtrlState&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.SignalProcessorGet">
            <summary>Sets the shim of FlightComputer.get_SignalProcessor()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.SignalProcessorSetISignalProcessor">
            <summary>Sets the shim of FlightComputer.set_SignalProcessor(ISignalProcessor value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.StatusGet">
            <summary>Sets the shim of FlightComputer.get_Status()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.TotalDelayGet">
            <summary>Sets the shim of FlightComputer.get_TotalDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.TotalDelaySetDouble">
            <summary>Sets the shim of FlightComputer.set_TotalDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.VesselGet">
            <summary>Sets the shim of FlightComputer.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.VesselSetVessel">
            <summary>Sets the shim of FlightComputer.set_Vessel(Vessel value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.WindowGet">
            <summary>Sets the shim of FlightComputer.get_Window()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer._PopCommandb__4ICommand">
            <summary>Sets the shim of FlightComputer.&lt;PopCommand&gt;b__4(ICommand c)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFlightComputer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.ActiveCommandsGet">
            <summary>Sets the shim of FlightComputer.get_ActiveCommands()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.DelayGet">
            <summary>Sets the shim of FlightComputer.get_Delay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.DelayedManeuverGet">
            <summary>Sets the shim of FlightComputer.get_DelayedManeuver()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.DelayedManeuverSetManeuverNode">
            <summary>Sets the shim of FlightComputer.set_DelayedManeuver(ManeuverNode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.DelayedTargetGet">
            <summary>Sets the shim of FlightComputer.get_DelayedTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.DelayedTargetSetITargetable">
            <summary>Sets the shim of FlightComputer.set_DelayedTarget(ITargetable value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.Dispose">
            <summary>Sets the shim of FlightComputer.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.EnqueueFlightCtrlState">
            <summary>Sets the shim of FlightComputer.Enqueue(FlightCtrlState fs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.EnqueueICommandBooleanBooleanBoolean">
            <summary>Sets the shim of FlightComputer.Enqueue(ICommand cmd, Boolean ignore_control, Boolean ignore_delay, Boolean ignore_extra)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.InputAllowedGet">
            <summary>Sets the shim of FlightComputer.get_InputAllowed()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.IsMasterGet">
            <summary>Sets the shim of FlightComputer.get_IsMaster()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.OnFixedUpdate">
            <summary>Sets the shim of FlightComputer.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.OnFlyByWirePostFlightCtrlState">
            <summary>Sets the shim of FlightComputer.OnFlyByWirePost(FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.OnFlyByWirePreFlightCtrlState">
            <summary>Sets the shim of FlightComputer.OnFlyByWirePre(FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.OnUpdate">
            <summary>Sets the shim of FlightComputer.OnUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.PopCommand">
            <summary>Sets the shim of FlightComputer.PopCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.PopFlightCtrlFlightCtrlStateISatellite">
            <summary>Sets the shim of FlightComputer.PopFlightCtrl(FlightCtrlState fcs, ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.QueuedCommandsGet">
            <summary>Sets the shim of FlightComputer.get_QueuedCommands()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.RemoveICommand">
            <summary>Sets the shim of FlightComputer.Remove(ICommand cmd)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.Reset">
            <summary>Sets the shim of FlightComputer.Reset()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.SanctionedPilotsGet">
            <summary>Sets the shim of FlightComputer.get_SanctionedPilots()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.SanctionedPilotsSetListOfActionOfFlightCtrlState">
            <summary>Sets the shim of FlightComputer.set_SanctionedPilots(List`1&lt;Action`1&lt;FlightCtrlState&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.SignalProcessorGet">
            <summary>Sets the shim of FlightComputer.get_SignalProcessor()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.SignalProcessorSetISignalProcessor">
            <summary>Sets the shim of FlightComputer.set_SignalProcessor(ISignalProcessor value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.StatusGet">
            <summary>Sets the shim of FlightComputer.get_Status()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.TotalDelayGet">
            <summary>Sets the shim of FlightComputer.get_TotalDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.TotalDelaySetDouble">
            <summary>Sets the shim of FlightComputer.set_TotalDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.VesselGet">
            <summary>Sets the shim of FlightComputer.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.VesselSetVessel">
            <summary>Sets the shim of FlightComputer.set_Vessel(Vessel value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputer.AllInstances.WindowGet">
            <summary>Sets the shim of FlightComputer.get_Window()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFlightComputerWindow">
            <summary>Shim type of RemoteTech.FlightComputerWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputerWindow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputerWindow.#ctor(RemoteTech.FlightComputerWindow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputerWindow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightComputerWindow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputerWindow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputerWindow.ConstructorFlightComputer">
            <summary>Sets the shim of FlightComputerWindow.FlightComputerWindow(FlightComputer fc)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputerWindow.WindowInt32">
            <summary>Sets the shim of FlightComputerWindow.Window(Int32 id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputerWindow._ctorb__0">
            <summary>Sets the shim of FlightComputerWindow.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFlightComputerWindow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputerWindow.AllInstances.WindowInt32">
            <summary>Sets the shim of FlightComputerWindow.Window(Int32 id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightComputerWindow.AllInstances._ctorb__0">
            <summary>Sets the shim of FlightComputerWindow.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFlightCore">
            <summary>Shim type of RemoteTech.FlightCore</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightCore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightCore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightCore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightCore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightCore.GetTotalThrustVessel">
            <summary>Sets the shim of FlightCore.GetTotalThrust(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightCore.HoldAttitudeFlightCtrlStateFlightComputerReferenceFrameFlightAttitudeQuaternion">
            <summary>Sets the shim of FlightCore.HoldAttitude(FlightCtrlState fs, FlightComputer f, ReferenceFrame frame, FlightAttitude attitude, Quaternion extra)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightCore.HoldOrientationFlightCtrlStateFlightComputerQuaternion">
            <summary>Sets the shim of FlightCore.HoldOrientation(FlightCtrlState fs, FlightComputer f, Quaternion target)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightCore._GetTotalThrustb__0Part">
            <summary>Sets the shim of FlightCore.&lt;GetTotalThrust&gt;b__0(Part p)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFlightUIPatcher">
            <summary>Shim type of RemoteTech.FlightUIPatcher</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightUIPatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightUIPatcher.#ctor(RemoteTech.FlightUIPatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightUIPatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFlightUIPatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher.ActivateActionGroupKSPActionGroup">
            <summary>Sets the shim of FlightUIPatcher.ActivateActionGroup(KSPActionGroup ag)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher.Constructor">
            <summary>Sets the shim of FlightUIPatcher.FlightUIPatcher()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher.Patch">
            <summary>Sets the shim of FlightUIPatcher.Patch()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher._Patchb__0">
            <summary>Sets the shim of FlightUIPatcher.&lt;Patch&gt;b__0()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher._Patchb__1">
            <summary>Sets the shim of FlightUIPatcher.&lt;Patch&gt;b__1()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher._Patchb__2">
            <summary>Sets the shim of FlightUIPatcher.&lt;Patch&gt;b__2()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFlightUIPatcher._Patchb__3">
            <summary>Sets the shim of FlightUIPatcher.&lt;Patch&gt;b__3()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFlightUIPatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFocusFragment">
            <summary>Shim type of RemoteTech.FocusFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusFragment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusFragment.#ctor(RemoteTech.FocusFragment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusFragment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusFragment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusFragment.Bind(RemoteTech.IFragment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusFragment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusFragment.Constructor">
            <summary>Sets the shim of FocusFragment.FocusFragment()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusFragment.Draw">
            <summary>Sets the shim of FocusFragment.Draw()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFocusFragment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusFragment.AllInstances.Draw">
            <summary>Sets the shim of FocusFragment.Draw()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFocusOverlay">
            <summary>Shim type of RemoteTech.FocusOverlay</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusOverlay.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusOverlay.#ctor(RemoteTech.FocusOverlay)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusOverlay.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusOverlay.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusOverlay.Bind(RemoteTech.IFragment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFocusOverlay.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.Constructor">
            <summary>Sets the shim of FocusOverlay.FocusOverlay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.Dispose">
            <summary>Sets the shim of FocusOverlay.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.Draw">
            <summary>Sets the shim of FocusOverlay.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.OnEnterMapView">
            <summary>Sets the shim of FocusOverlay.OnEnterMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.OnExitMapView">
            <summary>Sets the shim of FocusOverlay.OnExitMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.PositionButtonGet">
            <summary>Sets the shim of FocusOverlay.get_PositionButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.PositionFrameGet">
            <summary>Sets the shim of FocusOverlay.get_PositionFrame()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFocusOverlay.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.AllInstances.Dispose">
            <summary>Sets the shim of FocusOverlay.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.AllInstances.Draw">
            <summary>Sets the shim of FocusOverlay.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.AllInstances.OnEnterMapView">
            <summary>Sets the shim of FocusOverlay.OnEnterMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.AllInstances.OnExitMapView">
            <summary>Sets the shim of FocusOverlay.OnExitMapView()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.AllInstances.PositionButtonGet">
            <summary>Sets the shim of FocusOverlay.get_PositionButton()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFocusOverlay.AllInstances.PositionFrameGet">
            <summary>Sets the shim of FocusOverlay.get_PositionFrame()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimFragmentExtensions">
            <summary>Shim type of RemoteTech.FragmentExtensions</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFragmentExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFragmentExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimFragmentExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFragmentExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimFragmentExtensions.DrawIFragmentInt32Int32">
            <summary>Sets the shim of FragmentExtensions.Draw(IFragment fragment, Int32 width, Int32 height)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimGUITextureButtonFactory">
            <summary>Shim type of RemoteTech.GUITextureButtonFactory</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGUITextureButtonFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGUITextureButtonFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGUITextureButtonFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGUITextureButtonFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGUITextureButtonFactory.CreateFromTextureTexture2D">
            <summary>Sets the shim of GUITextureButtonFactory.CreateFromTexture(Texture2D normal)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGUITextureButtonFactory.CreateFromTexturesTexture2DTexture2DTexture2DTexture2D">
            <summary>Sets the shim of GUITextureButtonFactory.CreateFromTextures(Texture2D texNormal, Texture2D texHover, Texture2D texActive, Texture2D texFocus)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimGroup">
            <summary>Shim type of RemoteTech.Group</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroup.#ctor(RemoteTech.Group)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroup.Bind(IConfigNode)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroup.Bind(System.IEquatable{RemoteTech.Group})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.ConstructorString">
            <summary>Sets the shim of Group.Group(String group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.EqualsGroup">
            <summary>Sets the shim of Group.Equals(Group other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.EqualsObject">
            <summary>Sets the shim of Group.Equals(Object obj)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.GetHashCode">
            <summary>Sets the shim of Group.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.LoadConfigNode">
            <summary>Sets the shim of Group.Load(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.SatellitesGet">
            <summary>Sets the shim of Group.get_Satellites()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.SaveConfigNode">
            <summary>Sets the shim of Group.Save(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.StaticConstructor">
            <summary>Sets the shim of Group.Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.ToString">
            <summary>Sets the shim of Group.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.AllInstances.EqualsGroup">
            <summary>Sets the shim of Group.Equals(Group other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.AllInstances.EqualsObject">
            <summary>Sets the shim of Group.Equals(Object obj)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.AllInstances.GetHashCode01">
            <summary>Sets the shim of Group.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.AllInstances.LoadConfigNode">
            <summary>Sets the shim of Group.Load(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.AllInstances.SatellitesGet">
            <summary>Sets the shim of Group.get_Satellites()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.AllInstances.SaveConfigNode">
            <summary>Sets the shim of Group.Save(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroup.AllInstances.ToString01">
            <summary>Sets the shim of Group.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimGroupManager">
            <summary>Shim type of RemoteTech.GroupManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroupManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroupManager.#ctor(RemoteTech.GroupManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroupManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroupManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroupManager.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimGroupManager.Bind(System.Collections.Generic.IEnumerable{RemoteTech.Group})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.Constructor">
            <summary>Sets the shim of GroupManager.GroupManager()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.ForGroup">
            <summary>Sets the shim of GroupManager.For(Group group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.ForString">
            <summary>Sets the shim of GroupManager.For(String group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.GetEnumerator">
            <summary>Sets the shim of GroupManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.GroupsGet">
            <summary>Sets the shim of GroupManager.get_Groups()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.ItemGetString">
            <summary>Sets the shim of GroupManager.get_Item(String name)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.RegisterISatelliteGroup">
            <summary>Sets the shim of GroupManager.Register(ISatellite sat, Group group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.RemoveGroupGroup">
            <summary>Sets the shim of GroupManager.RemoveGroup(Group group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of GroupManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimGroupManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.ForGroup">
            <summary>Sets the shim of GroupManager.For(Group group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.ForString">
            <summary>Sets the shim of GroupManager.For(String group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.GetEnumerator">
            <summary>Sets the shim of GroupManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.GroupsGet">
            <summary>Sets the shim of GroupManager.get_Groups()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.ItemGetString">
            <summary>Sets the shim of GroupManager.get_Item(String name)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.RegisterISatelliteGroup">
            <summary>Sets the shim of GroupManager.Register(ISatellite sat, Group group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.RemoveGroupGroup">
            <summary>Sets the shim of GroupManager.RemoveGroup(Group group)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimGroupManager.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of GroupManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimManeuverCommand">
            <summary>Shim type of RemoteTech.ManeuverCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimManeuverCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimManeuverCommand.#ctor(RemoteTech.ManeuverCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimManeuverCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimManeuverCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimManeuverCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimManeuverCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.Constructor">
            <summary>Sets the shim of ManeuverCommand.ManeuverCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.DescriptionGet">
            <summary>Sets the shim of ManeuverCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of ManeuverCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.NodeGet">
            <summary>Sets the shim of ManeuverCommand.get_Node()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.NodeSetManeuverNode">
            <summary>Sets the shim of ManeuverCommand.set_Node(ManeuverNode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.OriginalDeltaGet">
            <summary>Sets the shim of ManeuverCommand.get_OriginalDelta()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.OriginalDeltaSetDouble">
            <summary>Sets the shim of ManeuverCommand.set_OriginalDelta(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.PopFlightComputer">
            <summary>Sets the shim of ManeuverCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.PriorityGet">
            <summary>Sets the shim of ManeuverCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.RemainingDeltaGet">
            <summary>Sets the shim of ManeuverCommand.get_RemainingDelta()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.RemainingDeltaSetDouble">
            <summary>Sets the shim of ManeuverCommand.set_RemainingDelta(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.RemainingTimeGet">
            <summary>Sets the shim of ManeuverCommand.get_RemainingTime()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.RemainingTimeSetDouble">
            <summary>Sets the shim of ManeuverCommand.set_RemainingTime(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.WithNodeManeuverNode">
            <summary>Sets the shim of ManeuverCommand.WithNode(ManeuverNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand._Popb__0ICommand">
            <summary>Sets the shim of ManeuverCommand.&lt;Pop&gt;b__0(ICommand c)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimManeuverCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of ManeuverCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of ManeuverCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.NodeGet">
            <summary>Sets the shim of ManeuverCommand.get_Node()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.NodeSetManeuverNode">
            <summary>Sets the shim of ManeuverCommand.set_Node(ManeuverNode value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.OriginalDeltaGet">
            <summary>Sets the shim of ManeuverCommand.get_OriginalDelta()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.OriginalDeltaSetDouble">
            <summary>Sets the shim of ManeuverCommand.set_OriginalDelta(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of ManeuverCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.PriorityGet">
            <summary>Sets the shim of ManeuverCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.RemainingDeltaGet">
            <summary>Sets the shim of ManeuverCommand.get_RemainingDelta()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.RemainingDeltaSetDouble">
            <summary>Sets the shim of ManeuverCommand.set_RemainingDelta(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.RemainingTimeGet">
            <summary>Sets the shim of ManeuverCommand.get_RemainingTime()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimManeuverCommand.AllInstances.RemainingTimeSetDouble">
            <summary>Sets the shim of ManeuverCommand.set_RemainingTime(Double value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimMissionControlAntenna">
            <summary>Shim type of RemoteTech.MissionControlAntenna</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlAntenna.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlAntenna.#ctor(RemoteTech.MissionControlAntenna)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlAntenna.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlAntenna.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlAntenna.Bind(RemoteTech.IAntenna)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.ActivatedRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.ActivatedRemoteTechIAntennasetBoolean">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.set_Activated(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.CanTargetRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.CompareToIAntenna">
            <summary>Sets the shim of MissionControlAntenna.CompareTo(IAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.Constructor">
            <summary>Sets the shim of MissionControlAntenna.MissionControlAntenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.ConsumptionRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.DishRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.GuidRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.NameRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.OmniRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.OnConnectionRefresh">
            <summary>Sets the shim of MissionControlAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.ParentGet">
            <summary>Sets the shim of MissionControlAntenna.get_Parent()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.ParentSetISatellite">
            <summary>Sets the shim of MissionControlAntenna.set_Parent(ISatellite value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.PositionGet">
            <summary>Sets the shim of MissionControlAntenna.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.PoweredRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.RadiansRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.TargetsRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Targets()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.ActivatedRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.ActivatedRemoteTechIAntennasetBoolean">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.set_Activated(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.CanTargetRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.CompareToIAntenna">
            <summary>Sets the shim of MissionControlAntenna.CompareTo(IAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.ConsumptionRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.DishRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.GuidRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.NameRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.OmniRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.OnConnectionRefresh">
            <summary>Sets the shim of MissionControlAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.ParentGet">
            <summary>Sets the shim of MissionControlAntenna.get_Parent()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.ParentSetISatellite">
            <summary>Sets the shim of MissionControlAntenna.set_Parent(ISatellite value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.PositionGet">
            <summary>Sets the shim of MissionControlAntenna.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.PoweredRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.RadiansRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlAntenna.AllInstances.TargetsRemoteTechIAntennaget">
            <summary>Sets the shim of MissionControlAntenna.RemoteTech.IAntenna.get_Targets()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimMissionControlSatellite">
            <summary>Shim type of RemoteTech.MissionControlSatellite</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlSatellite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlSatellite.#ctor(RemoteTech.MissionControlSatellite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlSatellite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlSatellite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlSatellite.Bind(IPersistenceLoad)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimMissionControlSatellite.Bind(RemoteTech.ISatellite)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AntennasRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Antennas()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.BodyRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Body()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.Constructor">
            <summary>Sets the shim of MissionControlSatellite.MissionControlSatellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.GetHashCode">
            <summary>Sets the shim of MissionControlSatellite.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.GroupRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.GroupRemoteTechISatellitesetGroup">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.GuidRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.HasLocalControlRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_HasLocalControl()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.IPersistenceLoadPersistenceLoad">
            <summary>Sets the shim of MissionControlSatellite.IPersistenceLoad.PersistenceLoad()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.IsCommandStationRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.NameRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.NameRemoteTechISatellitesetString">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.set_Name(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.PositionRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.PoweredRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.ToString">
            <summary>Sets the shim of MissionControlSatellite.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.VisibleRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Visible()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.AntennasRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Antennas()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.BodyRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Body()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.GetHashCode01">
            <summary>Sets the shim of MissionControlSatellite.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.GroupRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.GroupRemoteTechISatellitesetGroup">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.GuidRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.HasLocalControlRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_HasLocalControl()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.IPersistenceLoadPersistenceLoad">
            <summary>Sets the shim of MissionControlSatellite.IPersistenceLoad.PersistenceLoad()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.IsCommandStationRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.NameRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.NameRemoteTechISatellitesetString">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.set_Name(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.PositionRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.PoweredRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.ToString01">
            <summary>Sets the shim of MissionControlSatellite.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimMissionControlSatellite.AllInstances.VisibleRemoteTechISatelliteget">
            <summary>Sets the shim of MissionControlSatellite.RemoteTech.ISatellite.get_Visible()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTAntenna">
            <summary>Shim type of RemoteTech.ModuleRTAntenna</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntenna.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntenna.#ctor(RemoteTech.ModuleRTAntenna)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntenna.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntenna.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntenna.Bind(RemoteTech.IAntenna)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntenna.Bind(RemoteTech.IVesselAntenna)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ActionCloseKSPActionParam">
            <summary>Sets the shim of ModuleRTAntenna.ActionClose(KSPActionParam param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ActionOpenKSPActionParam">
            <summary>Sets the shim of ModuleRTAntenna.ActionOpen(KSPActionParam param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ActionToggleKSPActionParam">
            <summary>Sets the shim of ModuleRTAntenna.ActionToggle(KSPActionParam param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ActivatedGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ActivatedSetBoolean">
            <summary>Sets the shim of ModuleRTAntenna.set_Activated(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AddTransmitter">
            <summary>Sets the shim of ModuleRTAntenna.AddTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AnimatingGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Animating()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.CanTargetGet">
            <summary>Sets the shim of ModuleRTAntenna.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.Constructor">
            <summary>Sets the shim of ModuleRTAntenna.ModuleRTAntenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ConsumptionGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ConsumptionMultiplierGet">
            <summary>Sets the shim of ModuleRTAntenna.get_ConsumptionMultiplier()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.DestroyedAddActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntenna.add_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.DestroyedRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntenna.remove_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.DishGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.EventClose">
            <summary>Sets the shim of ModuleRTAntenna.EventClose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.EventEditorClose">
            <summary>Sets the shim of ModuleRTAntenna.EventEditorClose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.EventEditorOpen">
            <summary>Sets the shim of ModuleRTAntenna.EventEditorOpen()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.EventOpen">
            <summary>Sets the shim of ModuleRTAntenna.EventOpen()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.EventTarget">
            <summary>Sets the shim of ModuleRTAntenna.EventTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.EventToggle">
            <summary>Sets the shim of ModuleRTAntenna.EventToggle()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.FindFxModulesInt32ArrayBoolean">
            <summary>Sets the shim of ModuleRTAntenna.FindFxModules(Int32[] indices, Boolean showUI)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.FixedUpdate">
            <summary>Sets the shim of ModuleRTAntenna.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.GetInfo">
            <summary>Sets the shim of ModuleRTAntenna.GetInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.GuidGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.HandleDynamicPressure">
            <summary>Sets the shim of ModuleRTAntenna.HandleDynamicPressure()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.LoadAnimations">
            <summary>Sets the shim of ModuleRTAntenna.LoadAnimations()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.NameGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OmniGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OnConnectionRefresh">
            <summary>Sets the shim of ModuleRTAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OnDestroy">
            <summary>Sets the shim of ModuleRTAntenna.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OnLoadConfigNode">
            <summary>Sets the shim of ModuleRTAntenna.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleRTAntenna.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OverrideClose">
            <summary>Sets the shim of ModuleRTAntenna.OverrideClose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OverrideOpen">
            <summary>Sets the shim of ModuleRTAntenna.OverrideOpen()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.OverrideTarget">
            <summary>Sets the shim of ModuleRTAntenna.OverrideTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.PositionGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.PoweredGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.RadiansGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.RangeMultiplierGet">
            <summary>Sets the shim of ModuleRTAntenna.get_RangeMultiplier()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.RemoveTransmitter">
            <summary>Sets the shim of ModuleRTAntenna.RemoveTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.SetFXModules_CoroutineListOfIScalarModuleSingle">
            <summary>Sets the shim of ModuleRTAntenna.SetFXModules_Coroutine(List`1&lt;IScalarModule&gt; modules, Single tgtValue)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.SetStateBoolean">
            <summary>Sets the shim of ModuleRTAntenna.SetState(Boolean state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.TargetsGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Targets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.ToString">
            <summary>Sets the shim of ModuleRTAntenna.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.UpdateContext">
            <summary>Sets the shim of ModuleRTAntenna.UpdateContext()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.VesselGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna._HandleDynamicPressureb__6IScalarModule">
            <summary>Sets the shim of ModuleRTAntenna.&lt;HandleDynamicPressure&gt;b__6(IScalarModule a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna._LoadAnimationsb__2IScalarModule">
            <summary>Sets the shim of ModuleRTAntenna.&lt;LoadAnimations&gt;b__2(IScalarModule fx)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna._LoadAnimationsb__3IScalarModule">
            <summary>Sets the shim of ModuleRTAntenna.&lt;LoadAnimations&gt;b__3(IScalarModule fx)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna._ctorb__cIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntenna.&lt;.ctor&gt;b__c(IVesselAntenna param0)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna._get_Animatingb__0IScalarModule">
            <summary>Sets the shim of ModuleRTAntenna.&lt;get_Animating&gt;b__0(IScalarModule fx)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ActionCloseKSPActionParam">
            <summary>Sets the shim of ModuleRTAntenna.ActionClose(KSPActionParam param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ActionOpenKSPActionParam">
            <summary>Sets the shim of ModuleRTAntenna.ActionOpen(KSPActionParam param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ActionToggleKSPActionParam">
            <summary>Sets the shim of ModuleRTAntenna.ActionToggle(KSPActionParam param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ActivatedGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ActivatedSetBoolean">
            <summary>Sets the shim of ModuleRTAntenna.set_Activated(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.AddTransmitter">
            <summary>Sets the shim of ModuleRTAntenna.AddTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.AnimatingGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Animating()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.CanTargetGet">
            <summary>Sets the shim of ModuleRTAntenna.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ConsumptionGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ConsumptionMultiplierGet">
            <summary>Sets the shim of ModuleRTAntenna.get_ConsumptionMultiplier()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.DestroyedAddActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntenna.add_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.DestroyedRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntenna.remove_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.DishGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.EventClose">
            <summary>Sets the shim of ModuleRTAntenna.EventClose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.EventEditorClose">
            <summary>Sets the shim of ModuleRTAntenna.EventEditorClose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.EventEditorOpen">
            <summary>Sets the shim of ModuleRTAntenna.EventEditorOpen()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.EventOpen">
            <summary>Sets the shim of ModuleRTAntenna.EventOpen()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.EventTarget">
            <summary>Sets the shim of ModuleRTAntenna.EventTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.EventToggle">
            <summary>Sets the shim of ModuleRTAntenna.EventToggle()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.FindFxModulesInt32ArrayBoolean">
            <summary>Sets the shim of ModuleRTAntenna.FindFxModules(Int32[] indices, Boolean showUI)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.FixedUpdate">
            <summary>Sets the shim of ModuleRTAntenna.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.GetInfo">
            <summary>Sets the shim of ModuleRTAntenna.GetInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.GuidGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.HandleDynamicPressure">
            <summary>Sets the shim of ModuleRTAntenna.HandleDynamicPressure()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.LoadAnimations">
            <summary>Sets the shim of ModuleRTAntenna.LoadAnimations()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.NameGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OmniGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OnConnectionRefresh">
            <summary>Sets the shim of ModuleRTAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OnDestroy">
            <summary>Sets the shim of ModuleRTAntenna.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OnLoadConfigNode">
            <summary>Sets the shim of ModuleRTAntenna.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleRTAntenna.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OverrideClose">
            <summary>Sets the shim of ModuleRTAntenna.OverrideClose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OverrideOpen">
            <summary>Sets the shim of ModuleRTAntenna.OverrideOpen()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.OverrideTarget">
            <summary>Sets the shim of ModuleRTAntenna.OverrideTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.PositionGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.PoweredGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.RadiansGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.RangeMultiplierGet">
            <summary>Sets the shim of ModuleRTAntenna.get_RangeMultiplier()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.RemoveTransmitter">
            <summary>Sets the shim of ModuleRTAntenna.RemoveTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.SetFXModules_CoroutineListOfIScalarModuleSingle">
            <summary>Sets the shim of ModuleRTAntenna.SetFXModules_Coroutine(List`1&lt;IScalarModule&gt; modules, Single tgtValue)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.SetStateBoolean">
            <summary>Sets the shim of ModuleRTAntenna.SetState(Boolean state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.TargetsGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Targets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.ToString01">
            <summary>Sets the shim of ModuleRTAntenna.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.UpdateContext">
            <summary>Sets the shim of ModuleRTAntenna.UpdateContext()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntenna.AllInstances.VesselGet">
            <summary>Sets the shim of ModuleRTAntenna.get_Vessel()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTAntennaPassive">
            <summary>Shim type of RemoteTech.ModuleRTAntennaPassive</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive.#ctor(RemoteTech.ModuleRTAntennaPassive)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive.Bind(RemoteTech.IAntenna)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive.Bind(RemoteTech.IVesselAntenna)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.ActivatedGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.ActivatedSetBoolean">
            <summary>Sets the shim of ModuleRTAntennaPassive.set_Activated(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AddTransmitter">
            <summary>Sets the shim of ModuleRTAntennaPassive.AddTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AnimatingGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Animating()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.CanTargetGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.CompareToIAntenna">
            <summary>Sets the shim of ModuleRTAntennaPassive.CompareTo(IAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.Constructor">
            <summary>Sets the shim of ModuleRTAntennaPassive.ModuleRTAntennaPassive()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.ConsumptionGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.DestroyedAddActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntennaPassive.add_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.DestroyedRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntennaPassive.remove_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.DishGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.FindFxModulesInt32ArrayBoolean">
            <summary>Sets the shim of ModuleRTAntennaPassive.FindFxModules(Int32[] indices, Boolean showUI)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.FixedUpdate">
            <summary>Sets the shim of ModuleRTAntennaPassive.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.GetInfo">
            <summary>Sets the shim of ModuleRTAntennaPassive.GetInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.GuidGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.NameGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.OmniGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.OnConnectionRefresh">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnConnectionRefresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.OnDestroy">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.OnLoadConfigNode">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.PositionGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.PoweredGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.RadiansGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.RangeMultiplierGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_RangeMultiplier()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.RemoveTransmitter">
            <summary>Sets the shim of ModuleRTAntennaPassive.RemoveTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.SetStateBoolean">
            <summary>Sets the shim of ModuleRTAntennaPassive.SetState(Boolean state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.TargetsGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Targets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.TargetsSetIListOfTarget">
            <summary>Sets the shim of ModuleRTAntennaPassive.set_Targets(IList`1&lt;Target&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.ToString">
            <summary>Sets the shim of ModuleRTAntennaPassive.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.UnlockedGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Unlocked()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.VesselGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive._ctorb__0IVesselAntenna">
            <summary>Sets the shim of ModuleRTAntennaPassive.&lt;.ctor&gt;b__0(IVesselAntenna param0)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.ActivatedGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.ActivatedSetBoolean">
            <summary>Sets the shim of ModuleRTAntennaPassive.set_Activated(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.AddTransmitter">
            <summary>Sets the shim of ModuleRTAntennaPassive.AddTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.AnimatingGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Animating()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.CanTargetGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.CompareToIAntenna">
            <summary>Sets the shim of ModuleRTAntennaPassive.CompareTo(IAntenna antenna)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.ConsumptionGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.DestroyedAddActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntennaPassive.add_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.DestroyedRemoveActionOfIVesselAntenna">
            <summary>Sets the shim of ModuleRTAntennaPassive.remove_Destroyed(Action`1&lt;IVesselAntenna&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.DishGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.FindFxModulesInt32ArrayBoolean">
            <summary>Sets the shim of ModuleRTAntennaPassive.FindFxModules(Int32[] indices, Boolean showUI)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.FixedUpdate">
            <summary>Sets the shim of ModuleRTAntennaPassive.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.GetInfo">
            <summary>Sets the shim of ModuleRTAntennaPassive.GetInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.GuidGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.NameGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.OmniGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.OnConnectionRefresh">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnConnectionRefresh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.OnDestroy">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.OnLoadConfigNode">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleRTAntennaPassive.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.PositionGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.PoweredGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.RadiansGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.RangeMultiplierGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_RangeMultiplier()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.RemoveTransmitter">
            <summary>Sets the shim of ModuleRTAntennaPassive.RemoveTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.SetStateBoolean">
            <summary>Sets the shim of ModuleRTAntennaPassive.SetState(Boolean state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.TargetsGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Targets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.TargetsSetIListOfTarget">
            <summary>Sets the shim of ModuleRTAntennaPassive.set_Targets(IList`1&lt;Target&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.ToString01">
            <summary>Sets the shim of ModuleRTAntennaPassive.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.UnlockedGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Unlocked()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive.AllInstances.VesselGet">
            <summary>Sets the shim of ModuleRTAntennaPassive.get_Vessel()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo">
            <summary>Shim type of RemoteTech.ModuleRTAntennaPassive_ReloadPartInfo</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.#ctor(RemoteTech.ModuleRTAntennaPassive_ReloadPartInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.Constructor">
            <summary>Sets the shim of ModuleRTAntennaPassive_ReloadPartInfo.ModuleRTAntennaPassive_ReloadPartInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.RefreshPartInfo">
            <summary>Sets the shim of ModuleRTAntennaPassive_ReloadPartInfo.RefreshPartInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.Start">
            <summary>Sets the shim of ModuleRTAntennaPassive_ReloadPartInfo.Start()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo._RefreshPartInfob__0AvailablePart">
            <summary>Sets the shim of ModuleRTAntennaPassive_ReloadPartInfo.&lt;RefreshPartInfo&gt;b__0(AvailablePart ap)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.AllInstances.RefreshPartInfo">
            <summary>Sets the shim of ModuleRTAntennaPassive_ReloadPartInfo.RefreshPartInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTAntennaPassive_ReloadPartInfo.AllInstances.Start">
            <summary>Sets the shim of ModuleRTAntennaPassive_ReloadPartInfo.Start()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTDataTransmitter">
            <summary>Shim type of RemoteTech.ModuleRTDataTransmitter</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTDataTransmitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTDataTransmitter.#ctor(RemoteTech.ModuleRTDataTransmitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTDataTransmitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTDataTransmitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleRTDataTransmitter.Bind(IScienceDataTransmitter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.Constructor">
            <summary>Sets the shim of ModuleRTDataTransmitter.ModuleRTDataTransmitter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.DataRateIScienceDataTransmitterget">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.get_DataRate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.DataResourceCostIScienceDataTransmitterget">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.get_DataResourceCost()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.IScienceDataTransmitterCanTransmit">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.CanTransmit()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.IScienceDataTransmitterIsBusy">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.IsBusy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.IScienceDataTransmitterTransmitDataListOfScienceData">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.TransmitData(List`1&lt;ScienceData&gt; dataQueue)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.OnLoadConfigNode">
            <summary>Sets the shim of ModuleRTDataTransmitter.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.OnSaveConfigNode">
            <summary>Sets the shim of ModuleRTDataTransmitter.OnSave(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.Transmit">
            <summary>Sets the shim of ModuleRTDataTransmitter.Transmit()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.DataRateIScienceDataTransmitterget">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.get_DataRate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.DataResourceCostIScienceDataTransmitterget">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.get_DataResourceCost()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.IScienceDataTransmitterCanTransmit">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.CanTransmit()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.IScienceDataTransmitterIsBusy">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.IsBusy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.IScienceDataTransmitterTransmitDataListOfScienceData">
            <summary>Sets the shim of ModuleRTDataTransmitter.IScienceDataTransmitter.TransmitData(List`1&lt;ScienceData&gt; dataQueue)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.OnLoadConfigNode">
            <summary>Sets the shim of ModuleRTDataTransmitter.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.OnSaveConfigNode">
            <summary>Sets the shim of ModuleRTDataTransmitter.OnSave(ConfigNode node)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleRTDataTransmitter.AllInstances.Transmit">
            <summary>Sets the shim of ModuleRTDataTransmitter.Transmit()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleSPU">
            <summary>Shim type of RemoteTech.ModuleSPU</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPU.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPU.#ctor(RemoteTech.ModuleSPU)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPU.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPU.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPU.Bind(RemoteTech.ISignalProcessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.Constructor">
            <summary>Sets the shim of ModuleSPU.ModuleSPU()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.DestroyedAddActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPU.add_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.DestroyedRemoveActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPU.remove_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.FixedUpdate">
            <summary>Sets the shim of ModuleSPU.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.FlightComputerGet">
            <summary>Sets the shim of ModuleSPU.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.FlightComputerSetFlightComputer">
            <summary>Sets the shim of ModuleSPU.set_FlightComputer(FlightComputer value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.GetInfo">
            <summary>Sets the shim of ModuleSPU.GetInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.GroupGet">
            <summary>Sets the shim of ModuleSPU.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.GuidGet">
            <summary>Sets the shim of ModuleSPU.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.HookPartMenus">
            <summary>Sets the shim of ModuleSPU.HookPartMenus()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.IsCommandStationGet">
            <summary>Sets the shim of ModuleSPU.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.NameGet">
            <summary>Sets the shim of ModuleSPU.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.OnDestroy">
            <summary>Sets the shim of ModuleSPU.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleSPU.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.PoweredGet">
            <summary>Sets the shim of ModuleSPU.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.SatelliteGet">
            <summary>Sets the shim of ModuleSPU.get_Satellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.ToString">
            <summary>Sets the shim of ModuleSPU.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.Update">
            <summary>Sets the shim of ModuleSPU.Update()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.VesselGet">
            <summary>Sets the shim of ModuleSPU.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.VesselNameGet">
            <summary>Sets the shim of ModuleSPU.get_VesselName()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.VesselNameSetString">
            <summary>Sets the shim of ModuleSPU.set_VesselName(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.VisibleGet">
            <summary>Sets the shim of ModuleSPU.get_Visible()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU._HookPartMenusb__0BaseEventBoolean">
            <summary>Sets the shim of ModuleSPU.&lt;HookPartMenus&gt;b__0(BaseEvent e, Boolean ignore_delay)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU._ctorb__2ISignalProcessor">
            <summary>Sets the shim of ModuleSPU.&lt;.ctor&gt;b__2(ISignalProcessor param0)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleSPU.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.DestroyedAddActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPU.add_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.DestroyedRemoveActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPU.remove_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.FixedUpdate">
            <summary>Sets the shim of ModuleSPU.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.FlightComputerGet">
            <summary>Sets the shim of ModuleSPU.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.FlightComputerSetFlightComputer">
            <summary>Sets the shim of ModuleSPU.set_FlightComputer(FlightComputer value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.GetInfo">
            <summary>Sets the shim of ModuleSPU.GetInfo()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.GroupGet">
            <summary>Sets the shim of ModuleSPU.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.GuidGet">
            <summary>Sets the shim of ModuleSPU.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.HookPartMenus">
            <summary>Sets the shim of ModuleSPU.HookPartMenus()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.IsCommandStationGet">
            <summary>Sets the shim of ModuleSPU.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.NameGet">
            <summary>Sets the shim of ModuleSPU.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.OnDestroy">
            <summary>Sets the shim of ModuleSPU.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleSPU.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.PoweredGet">
            <summary>Sets the shim of ModuleSPU.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.SatelliteGet">
            <summary>Sets the shim of ModuleSPU.get_Satellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.ToString01">
            <summary>Sets the shim of ModuleSPU.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.Update">
            <summary>Sets the shim of ModuleSPU.Update()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.VesselGet">
            <summary>Sets the shim of ModuleSPU.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.VesselNameGet">
            <summary>Sets the shim of ModuleSPU.get_VesselName()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.VesselNameSetString">
            <summary>Sets the shim of ModuleSPU.set_VesselName(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPU.AllInstances.VisibleGet">
            <summary>Sets the shim of ModuleSPU.get_Visible()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleSPUPassive">
            <summary>Shim type of RemoteTech.ModuleSPUPassive</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPUPassive.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPUPassive.#ctor(RemoteTech.ModuleSPUPassive)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPUPassive.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPUPassive.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimModuleSPUPassive.Bind(RemoteTech.ISignalProcessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.Constructor">
            <summary>Sets the shim of ModuleSPUPassive.ModuleSPUPassive()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.DestroyedAddActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPUPassive.add_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.DestroyedRemoveActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPUPassive.remove_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.FixedUpdate">
            <summary>Sets the shim of ModuleSPUPassive.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.FlightComputerGet">
            <summary>Sets the shim of ModuleSPUPassive.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.GroupGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.GroupSetGroup">
            <summary>Sets the shim of ModuleSPUPassive.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.GuidGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.IsCommandStationGet">
            <summary>Sets the shim of ModuleSPUPassive.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.NameGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.OnDestroy">
            <summary>Sets the shim of ModuleSPUPassive.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleSPUPassive.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.PoweredGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.SatelliteGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Satellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.ToString">
            <summary>Sets the shim of ModuleSPUPassive.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.VesselGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.VisibleGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Visible()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive._ctorb__0ISignalProcessor">
            <summary>Sets the shim of ModuleSPUPassive.&lt;.ctor&gt;b__0(ISignalProcessor param0)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.DestroyedAddActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPUPassive.add_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.DestroyedRemoveActionOfISignalProcessor">
            <summary>Sets the shim of ModuleSPUPassive.remove_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.FixedUpdate">
            <summary>Sets the shim of ModuleSPUPassive.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.FlightComputerGet">
            <summary>Sets the shim of ModuleSPUPassive.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.GroupGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.GroupSetGroup">
            <summary>Sets the shim of ModuleSPUPassive.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.GuidGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.IsCommandStationGet">
            <summary>Sets the shim of ModuleSPUPassive.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.NameGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.OnDestroy">
            <summary>Sets the shim of ModuleSPUPassive.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.OnStartPartModuleStartState">
            <summary>Sets the shim of ModuleSPUPassive.OnStart(StartState state)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.PoweredGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.SatelliteGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Satellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.ToString01">
            <summary>Sets the shim of ModuleSPUPassive.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.VesselGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimModuleSPUPassive.AllInstances.VisibleGet">
            <summary>Sets the shim of ModuleSPUPassive.get_Visible()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkCone">
            <summary>Shim type of RemoteTech.NetworkCone</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkCone.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkCone.#ctor(RemoteTech.NetworkCone)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkCone.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkCone.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.ActiveSetBoolean">
            <summary>Sets the shim of NetworkCone.set_Active(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AntennaGet">
            <summary>Sets the shim of NetworkCone.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AntennaSetIAntenna">
            <summary>Sets the shim of NetworkCone.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.Awake">
            <summary>Sets the shim of NetworkCone.Awake()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.ColorSetColor">
            <summary>Sets the shim of NetworkCone.set_Color(Color value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.Constructor">
            <summary>Sets the shim of NetworkCone.NetworkCone()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.Instantiate">
            <summary>Sets the shim of NetworkCone.Instantiate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.LineWidthGet">
            <summary>Sets the shim of NetworkCone.get_LineWidth()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.LineWidthSetSingle">
            <summary>Sets the shim of NetworkCone.set_LineWidth(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.MaterialSetMaterial">
            <summary>Sets the shim of NetworkCone.set_Material(Material value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.OnDestroy">
            <summary>Sets the shim of NetworkCone.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.SetupMesh">
            <summary>Sets the shim of NetworkCone.SetupMesh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.TargetSetISatellite">
            <summary>Sets the shim of NetworkCone.set_Target(ISatellite value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.UpdateMeshISatelliteIAntenna">
            <summary>Sets the shim of NetworkCone.UpdateMesh(ISatellite target, IAntenna a)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkCone.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.ActiveSetBoolean">
            <summary>Sets the shim of NetworkCone.set_Active(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.AntennaGet">
            <summary>Sets the shim of NetworkCone.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.AntennaSetIAntenna">
            <summary>Sets the shim of NetworkCone.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.Awake">
            <summary>Sets the shim of NetworkCone.Awake()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.ColorSetColor">
            <summary>Sets the shim of NetworkCone.set_Color(Color value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.LineWidthGet">
            <summary>Sets the shim of NetworkCone.get_LineWidth()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.LineWidthSetSingle">
            <summary>Sets the shim of NetworkCone.set_LineWidth(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.MaterialSetMaterial">
            <summary>Sets the shim of NetworkCone.set_Material(Material value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.OnDestroy">
            <summary>Sets the shim of NetworkCone.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.SetupMesh">
            <summary>Sets the shim of NetworkCone.SetupMesh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.TargetSetISatellite">
            <summary>Sets the shim of NetworkCone.set_Target(ISatellite value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkCone.AllInstances.UpdateMeshISatelliteIAntenna">
            <summary>Sets the shim of NetworkCone.UpdateMesh(ISatellite target, IAntenna a)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkLine">
            <summary>Shim type of RemoteTech.NetworkLine</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLine.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLine.#ctor(RemoteTech.NetworkLine)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLine.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLine.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.ActiveSetBoolean">
            <summary>Sets the shim of NetworkLine.set_Active(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.Awake">
            <summary>Sets the shim of NetworkLine.Awake()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.ColorSetColor">
            <summary>Sets the shim of NetworkLine.set_Color(Color value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.Constructor">
            <summary>Sets the shim of NetworkLine.NetworkLine()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.EdgeSetNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkLine.set_Edge(NetworkLink`1&lt;ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.Instantiate">
            <summary>Sets the shim of NetworkLine.Instantiate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.LineWidthGet">
            <summary>Sets the shim of NetworkLine.get_LineWidth()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.LineWidthSetSingle">
            <summary>Sets the shim of NetworkLine.set_LineWidth(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.MaterialSetMaterial">
            <summary>Sets the shim of NetworkLine.set_Material(Material value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.OnDestroy">
            <summary>Sets the shim of NetworkLine.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.SetupMesh">
            <summary>Sets the shim of NetworkLine.SetupMesh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.UpdateMeshNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkLine.UpdateMesh(NetworkLink`1&lt;ISatellite&gt; edge)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkLine.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.ActiveSetBoolean">
            <summary>Sets the shim of NetworkLine.set_Active(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.Awake">
            <summary>Sets the shim of NetworkLine.Awake()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.ColorSetColor">
            <summary>Sets the shim of NetworkLine.set_Color(Color value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.EdgeSetNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkLine.set_Edge(NetworkLink`1&lt;ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.LineWidthGet">
            <summary>Sets the shim of NetworkLine.get_LineWidth()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.LineWidthSetSingle">
            <summary>Sets the shim of NetworkLine.set_LineWidth(Single value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.MaterialSetMaterial">
            <summary>Sets the shim of NetworkLine.set_Material(Material value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.OnDestroy">
            <summary>Sets the shim of NetworkLine.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.SetupMesh">
            <summary>Sets the shim of NetworkLine.SetupMesh()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLine.AllInstances.UpdateMeshNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkLine.UpdateMesh(NetworkLink`1&lt;ISatellite&gt; edge)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkLink">
            <summary>Shim type of RemoteTech.NetworkLink</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink.#ctor(RemoteTech.NetworkLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink.EmptyOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,RemoteTech.NetworkLink{``0}})">
            <summary>Sets the shim of NetworkLink.Empty(!!0 a, !!0 b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink.Constructor">
            <summary>Sets the shim of NetworkLink.NetworkLink()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkLink`1">
            <summary>Shim type of RemoteTech.NetworkLink`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink`1.#ctor(RemoteTech.NetworkLink{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkLink`1.Bind(System.IEquatable{RemoteTech.UnorderedPair{`0}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink`1.ConstructorT0T0IListOfIAntennaIListOfIAntennaLinkType">
            <summary>Sets the shim of NetworkLink`1.NetworkLink`1(!0 a, !0 b, IList`1&lt;IAntenna&gt; interfacesA, IList`1&lt;IAntenna&gt; interfacesB, LinkType linkType)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink`1.ConstructorT0T0ReadOnlyCollectionOfIAntennaReadOnlyCollectionOfIAntennaLinkType">
            <summary>Sets the shim of NetworkLink`1.NetworkLink`1(!0 a, !0 b, ReadOnlyCollection`1&lt;IAntenna&gt; interfacesA, ReadOnlyCollection`1&lt;IAntenna&gt; interfacesB, LinkType linkType)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink`1.Invert">
            <summary>Sets the shim of NetworkLink`1.Invert()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink`1.ToString">
            <summary>Sets the shim of NetworkLink`1.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkLink`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink`1.AllInstances.Invert">
            <summary>Sets the shim of NetworkLink`1.Invert()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkLink`1.AllInstances.ToString01">
            <summary>Sets the shim of NetworkLink`1.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkManager">
            <summary>Shim type of RemoteTech.NetworkManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkManager.#ctor(RemoteTech.NetworkManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkManager.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkManager.Bind(System.Collections.Generic.IEnumerable{RemoteTech.ISatellite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.ConnectionAddedAddActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.add_ConnectionAdded(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.ConnectionAddedRemoveActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.remove_ConnectionAdded(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.ConnectionRemovedAddActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.add_ConnectionRemoved(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.ConnectionRemovedRemoveActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.remove_ConnectionRemoved(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.Constructor">
            <summary>Sets the shim of NetworkManager.NetworkManager()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.CountGet">
            <summary>Sets the shim of NetworkManager.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.Dispose">
            <summary>Sets the shim of NetworkManager.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.FindNeighborsISatellite">
            <summary>Sets the shim of NetworkManager.FindNeighbors(ISatellite sat_a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.GetEnumerator">
            <summary>Sets the shim of NetworkManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.GetLinkISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.GetLink(ISatellite a, ISatellite b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.GraphGet">
            <summary>Sets the shim of NetworkManager.get_Graph()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.GraphSetDictionaryOfISatelliteAdjacencyMap">
            <summary>Sets the shim of NetworkManager.set_Graph(Dictionary`2&lt;ISatellite,AdjacencyMap&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.GroundStationsGet">
            <summary>Sets the shim of NetworkManager.get_GroundStations()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.GroundStationsSetDictionaryOfGuidISatellite">
            <summary>Sets the shim of NetworkManager.set_GroundStations(Dictionary`2&lt;Guid,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.ItemGetGuid">
            <summary>Sets the shim of NetworkManager.get_Item(Guid guid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.ItemGetISatellite">
            <summary>Sets the shim of NetworkManager.get_Item(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.LinkAddedAddActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.add_LinkAdded(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.LinkAddedRemoveActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.remove_LinkAdded(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.LinkRemovedAddActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.add_LinkRemoved(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.LinkRemovedRemoveActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.remove_LinkRemoved(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.OnFixedUpdate">
            <summary>Sets the shim of NetworkManager.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.OnSatelliteRegisterISatellite">
            <summary>Sets the shim of NetworkManager.OnSatelliteRegister(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.OnSatelliteUnregisterISatellite">
            <summary>Sets the shim of NetworkManager.OnSatelliteUnregister(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.PathFinderGet">
            <summary>Sets the shim of NetworkManager.get_PathFinder()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.PathFinderSetNetworkPathfinderOfISatellite">
            <summary>Sets the shim of NetworkManager.set_PathFinder(NetworkPathfinder`1&lt;ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.PlanetsGet">
            <summary>Sets the shim of NetworkManager.get_Planets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.PlanetsSetDictionaryOfGuidCelestialBody">
            <summary>Sets the shim of NetworkManager.set_Planets(Dictionary`2&lt;Guid,CelestialBody&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.RangeModelGet">
            <summary>Sets the shim of NetworkManager.get_RangeModel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.RangeModelSetIRangeModel">
            <summary>Sets the shim of NetworkManager.set_RangeModel(IRangeModel value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of NetworkManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.UpdateConnectionsISatellite">
            <summary>Sets the shim of NetworkManager.UpdateConnections(ISatellite commandStation)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.UpdateGraph">
            <summary>Sets the shim of NetworkManager.UpdateGraph()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.UpdateGraphISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.UpdateGraph(ISatellite a, ISatellite b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager._ctorb__0NetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.&lt;.ctor&gt;b__0(NetworkLink`1&lt;ISatellite&gt; param0)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager._ctorb__1NetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.&lt;.ctor&gt;b__1(NetworkLink`1&lt;ISatellite&gt; param0)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager._ctorb__2ISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.&lt;.ctor&gt;b__2(ISatellite param0, ISatellite param1)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager._ctorb__3ISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.&lt;.ctor&gt;b__3(ISatellite param0, ISatellite param1)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.ConnectionAddedAddActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.add_ConnectionAdded(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.ConnectionAddedRemoveActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.remove_ConnectionAdded(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.ConnectionRemovedAddActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.add_ConnectionRemoved(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.ConnectionRemovedRemoveActionOfISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.remove_ConnectionRemoved(Action`2&lt;ISatellite,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.CountGet">
            <summary>Sets the shim of NetworkManager.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.Dispose">
            <summary>Sets the shim of NetworkManager.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.FindNeighborsISatellite">
            <summary>Sets the shim of NetworkManager.FindNeighbors(ISatellite sat_a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.GetEnumerator">
            <summary>Sets the shim of NetworkManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.GetLinkISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.GetLink(ISatellite a, ISatellite b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.GraphGet">
            <summary>Sets the shim of NetworkManager.get_Graph()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.GraphSetDictionaryOfISatelliteAdjacencyMap">
            <summary>Sets the shim of NetworkManager.set_Graph(Dictionary`2&lt;ISatellite,AdjacencyMap&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.GroundStationsGet">
            <summary>Sets the shim of NetworkManager.get_GroundStations()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.GroundStationsSetDictionaryOfGuidISatellite">
            <summary>Sets the shim of NetworkManager.set_GroundStations(Dictionary`2&lt;Guid,ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.ItemGetGuid">
            <summary>Sets the shim of NetworkManager.get_Item(Guid guid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.ItemGetISatellite">
            <summary>Sets the shim of NetworkManager.get_Item(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.LinkAddedAddActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.add_LinkAdded(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.LinkAddedRemoveActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.remove_LinkAdded(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.LinkRemovedAddActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.add_LinkRemoved(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.LinkRemovedRemoveActionOfNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkManager.remove_LinkRemoved(Action`1&lt;NetworkLink`1&lt;ISatellite&gt;&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.OnFixedUpdate">
            <summary>Sets the shim of NetworkManager.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.OnSatelliteRegisterISatellite">
            <summary>Sets the shim of NetworkManager.OnSatelliteRegister(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.OnSatelliteUnregisterISatellite">
            <summary>Sets the shim of NetworkManager.OnSatelliteUnregister(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.PathFinderGet">
            <summary>Sets the shim of NetworkManager.get_PathFinder()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.PathFinderSetNetworkPathfinderOfISatellite">
            <summary>Sets the shim of NetworkManager.set_PathFinder(NetworkPathfinder`1&lt;ISatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.PlanetsGet">
            <summary>Sets the shim of NetworkManager.get_Planets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.PlanetsSetDictionaryOfGuidCelestialBody">
            <summary>Sets the shim of NetworkManager.set_Planets(Dictionary`2&lt;Guid,CelestialBody&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.RangeModelGet">
            <summary>Sets the shim of NetworkManager.get_RangeModel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.RangeModelSetIRangeModel">
            <summary>Sets the shim of NetworkManager.set_RangeModel(IRangeModel value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of NetworkManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.UpdateConnectionsISatellite">
            <summary>Sets the shim of NetworkManager.UpdateConnections(ISatellite commandStation)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.UpdateGraph">
            <summary>Sets the shim of NetworkManager.UpdateGraph()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkManager.AllInstances.UpdateGraphISatelliteISatellite">
            <summary>Sets the shim of NetworkManager.UpdateGraph(ISatellite a, ISatellite b)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkPathfinder`1">
            <summary>Shim type of RemoteTech.NetworkPathfinder`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkPathfinder`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkPathfinder`1.#ctor(RemoteTech.NetworkPathfinder{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkPathfinder`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkPathfinder`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkPathfinder`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkPathfinder`1.ConstructorFuncOfT0IEnumerableOfNetworkLinkOfT0FuncOfT0T0Double">
            <summary>Sets the shim of NetworkPathfinder`1.NetworkPathfinder`1(Func`2&lt;!0,IEnumerable`1&lt;NetworkLink`1&lt;!0&gt;&gt;&gt; neighbors, Func`3&lt;!0,!0,Double&gt; cost)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkPathfinder`1.GenerateConnectionsT0">
            <summary>Sets the shim of NetworkPathfinder`1.GenerateConnections(!0 commandStation)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkPathfinder`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkPathfinder`1.AllInstances.GenerateConnectionsT0">
            <summary>Sets the shim of NetworkPathfinder`1.GenerateConnections(!0 commandStation)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkRenderer">
            <summary>Shim type of RemoteTech.NetworkRenderer</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRenderer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRenderer.#ctor(RemoteTech.NetworkRenderer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRenderer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRenderer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.CheckColorNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.CheckColor(NetworkLink`1&lt;ISatellite&gt; edge)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.CheckVisibilityNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.CheckVisibility(NetworkLink`1&lt;ISatellite&gt; edge)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.Constructor">
            <summary>Sets the shim of NetworkRenderer.NetworkRenderer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.CreateAndAttach">
            <summary>Sets the shim of NetworkRenderer.CreateAndAttach()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.Detach">
            <summary>Sets the shim of NetworkRenderer.Detach()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.FilterGet">
            <summary>Sets the shim of NetworkRenderer.get_Filter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.FilterSetMapFilter">
            <summary>Sets the shim of NetworkRenderer.set_Filter(MapFilter value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.OnDestroy">
            <summary>Sets the shim of NetworkRenderer.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.OnGUI">
            <summary>Sets the shim of NetworkRenderer.OnGUI()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.OnLinkAddNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.OnLinkAdd(NetworkLink`1&lt;ISatellite&gt; link)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.OnLinkRemoveNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.OnLinkRemove(NetworkLink`1&lt;ISatellite&gt; link)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.OnPreCull">
            <summary>Sets the shim of NetworkRenderer.OnPreCull()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.OnSatelliteUnregisterISatellite">
            <summary>Sets the shim of NetworkRenderer.OnSatelliteUnregister(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.ShowDishGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowDish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.ShowOmniGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowOmni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.ShowPathGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowPath()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.ShowPlanetGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowPlanet()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.UpdateNetworkCones">
            <summary>Sets the shim of NetworkRenderer.UpdateNetworkCones()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.UpdateNetworkEdges">
            <summary>Sets the shim of NetworkRenderer.UpdateNetworkEdges()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer._UpdateNetworkEdgesb__0NetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.&lt;UpdateNetworkEdges&gt;b__0(NetworkLink`1&lt;ISatellite&gt; e)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.CheckColorNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.CheckColor(NetworkLink`1&lt;ISatellite&gt; edge)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.CheckVisibilityNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.CheckVisibility(NetworkLink`1&lt;ISatellite&gt; edge)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.Detach">
            <summary>Sets the shim of NetworkRenderer.Detach()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.FilterGet">
            <summary>Sets the shim of NetworkRenderer.get_Filter()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.FilterSetMapFilter">
            <summary>Sets the shim of NetworkRenderer.set_Filter(MapFilter value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.OnDestroy">
            <summary>Sets the shim of NetworkRenderer.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.OnGUI">
            <summary>Sets the shim of NetworkRenderer.OnGUI()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.OnLinkAddNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.OnLinkAdd(NetworkLink`1&lt;ISatellite&gt; link)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.OnLinkRemoveNetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.OnLinkRemove(NetworkLink`1&lt;ISatellite&gt; link)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.OnPreCull">
            <summary>Sets the shim of NetworkRenderer.OnPreCull()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.OnSatelliteUnregisterISatellite">
            <summary>Sets the shim of NetworkRenderer.OnSatelliteUnregister(ISatellite s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.ShowDishGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowDish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.ShowOmniGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowOmni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.ShowPathGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowPath()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.ShowPlanetGet">
            <summary>Sets the shim of NetworkRenderer.get_ShowPlanet()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.UpdateNetworkCones">
            <summary>Sets the shim of NetworkRenderer.UpdateNetworkCones()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances.UpdateNetworkEdges">
            <summary>Sets the shim of NetworkRenderer.UpdateNetworkEdges()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRenderer.AllInstances._UpdateNetworkEdgesb__0NetworkLinkOfISatellite">
            <summary>Sets the shim of NetworkRenderer.&lt;UpdateNetworkEdges&gt;b__0(NetworkLink`1&lt;ISatellite&gt; e)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkRoute`1">
            <summary>Shim type of RemoteTech.NetworkRoute`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRoute`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRoute`1.#ctor(RemoteTech.NetworkRoute{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRoute`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRoute`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimNetworkRoute`1.Bind(System.IComparable{RemoteTech.NetworkRoute{`0}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.CompareToNetworkRouteOfT0">
            <summary>Sets the shim of NetworkRoute`1.CompareTo(NetworkRoute`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.ConstructorT0T0IDictionaryOfT0NetworkLinkOfT0Double">
            <summary>Sets the shim of NetworkRoute`1.NetworkRoute`1(!0 a, !0 b, IDictionary`2&lt;!0,NetworkLink`1&lt;!0&gt;&gt; links, Double cost)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.ContainsUnorderedPairOfT0">
            <summary>Sets the shim of NetworkRoute`1.Contains(UnorderedPair`1&lt;!0&gt; e)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.SignalDelayGet">
            <summary>Sets the shim of NetworkRoute`1.get_SignalDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.ToString">
            <summary>Sets the shim of NetworkRoute`1.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimNetworkRoute`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.AllInstances.CompareToNetworkRouteOfT0">
            <summary>Sets the shim of NetworkRoute`1.CompareTo(NetworkRoute`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.AllInstances.ContainsUnorderedPairOfT0">
            <summary>Sets the shim of NetworkRoute`1.Contains(UnorderedPair`1&lt;!0&gt; e)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.AllInstances.SignalDelayGet">
            <summary>Sets the shim of NetworkRoute`1.get_SignalDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimNetworkRoute`1.AllInstances.ToString01">
            <summary>Sets the shim of NetworkRoute`1.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimPriorityQueue`1">
            <summary>Shim type of RemoteTech.PriorityQueue`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimPriorityQueue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimPriorityQueue`1.#ctor(RemoteTech.PriorityQueue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimPriorityQueue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimPriorityQueue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimPriorityQueue`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimPriorityQueue`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.Clear">
            <summary>Sets the shim of PriorityQueue`1.Clear()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.Constructor">
            <summary>Sets the shim of PriorityQueue`1.PriorityQueue`1()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of PriorityQueue`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.CountGet">
            <summary>Sets the shim of PriorityQueue`1.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.Dequeue">
            <summary>Sets the shim of PriorityQueue`1.Dequeue()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.EnqueueT0">
            <summary>Sets the shim of PriorityQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.GetEnumerator">
            <summary>Sets the shim of PriorityQueue`1.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.Peek">
            <summary>Sets the shim of PriorityQueue`1.Peek()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of PriorityQueue`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.Clear">
            <summary>Sets the shim of PriorityQueue`1.Clear()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of PriorityQueue`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.CountGet">
            <summary>Sets the shim of PriorityQueue`1.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.Dequeue">
            <summary>Sets the shim of PriorityQueue`1.Dequeue()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.EnqueueT0">
            <summary>Sets the shim of PriorityQueue`1.Enqueue(!0 item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of PriorityQueue`1.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.Peek">
            <summary>Sets the shim of PriorityQueue`1.Peek()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimPriorityQueue`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of PriorityQueue`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimProtoSignalProcessor">
            <summary>Shim type of RemoteTech.ProtoSignalProcessor</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimProtoSignalProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimProtoSignalProcessor.#ctor(RemoteTech.ProtoSignalProcessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimProtoSignalProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimProtoSignalProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimProtoSignalProcessor.Bind(RemoteTech.ISignalProcessor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.ConstructorProtoPartModuleSnapshotVessel">
            <summary>Sets the shim of ProtoSignalProcessor.ProtoSignalProcessor(ProtoPartModuleSnapshot ppms, Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.DestroyedAddActionOfISignalProcessor">
            <summary>Sets the shim of ProtoSignalProcessor.add_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.DestroyedRemoveActionOfISignalProcessor">
            <summary>Sets the shim of ProtoSignalProcessor.remove_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.FlightComputerGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.GroupGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.GroupSetGroup">
            <summary>Sets the shim of ProtoSignalProcessor.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.GuidGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.IsCommandStationGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.IsCommandStationSetBoolean">
            <summary>Sets the shim of ProtoSignalProcessor.set_IsCommandStation(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.NameGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.PoweredGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.PoweredSetBoolean">
            <summary>Sets the shim of ProtoSignalProcessor.set_Powered(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.ToString">
            <summary>Sets the shim of ProtoSignalProcessor.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.VesselGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.VisibleGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Visible()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor._ctorb__0ISignalProcessor">
            <summary>Sets the shim of ProtoSignalProcessor.&lt;.ctor&gt;b__0(ISignalProcessor param0)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.DestroyedAddActionOfISignalProcessor">
            <summary>Sets the shim of ProtoSignalProcessor.add_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.DestroyedRemoveActionOfISignalProcessor">
            <summary>Sets the shim of ProtoSignalProcessor.remove_Destroyed(Action`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.FlightComputerGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.GroupGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.GroupSetGroup">
            <summary>Sets the shim of ProtoSignalProcessor.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.GuidGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.IsCommandStationGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.IsCommandStationSetBoolean">
            <summary>Sets the shim of ProtoSignalProcessor.set_IsCommandStation(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.NameGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.PoweredGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.PoweredSetBoolean">
            <summary>Sets the shim of ProtoSignalProcessor.set_Powered(Boolean value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.ToString01">
            <summary>Sets the shim of ProtoSignalProcessor.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.VesselGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimProtoSignalProcessor.AllInstances.VisibleGet">
            <summary>Sets the shim of ProtoSignalProcessor.get_Visible()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimQueueFragment">
            <summary>Shim type of RemoteTech.QueueFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimQueueFragment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimQueueFragment.#ctor(RemoteTech.QueueFragment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimQueueFragment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimQueueFragment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimQueueFragment.Bind(RemoteTech.IFragment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.ConstructorFlightComputer">
            <summary>Sets the shim of QueueFragment.QueueFragment(FlightComputer fc)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.DelayGet">
            <summary>Sets the shim of QueueFragment.get_Delay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.DelaySetDouble">
            <summary>Sets the shim of QueueFragment.set_Delay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.Draw">
            <summary>Sets the shim of QueueFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.OnClickCancelICommand">
            <summary>Sets the shim of QueueFragment.OnClickCancel(ICommand c)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.OnClickReset">
            <summary>Sets the shim of QueueFragment.OnClickReset()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.StatusGet">
            <summary>Sets the shim of QueueFragment.get_Status()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment._Drawb__0">
            <summary>Sets the shim of QueueFragment.&lt;Draw&gt;b__0()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimQueueFragment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.AllInstances.DelayGet">
            <summary>Sets the shim of QueueFragment.get_Delay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.AllInstances.DelaySetDouble">
            <summary>Sets the shim of QueueFragment.set_Delay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.AllInstances.Draw">
            <summary>Sets the shim of QueueFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.AllInstances.OnClickCancelICommand">
            <summary>Sets the shim of QueueFragment.OnClickCancel(ICommand c)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.AllInstances.OnClickReset">
            <summary>Sets the shim of QueueFragment.OnClickReset()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.AllInstances.StatusGet">
            <summary>Sets the shim of QueueFragment.get_Status()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimQueueFragment.AllInstances._Drawb__0">
            <summary>Sets the shim of QueueFragment.&lt;Draw&gt;b__0()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTCore">
            <summary>Shim type of RemoteTech.RTCore</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCore.#ctor(RemoteTech.RTCore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AntennasGet">
            <summary>Sets the shim of RTCore.get_Antennas()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AntennasSetAntennaManager">
            <summary>Sets the shim of RTCore.set_Antennas(AntennaManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.Constructor">
            <summary>Sets the shim of RTCore.RTCore()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.FilterOverlayGet">
            <summary>Sets the shim of RTCore.get_FilterOverlay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.FilterOverlaySetFilterOverlay">
            <summary>Sets the shim of RTCore.set_FilterOverlay(FilterOverlay value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.FixedUpdate">
            <summary>Sets the shim of RTCore.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.FocusOverlayGet">
            <summary>Sets the shim of RTCore.get_FocusOverlay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.FocusOverlaySetFocusOverlay">
            <summary>Sets the shim of RTCore.set_FocusOverlay(FocusOverlay value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.GetActivatedGroup">
            <summary>Sets the shim of RTCore.GetActivatedGroup()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.GetLocks">
            <summary>Sets the shim of RTCore.GetLocks()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.GroupsGet">
            <summary>Sets the shim of RTCore.get_Groups()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.GroupsSetGroupManager">
            <summary>Sets the shim of RTCore.set_Groups(GroupManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.InstanceGet">
            <summary>Sets the shim of RTCore.get_Instance()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.InstanceSetRTCore">
            <summary>Sets the shim of RTCore.set_Instance(RTCore value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.NetworkGet">
            <summary>Sets the shim of RTCore.get_Network()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.NetworkSetNetworkManager">
            <summary>Sets the shim of RTCore.set_Network(NetworkManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.OnDestroy">
            <summary>Sets the shim of RTCore.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.OnFrameUpdateAddAction">
            <summary>Sets the shim of RTCore.add_OnFrameUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.OnFrameUpdateRemoveAction">
            <summary>Sets the shim of RTCore.remove_OnFrameUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.OnGUI">
            <summary>Sets the shim of RTCore.OnGUI()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.OnGuiUpdateAddAction">
            <summary>Sets the shim of RTCore.add_OnGuiUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.OnGuiUpdateRemoveAction">
            <summary>Sets the shim of RTCore.remove_OnGuiUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.ReleaseLocks">
            <summary>Sets the shim of RTCore.ReleaseLocks()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.RendererGet">
            <summary>Sets the shim of RTCore.get_Renderer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.RendererSetNetworkRenderer">
            <summary>Sets the shim of RTCore.set_Renderer(NetworkRenderer value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.SatellitesGet">
            <summary>Sets the shim of RTCore.get_Satellites()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.SatellitesSetSatelliteManager">
            <summary>Sets the shim of RTCore.set_Satellites(SatelliteManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.Start">
            <summary>Sets the shim of RTCore.Start()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.TimeQuadrantPatcherGet">
            <summary>Sets the shim of RTCore.get_TimeQuadrantPatcher()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.TimeQuadrantPatcherSetTimeQuadrantPatcher">
            <summary>Sets the shim of RTCore.set_TimeQuadrantPatcher(TimeQuadrantPatcher value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.Update">
            <summary>Sets the shim of RTCore.Update()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__0KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__0(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__10KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__10(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__11KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__11(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__12KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__12(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__1KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__1(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__2KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__2(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__3KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__3(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__4KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__4(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__5KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__5(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__6KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__6(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__7KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__7(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__8KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__8(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__9KeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__9(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__aKeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__a(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__bKeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__b(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__cKeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__c(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__dKeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__d(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__eKeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__e(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._GetActivatedGroupb__fKeyValuePairOfStringUInt64">
            <summary>Sets the shim of RTCore.&lt;GetActivatedGroup&gt;b__f(KeyValuePair`2&lt;String,UInt64&gt; l)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._ctorb__29">
            <summary>Sets the shim of RTCore.&lt;.ctor&gt;b__29()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore._ctorb__2a">
            <summary>Sets the shim of RTCore.&lt;.ctor&gt;b__2a()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTCore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.AntennasGet">
            <summary>Sets the shim of RTCore.get_Antennas()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.AntennasSetAntennaManager">
            <summary>Sets the shim of RTCore.set_Antennas(AntennaManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.FilterOverlayGet">
            <summary>Sets the shim of RTCore.get_FilterOverlay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.FilterOverlaySetFilterOverlay">
            <summary>Sets the shim of RTCore.set_FilterOverlay(FilterOverlay value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.FixedUpdate">
            <summary>Sets the shim of RTCore.FixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.FocusOverlayGet">
            <summary>Sets the shim of RTCore.get_FocusOverlay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.FocusOverlaySetFocusOverlay">
            <summary>Sets the shim of RTCore.set_FocusOverlay(FocusOverlay value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.GetActivatedGroup">
            <summary>Sets the shim of RTCore.GetActivatedGroup()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.GetLocks">
            <summary>Sets the shim of RTCore.GetLocks()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.GroupsGet">
            <summary>Sets the shim of RTCore.get_Groups()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.GroupsSetGroupManager">
            <summary>Sets the shim of RTCore.set_Groups(GroupManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.NetworkGet">
            <summary>Sets the shim of RTCore.get_Network()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.NetworkSetNetworkManager">
            <summary>Sets the shim of RTCore.set_Network(NetworkManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.OnDestroy">
            <summary>Sets the shim of RTCore.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.OnFrameUpdateAddAction">
            <summary>Sets the shim of RTCore.add_OnFrameUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.OnFrameUpdateRemoveAction">
            <summary>Sets the shim of RTCore.remove_OnFrameUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.OnGUI">
            <summary>Sets the shim of RTCore.OnGUI()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.OnGuiUpdateAddAction">
            <summary>Sets the shim of RTCore.add_OnGuiUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.OnGuiUpdateRemoveAction">
            <summary>Sets the shim of RTCore.remove_OnGuiUpdate(Action value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.ReleaseLocks">
            <summary>Sets the shim of RTCore.ReleaseLocks()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.RendererGet">
            <summary>Sets the shim of RTCore.get_Renderer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.RendererSetNetworkRenderer">
            <summary>Sets the shim of RTCore.set_Renderer(NetworkRenderer value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.SatellitesGet">
            <summary>Sets the shim of RTCore.get_Satellites()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.SatellitesSetSatelliteManager">
            <summary>Sets the shim of RTCore.set_Satellites(SatelliteManager value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.Start">
            <summary>Sets the shim of RTCore.Start()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.TimeQuadrantPatcherGet">
            <summary>Sets the shim of RTCore.get_TimeQuadrantPatcher()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.TimeQuadrantPatcherSetTimeQuadrantPatcher">
            <summary>Sets the shim of RTCore.set_TimeQuadrantPatcher(TimeQuadrantPatcher value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCore.AllInstances.Update">
            <summary>Sets the shim of RTCore.Update()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTCoreFlight">
            <summary>Shim type of RemoteTech.RTCoreFlight</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreFlight.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreFlight.#ctor(RemoteTech.RTCoreFlight)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreFlight.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreFlight.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreFlight.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreFlight.Constructor">
            <summary>Sets the shim of RTCoreFlight.RTCoreFlight()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreFlight.Start">
            <summary>Sets the shim of RTCoreFlight.Start()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTCoreFlight.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreFlight.AllInstances.Start">
            <summary>Sets the shim of RTCoreFlight.Start()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTCoreTracking">
            <summary>Shim type of RemoteTech.RTCoreTracking</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreTracking.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreTracking.#ctor(RemoteTech.RTCoreTracking)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreTracking.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTCoreTracking.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreTracking.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreTracking.Constructor">
            <summary>Sets the shim of RTCoreTracking.RTCoreTracking()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreTracking.OnDestroy">
            <summary>Sets the shim of RTCoreTracking.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreTracking.Start">
            <summary>Sets the shim of RTCoreTracking.Start()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTCoreTracking.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreTracking.AllInstances.OnDestroy">
            <summary>Sets the shim of RTCoreTracking.OnDestroy()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTCoreTracking.AllInstances.Start">
            <summary>Sets the shim of RTCoreTracking.Start()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTGui">
            <summary>Shim type of RemoteTech.RTGui</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1GUIContentM0M0ActionOfBooleanInt32GUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.GUIContent,``0,``0,System.Action{System.Boolean,System.Int32},UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, !!0 state, !!0 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1GUIContentM0M0ActionOfBooleanInt32GUIStyleGUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.GUIContent,``0,``0,System.Action{System.Boolean,System.Int32},UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, !!0 state, !!0 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1GUIContentM0M0ActionOfInt32GUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.GUIContent,``0,``0,System.Action{System.Int32},UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, !!0 state, !!0 value, Action`1&lt;Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1GUIContentM0M0ActionOfInt32GUIStyleGUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.GUIContent,``0,``0,System.Action{System.Int32},UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, !!0 state, !!0 value, Action`1&lt;Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1StringM0M0ActionOfBooleanInt32GUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,``0,System.Action{System.Boolean,System.Int32},UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(String text, !!0 state, !!0 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1StringM0M0ActionOfBooleanInt32GUIStyleGUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,``0,System.Action{System.Boolean,System.Int32},UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(String text, !!0 state, !!0 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1StringM0M0ActionOfInt32GUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,``0,System.Action{System.Int32},UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(String text, !!0 state, !!0 value, Action`1&lt;Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1StringM0M0ActionOfInt32GUIStyleGUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0,``0,System.Action{System.Int32},UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(String text, !!0 state, !!0 value, Action`1&lt;Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1Texture2DM0M0ActionOfBooleanInt32GUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.Texture2D,``0,``0,System.Action{System.Boolean,System.Int32},UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(Texture2D text, !!0 state, !!0 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1Texture2DM0M0ActionOfBooleanInt32GUIStyleGUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.Texture2D,``0,``0,System.Action{System.Boolean,System.Int32},UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(Texture2D text, !!0 state, !!0 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1Texture2DM0M0ActionOfInt32GUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.Texture2D,``0,``0,System.Action{System.Int32},UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(Texture2D text, !!0 state, !!0 value, Action`1&lt;Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTGui.StateButtonOf1Texture2DM0M0ActionOfInt32GUIStyleGUILayoutOptionArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.Texture2D,``0,``0,System.Action{System.Int32},UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[]})">
            <summary>Sets the shim of RTGui.StateButton(Texture2D text, !!0 state, !!0 value, Action`1&lt;Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.AreaActionRect">
            <summary>Sets the shim of RTGui.Area(Action a, Rect rect)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.AreaActionRectGUIStyle">
            <summary>Sets the shim of RTGui.Area(Action a, Rect rect, GUIStyle style)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonGUIContentActionGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(GUIContent c, Action onClick, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonGUIContentActionGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(GUIContent c, Action onClick, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonGUIContentActionOfBooleanGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(GUIContent c, Action`1&lt;Boolean&gt; onClick, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonGUIContentActionOfBooleanGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(GUIContent c, Action`1&lt;Boolean&gt; onClick, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonStringActionGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(String s, Action onClick, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonStringActionGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(String s, Action onClick, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonStringActionOfBooleanGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(String s, Action`1&lt;Boolean&gt; onClick, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonStringActionOfBooleanGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(String s, Action`1&lt;Boolean&gt; onClick, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonTexture2DActionGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(Texture2D icon, Action onClick, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonTexture2DActionGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(Texture2D icon, Action onClick, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonTexture2DActionOfBooleanGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(Texture2D icon, Action`1&lt;Boolean&gt; onClick, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ButtonTexture2DActionOfBooleanGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.Button(Texture2D icon, Action`1&lt;Boolean&gt; onClick, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ClickableOverlayActionOfBooleanRect">
            <summary>Sets the shim of RTGui.ClickableOverlay(Action`1&lt;Boolean&gt; onClick, Rect r)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ClickableOverlayActionRect">
            <summary>Sets the shim of RTGui.ClickableOverlay(Action onClick, Rect r)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ContainsMouseRect">
            <summary>Sets the shim of RTGui.ContainsMouse(Rect window)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.HorizontalBlockActionGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.HorizontalBlock(Action a, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.HorizontalBlockActionGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.HorizontalBlock(Action a, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.HorizontalSliderSingleRefSingleSingleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.HorizontalSlider(Single&amp; state, Single min, Single max, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ScrollViewBlockVector2RefActionGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.ScrollViewBlock(Vector2&amp; scrollPosition, Action a, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.ScrollViewBlockVector2RefActionGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.ScrollViewBlock(Vector2&amp; scrollPosition, Action a, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonGUIContentInt32Int32ActionOfBooleanInt32GUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, Int32 state, Int32 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonGUIContentInt32Int32ActionOfBooleanInt32GUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, Int32 state, Int32 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonGUIContentInt32Int32ActionOfInt32GUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, Int32 state, Int32 value, Action`1&lt;Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonGUIContentInt32Int32ActionOfInt32GUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(GUIContent text, Int32 state, Int32 value, Action`1&lt;Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonStringInt32Int32ActionOfBooleanInt32GUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(String text, Int32 state, Int32 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonStringInt32Int32ActionOfBooleanInt32GUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(String text, Int32 state, Int32 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonStringInt32Int32ActionOfInt32GUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(String text, Int32 state, Int32 value, Action`1&lt;Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonStringInt32Int32ActionOfInt32GUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(String text, Int32 state, Int32 value, Action`1&lt;Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonTexture2DInt32Int32ActionOfBooleanInt32GUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(Texture2D tex, Int32 state, Int32 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonTexture2DInt32Int32ActionOfBooleanInt32GUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(Texture2D tex, Int32 state, Int32 value, Action`2&lt;Boolean,Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonTexture2DInt32Int32ActionOfInt32GUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(Texture2D tex, Int32 state, Int32 value, Action`1&lt;Int32&gt; onStateChange, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.StateButtonTexture2DInt32Int32ActionOfInt32GUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.StateButton(Texture2D tex, Int32 state, Int32 value, Action`1&lt;Int32&gt; onStateChange, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.TextFieldStringRefGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.TextField(String&amp; text, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.TextFieldStringRefGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.TextField(String&amp; text, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.VerticalBlockActionGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.VerticalBlock(Action a, GUILayoutOption[] options)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTGui.VerticalBlockActionGUIStyleGUILayoutOptionArray">
            <summary>Sets the shim of RTGui.VerticalBlock(Action a, GUIStyle style, GUILayoutOption[] options)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTLog">
            <summary>Shim type of RemoteTech.RTLog</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTLog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTLog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTLog.ToDebugStringOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.String})">
            <summary>Sets the shim of RTLog.ToDebugString(List`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTLog.ToDebugStringOf2IDictionaryOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{``0,``1},System.String})">
            <summary>Sets the shim of RTLog.ToDebugString(IDictionary`2&lt;!!0,!!1&gt; dictionary)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTLog._ToDebugStringb__0Of2KeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.String})">
            <summary>Sets the shim of RTLog.&lt;ToDebugString&gt;b__0(KeyValuePair`2&lt;!!0,!!1&gt; kv)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTLog._ToDebugStringb__1Of1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.String})">
            <summary>Sets the shim of RTLog.&lt;ToDebugString&gt;b__1(!!0 x)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTLog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTLog.DebugString">
            <summary>Sets the shim of RTLog.Debug(String message)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTLog.DebugStringObjectArray">
            <summary>Sets the shim of RTLog.Debug(String message, Object[] param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTLog.DebugStringObjectArray01">
            <summary>Sets the shim of RTLog.Debug(String message, Object[] param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTLog.NotifyString">
            <summary>Sets the shim of RTLog.Notify(String message)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTLog.NotifyStringObjectArray">
            <summary>Sets the shim of RTLog.Notify(String message, Object[] param)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTLog.NotifyStringObjectArray01">
            <summary>Sets the shim of RTLog.Notify(String message, Object[] param)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTSettings">
            <summary>Shim type of RemoteTech.RTSettings</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTSettings.#ctor(RemoteTech.RTSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTSettings.Constructor">
            <summary>Sets the shim of RTSettings.RTSettings()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTSettings.InstanceGet">
            <summary>Sets the shim of RTSettings.get_Instance()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRTUtil">
            <summary>Shim type of RemoteTech.RTUtil</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTUtil.ClampOf1M0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,``0,``0})">
            <summary>Sets the shim of RTUtil.Clamp(!!0 value, !!0 min, !!0 max)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRTUtil.WrapAroundOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of RTUtil.WrapAround(IEnumerable`1&lt;!!0&gt; input)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.Coroutine_DelayFrameAction">
            <summary>Sets the shim of RTUtil.Coroutine_DelayFrame(Action a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.ExecuteNextFrameAction">
            <summary>Sets the shim of RTUtil.ExecuteNextFrame(Action a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.FindTransformsWithColliderTransform">
            <summary>Sets the shim of RTUtil.FindTransformsWithCollider(Transform input)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.Format180To360Single">
            <summary>Sets the shim of RTUtil.Format180To360(Single degrees)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.Format360To180Single">
            <summary>Sets the shim of RTUtil.Format360To180(Single degrees)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.Format360To180Vector3">
            <summary>Sets the shim of RTUtil.Format360To180(Vector3 v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.FormatConsumptionDouble">
            <summary>Sets the shim of RTUtil.FormatConsumption(Double consumption)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.FormatDurationDouble">
            <summary>Sets the shim of RTUtil.FormatDuration(Double duration)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.FormatSIDoubleString">
            <summary>Sets the shim of RTUtil.FormatSI(Double value, String unit)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.GameTimeGet">
            <summary>Sets the shim of RTUtil.get_GameTime()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.GenerateGuidCelestialBody">
            <summary>Sets the shim of RTUtil.GenerateGuid(CelestialBody cb)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.GetActiveVessel">
            <summary>Sets the shim of RTUtil.GetActiveVessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.GetBoolProtoPartModuleSnapshotString">
            <summary>Sets the shim of RTUtil.GetBool(ProtoPartModuleSnapshot ppms, String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.HasValueProtoPartModuleSnapshotString">
            <summary>Sets the shim of RTUtil.HasValue(ProtoPartModuleSnapshot ppms, String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.IsTechUnlockedString">
            <summary>Sets the shim of RTUtil.IsTechUnlocked(String techid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.ScreenMessageString">
            <summary>Sets the shim of RTUtil.ScreenMessage(String msg)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.StaticConstructor">
            <summary>Sets the shim of RTUtil.RTUtil()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.TruncateStringInt32">
            <summary>Sets the shim of RTUtil.Truncate(String targ, Int32 len)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.TryParseBooleanNullableString">
            <summary>Sets the shim of RTUtil.TryParseBooleanNullable(String s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.TryParseDoubleNullableString">
            <summary>Sets the shim of RTUtil.TryParseDoubleNullable(String s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.TryParseDurationStringTimeSpanOut">
            <summary>Sets the shim of RTUtil.TryParseDuration(String duration, TimeSpan&amp; time)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.TryParseGuidNullableString">
            <summary>Sets the shim of RTUtil.TryParseGuidNullable(String s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.TryParseIntNullableString">
            <summary>Sets the shim of RTUtil.TryParseIntNullable(String s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRTUtil.TryParseSingleNullableString">
            <summary>Sets the shim of RTUtil.TryParseSingleNullable(String s)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRangeModelBuilder">
            <summary>Shim type of RemoteTech.RangeModelBuilder</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelBuilder.#ctor(RemoteTech.RangeModelBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelBuilder.Constructor">
            <summary>Sets the shim of RangeModelBuilder.RangeModelBuilder()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelBuilder.CreateRangeModelType">
            <summary>Sets the shim of RangeModelBuilder.Create(RangeModelType type)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRangeModelBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRangeModelExtensions">
            <summary>Shim type of RemoteTech.RangeModelExtensions</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelExtensions.DistanceToISatelliteISatellite">
            <summary>Sets the shim of RangeModelExtensions.DistanceTo(ISatellite a, ISatellite b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelExtensions.HasLineOfSightWithISatelliteISatellite">
            <summary>Sets the shim of RangeModelExtensions.HasLineOfSightWith(ISatellite a, ISatellite b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelExtensions.IsInsideConeTargetIAntennaISatellite">
            <summary>Sets the shim of RangeModelExtensions.IsInsideCone(Target t, IAntenna a, ISatellite sat_b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelExtensions.IsTargetingIAntennaISatellite">
            <summary>Sets the shim of RangeModelExtensions.IsTargeting(IAntenna a, ISatellite sat_b)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRangeModelRoot">
            <summary>Shim type of RemoteTech.RangeModelRoot</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelRoot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelRoot.#ctor(RemoteTech.RangeModelRoot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelRoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelRoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelRoot.Bind(RemoteTech.IRangeModel)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot.Constructor">
            <summary>Sets the shim of RangeModelRoot.RangeModelRoot()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot.GetLinkISatelliteISatellite">
            <summary>Sets the shim of RangeModelRoot.GetLink(ISatellite sat_a, ISatellite sat_b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot.MaxDistanceDoubleDoubleDouble">
            <summary>Sets the shim of RangeModelRoot.MaxDistance(Double min, Double max, Double clamp)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__0IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__0(IAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__1IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__1(IAntenna b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__4IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__4(IAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__5IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__5(IAntenna b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__6IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__6(IAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__7IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__7(IAntenna b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__8IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__8(IAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot._GetLinkb__9IAntenna">
            <summary>Sets the shim of RangeModelRoot.&lt;GetLink&gt;b__9(IAntenna b)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRangeModelRoot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelRoot.AllInstances.GetLinkISatelliteISatellite">
            <summary>Sets the shim of RangeModelRoot.GetLink(ISatellite sat_a, ISatellite sat_b)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRangeModelStandard">
            <summary>Shim type of RemoteTech.RangeModelStandard</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelStandard.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelStandard.#ctor(RemoteTech.RangeModelStandard)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelStandard.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelStandard.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimRangeModelStandard.Bind(RemoteTech.IRangeModel)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard.Constructor">
            <summary>Sets the shim of RangeModelStandard.RangeModelStandard()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard.GetLinkISatelliteISatellite">
            <summary>Sets the shim of RangeModelStandard.GetLink(ISatellite sat_a, ISatellite sat_b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard._GetLinkb__0IAntenna">
            <summary>Sets the shim of RangeModelStandard.&lt;GetLink&gt;b__0(IAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard._GetLinkb__1IAntenna">
            <summary>Sets the shim of RangeModelStandard.&lt;GetLink&gt;b__1(IAntenna b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard._GetLinkb__4IAntenna">
            <summary>Sets the shim of RangeModelStandard.&lt;GetLink&gt;b__4(IAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard._GetLinkb__5IAntenna">
            <summary>Sets the shim of RangeModelStandard.&lt;GetLink&gt;b__5(IAntenna b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard._GetLinkb__6IAntenna">
            <summary>Sets the shim of RangeModelStandard.&lt;GetLink&gt;b__6(IAntenna a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard._GetLinkb__7IAntenna">
            <summary>Sets the shim of RangeModelStandard.&lt;GetLink&gt;b__7(IAntenna b)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimRangeModelStandard.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimRangeModelStandard.AllInstances.GetLinkISatelliteISatellite">
            <summary>Sets the shim of RangeModelStandard.GetLink(ISatellite sat_a, ISatellite sat_b)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimReadOnlyDictionary`2">
            <summary>Shim type of RemoteTech.ReadOnlyDictionary`2</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.#ctor(RemoteTech.ReadOnlyDictionary{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimReadOnlyDictionary`2.Bind(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.Constructor">
            <summary>Sets the shim of ReadOnlyDictionary`2.ReadOnlyDictionary`2()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ConstructorIDictionaryOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.ReadOnlyDictionary`2(IDictionary`2&lt;!0,!1&gt; dictionary)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ContainsKeyT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Sets the shim of ReadOnlyDictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.CountGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.GetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.IsReadOnlyGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ItemGetT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ItemSystemCollectionsGenericIDictionaryTKeyTValuegetT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Item(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ItemSystemCollectionsGenericIDictionaryTKeyTValuesetT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.KeysGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ReadOnlyException">
            <summary>Sets the shim of ReadOnlyDictionary`2.ReadOnlyException()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueAddKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueClear">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Clear()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueRemoveKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.SystemCollectionsGenericIDictionaryTKeyTValueAddT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.SystemCollectionsGenericIDictionaryTKeyTValueRemoveT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.TryGetValueT0T1Out">
            <summary>Sets the shim of ReadOnlyDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.ValuesGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Values()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.ContainsKeyT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.ContainsKey(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.ContainsKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.Contains(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.CopyToKeyValuePairOfT0T1ArrayInt32">
            <summary>Sets the shim of ReadOnlyDictionary`2.CopyTo(KeyValuePair`2&lt;!0,!1&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.CountGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.GetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary`2.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_IsReadOnly()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.ItemSystemCollectionsGenericIDictionaryTKeyTValuegetT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.get_Item(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.ItemSystemCollectionsGenericIDictionaryTKeyTValuesetT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.set_Item(!0 key, !1 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.KeysGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueAddKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueClear">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Clear()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.SystemCollectionsGenericICollectionSystemCollectionsGenericKeyValuePairTKeyTValueRemoveKeyValuePairOfT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(KeyValuePair`2&lt;!0,!1&gt; item)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.SystemCollectionsGenericIDictionaryTKeyTValueAddT0T1">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!0 key, !1 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.SystemCollectionsGenericIDictionaryTKeyTValueRemoveT0">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!0 key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ReadOnlyDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.TryGetValueT0T1Out">
            <summary>Sets the shim of ReadOnlyDictionary`2.TryGetValue(!0 key, !1&amp; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimReadOnlyDictionary`2.AllInstances.ValuesGet">
            <summary>Sets the shim of ReadOnlyDictionary`2.get_Values()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSatelliteExtensions">
            <summary>Shim type of RemoteTech.SatelliteExtensions</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteExtensions.ConnectionsISatellite">
            <summary>Sets the shim of SatelliteExtensions.Connections(ISatellite satellite)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSatelliteFragment">
            <summary>Shim type of RemoteTech.SatelliteFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteFragment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteFragment.#ctor(RemoteTech.SatelliteFragment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteFragment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteFragment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteFragment.Bind(RemoteTech.IFragment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteFragment.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AntennaGet">
            <summary>Sets the shim of SatelliteFragment.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AntennaSetIAntenna">
            <summary>Sets the shim of SatelliteFragment.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.ConstructorISatellite">
            <summary>Sets the shim of SatelliteFragment.SatelliteFragment(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.Dispose">
            <summary>Sets the shim of SatelliteFragment.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.Draw">
            <summary>Sets the shim of SatelliteFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.RefreshISatellite">
            <summary>Sets the shim of SatelliteFragment.Refresh(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.SatelliteGet">
            <summary>Sets the shim of SatelliteFragment.get_Satellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.SatelliteSetISatellite">
            <summary>Sets the shim of SatelliteFragment.set_Satellite(ISatellite value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.Update">
            <summary>Sets the shim of SatelliteFragment.Update()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment._Drawb__2">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__2()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment._Drawb__3">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__3()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment._Drawb__4Vessel">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__4(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment._Drawb__5">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__5()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment._Updateb__0IAntenna">
            <summary>Sets the shim of SatelliteFragment.&lt;Update&gt;b__0(IAntenna a)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.AntennaGet">
            <summary>Sets the shim of SatelliteFragment.get_Antenna()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.AntennaSetIAntenna">
            <summary>Sets the shim of SatelliteFragment.set_Antenna(IAntenna value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.Dispose">
            <summary>Sets the shim of SatelliteFragment.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.Draw">
            <summary>Sets the shim of SatelliteFragment.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.RefreshISatellite">
            <summary>Sets the shim of SatelliteFragment.Refresh(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.SatelliteGet">
            <summary>Sets the shim of SatelliteFragment.get_Satellite()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.SatelliteSetISatellite">
            <summary>Sets the shim of SatelliteFragment.set_Satellite(ISatellite value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances.Update">
            <summary>Sets the shim of SatelliteFragment.Update()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances._Drawb__2">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__2()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances._Drawb__3">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__3()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances._Drawb__4Vessel">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__4(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteFragment.AllInstances._Drawb__5">
            <summary>Sets the shim of SatelliteFragment.&lt;Draw&gt;b__5()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSatelliteManager">
            <summary>Shim type of RemoteTech.SatelliteManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteManager.#ctor(RemoteTech.SatelliteManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteManager.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteManager.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSatelliteManager.Bind(System.Collections.Generic.IEnumerable{RemoteTech.VesselSatellite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.Constructor">
            <summary>Sets the shim of SatelliteManager.SatelliteManager()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.CountGet">
            <summary>Sets the shim of SatelliteManager.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.Dispose">
            <summary>Sets the shim of SatelliteManager.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.FindCommandStations">
            <summary>Sets the shim of SatelliteManager.FindCommandStations()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.ForGuid">
            <summary>Sets the shim of SatelliteManager.For(Guid key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.GetEnumerator">
            <summary>Sets the shim of SatelliteManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.ItemGetGuid">
            <summary>Sets the shim of SatelliteManager.get_Item(Guid g)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.ItemGetVessel">
            <summary>Sets the shim of SatelliteManager.get_Item(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.OnFixedUpdate">
            <summary>Sets the shim of SatelliteManager.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.OnRegisterAddActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.add_OnRegister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.OnRegisterRemoveActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.remove_OnRegister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.OnUnregisterAddActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.add_OnUnregister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.OnUnregisterRemoveActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.remove_OnUnregister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.OnVesselCreateVessel">
            <summary>Sets the shim of SatelliteManager.OnVesselCreate(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.OnVesselDestroyVessel">
            <summary>Sets the shim of SatelliteManager.OnVesselDestroy(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.RegisterISignalProcessor">
            <summary>Sets the shim of SatelliteManager.Register(ISignalProcessor spu)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.RegisterProtoVessel">
            <summary>Sets the shim of SatelliteManager.RegisterProto(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of SatelliteManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.UnregisterGuidISignalProcessor">
            <summary>Sets the shim of SatelliteManager.Unregister(Guid key, ISignalProcessor spu)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.UnregisterISignalProcessor">
            <summary>Sets the shim of SatelliteManager.Unregister(ISignalProcessor spu)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.UnregisterProtoVessel">
            <summary>Sets the shim of SatelliteManager.UnregisterProto(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager._FindCommandStationsb__8VesselSatellite">
            <summary>Sets the shim of SatelliteManager.&lt;FindCommandStations&gt;b__8(VesselSatellite vs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager._ctorb__0VesselSatellite">
            <summary>Sets the shim of SatelliteManager.&lt;.ctor&gt;b__0(VesselSatellite param0)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager._ctorb__1VesselSatellite">
            <summary>Sets the shim of SatelliteManager.&lt;.ctor&gt;b__1(VesselSatellite param0)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager._ctorb__2VesselSatellite">
            <summary>Sets the shim of SatelliteManager.&lt;.ctor&gt;b__2(VesselSatellite vs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager._ctorb__3VesselSatellite">
            <summary>Sets the shim of SatelliteManager.&lt;.ctor&gt;b__3(VesselSatellite vs)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSatelliteManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.CountGet">
            <summary>Sets the shim of SatelliteManager.get_Count()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.Dispose">
            <summary>Sets the shim of SatelliteManager.Dispose()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.FindCommandStations">
            <summary>Sets the shim of SatelliteManager.FindCommandStations()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.ForGuid">
            <summary>Sets the shim of SatelliteManager.For(Guid key)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.GetEnumerator">
            <summary>Sets the shim of SatelliteManager.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.ItemGetGuid">
            <summary>Sets the shim of SatelliteManager.get_Item(Guid g)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.ItemGetVessel">
            <summary>Sets the shim of SatelliteManager.get_Item(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.OnFixedUpdate">
            <summary>Sets the shim of SatelliteManager.OnFixedUpdate()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.OnRegisterAddActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.add_OnRegister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.OnRegisterRemoveActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.remove_OnRegister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.OnUnregisterAddActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.add_OnUnregister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.OnUnregisterRemoveActionOfVesselSatellite">
            <summary>Sets the shim of SatelliteManager.remove_OnUnregister(Action`1&lt;VesselSatellite&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.OnVesselCreateVessel">
            <summary>Sets the shim of SatelliteManager.OnVesselCreate(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.OnVesselDestroyVessel">
            <summary>Sets the shim of SatelliteManager.OnVesselDestroy(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.RegisterISignalProcessor">
            <summary>Sets the shim of SatelliteManager.Register(ISignalProcessor spu)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.RegisterProtoVessel">
            <summary>Sets the shim of SatelliteManager.RegisterProto(Vessel vessel)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of SatelliteManager.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.UnregisterGuidISignalProcessor">
            <summary>Sets the shim of SatelliteManager.Unregister(Guid key, ISignalProcessor spu)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.UnregisterISignalProcessor">
            <summary>Sets the shim of SatelliteManager.Unregister(ISignalProcessor spu)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSatelliteManager.AllInstances.UnregisterProtoVessel">
            <summary>Sets the shim of SatelliteManager.UnregisterProto(Vessel vessel)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSettings">
            <summary>Shim type of RemoteTech.Settings</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSettings.#ctor(RemoteTech.Settings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSettings.Constructor">
            <summary>Sets the shim of Settings.Settings()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSettings.FileGet">
            <summary>Sets the shim of Settings.get_File()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSettings.Load">
            <summary>Sets the shim of Settings.Load()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSettings.Save">
            <summary>Sets the shim of Settings.Save()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSettings.AllInstances.Save">
            <summary>Sets the shim of Settings.Save()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimSignalProcessor">
            <summary>Shim type of RemoteTech.SignalProcessor</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSignalProcessor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSignalProcessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimSignalProcessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor.GetSignalProcessorVessel">
            <summary>Sets the shim of SignalProcessor.GetSignalProcessor(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor.HasCommandStationVessel">
            <summary>Sets the shim of SignalProcessor.HasCommandStation(Vessel v)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor.IsCommandStationPartModule">
            <summary>Sets the shim of SignalProcessor.IsCommandStation(PartModule pm)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor.IsCommandStationProtoPartModuleSnapshot">
            <summary>Sets the shim of SignalProcessor.IsCommandStation(ProtoPartModuleSnapshot ppms)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor.IsSignalProcessorPartModule">
            <summary>Sets the shim of SignalProcessor.IsSignalProcessor(PartModule pm)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor.IsSignalProcessorProtoPartModuleSnapshot">
            <summary>Sets the shim of SignalProcessor.IsSignalProcessor(ProtoPartModuleSnapshot ppms)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._GetSignalProcessorb__0Part">
            <summary>Sets the shim of SignalProcessor.&lt;GetSignalProcessor&gt;b__0(Part p)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._GetSignalProcessorb__1PartModule">
            <summary>Sets the shim of SignalProcessor.&lt;GetSignalProcessor&gt;b__1(PartModule pm)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._GetSignalProcessorb__2ProtoPartSnapshot">
            <summary>Sets the shim of SignalProcessor.&lt;GetSignalProcessor&gt;b__2(ProtoPartSnapshot x)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._GetSignalProcessorb__3ProtoPartModuleSnapshot">
            <summary>Sets the shim of SignalProcessor.&lt;GetSignalProcessor&gt;b__3(ProtoPartModuleSnapshot ppms)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._HasCommandStationb__8Part">
            <summary>Sets the shim of SignalProcessor.&lt;HasCommandStation&gt;b__8(Part p)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._HasCommandStationb__9PartModule">
            <summary>Sets the shim of SignalProcessor.&lt;HasCommandStation&gt;b__9(PartModule pm)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._HasCommandStationb__aProtoPartSnapshot">
            <summary>Sets the shim of SignalProcessor.&lt;HasCommandStation&gt;b__a(ProtoPartSnapshot x)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimSignalProcessor._HasCommandStationb__bProtoPartModuleSnapshot">
            <summary>Sets the shim of SignalProcessor.&lt;HasCommandStation&gt;b__b(ProtoPartModuleSnapshot pm)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTarget">
            <summary>Shim type of RemoteTech.Target</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.#ctor(RemoteTech.Target)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.Bind(IPersistenceLoad)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.Bind(System.IEquatable{RemoteTech.Target})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTarget.Bind(System.Collections.Generic.IEnumerable{RemoteTech.ISatellite})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.ActiveVessel">
            <summary>Sets the shim of Target.ActiveVessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.Constructor">
            <summary>Sets the shim of Target.Target()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.EqualsObject">
            <summary>Sets the shim of Target.Equals(Object obj)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.EqualsTarget">
            <summary>Sets the shim of Target.Equals(Target other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.GetEnumerator">
            <summary>Sets the shim of Target.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.GetHashCode">
            <summary>Sets the shim of Target.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.GetTargets">
            <summary>Sets the shim of Target.GetTargets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.GroupString">
            <summary>Sets the shim of Target.Group(String name)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.IncludesCelestialBody">
            <summary>Sets the shim of Target.Includes(CelestialBody cb)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.IsMultipleGet">
            <summary>Sets the shim of Target.get_IsMultiple()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.PersistenceLoad">
            <summary>Sets the shim of Target.PersistenceLoad()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.PlanetCelestialBody">
            <summary>Sets the shim of Target.Planet(CelestialBody cb)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.SingleISatellite">
            <summary>Sets the shim of Target.Single(ISatellite sat)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.SingleUnsafeCompatibilityGuid">
            <summary>Sets the shim of Target.SingleUnsafeCompatibility(Guid guid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.StaticConstructor">
            <summary>Sets the shim of Target.Target()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Target.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTarget.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.EqualsObject">
            <summary>Sets the shim of Target.Equals(Object obj)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.EqualsTarget">
            <summary>Sets the shim of Target.Equals(Target other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.GetEnumerator">
            <summary>Sets the shim of Target.GetEnumerator()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.GetHashCode01">
            <summary>Sets the shim of Target.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.GetTargets">
            <summary>Sets the shim of Target.GetTargets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.IncludesCelestialBody">
            <summary>Sets the shim of Target.Includes(CelestialBody cb)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.IsMultipleGet">
            <summary>Sets the shim of Target.get_IsMultiple()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.PersistenceLoad">
            <summary>Sets the shim of Target.PersistenceLoad()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTarget.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Target.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTargetCommand">
            <summary>Shim type of RemoteTech.TargetCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTargetCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTargetCommand.#ctor(RemoteTech.TargetCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTargetCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTargetCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTargetCommand.Bind(RemoteTech.ICommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTargetCommand.Bind(System.IComparable{RemoteTech.ICommand})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.Constructor">
            <summary>Sets the shim of TargetCommand.TargetCommand()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.DescriptionGet">
            <summary>Sets the shim of TargetCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of TargetCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.ExtraDelayGet">
            <summary>Sets the shim of TargetCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.ExtraDelaySetDouble">
            <summary>Sets the shim of TargetCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.PopFlightComputer">
            <summary>Sets the shim of TargetCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.PriorityGet">
            <summary>Sets the shim of TargetCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.TargetGet">
            <summary>Sets the shim of TargetCommand.get_Target()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.TargetSetITargetable">
            <summary>Sets the shim of TargetCommand.set_Target(ITargetable value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.WithTargetITargetable">
            <summary>Sets the shim of TargetCommand.WithTarget(ITargetable target)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTargetCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.DescriptionGet">
            <summary>Sets the shim of TargetCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the shim of TargetCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.ExtraDelayGet">
            <summary>Sets the shim of TargetCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.ExtraDelaySetDouble">
            <summary>Sets the shim of TargetCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.PopFlightComputer">
            <summary>Sets the shim of TargetCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.PriorityGet">
            <summary>Sets the shim of TargetCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.TargetGet">
            <summary>Sets the shim of TargetCommand.get_Target()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTargetCommand.AllInstances.TargetSetITargetable">
            <summary>Sets the shim of TargetCommand.set_Target(ITargetable value)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTextures">
            <summary>Shim type of RemoteTech.Textures</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTextures.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTextures.#ctor(RemoteTech.Textures)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTextures.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTextures.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTextures.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTextures.Constructor">
            <summary>Sets the shim of Textures.Textures()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTextures.LoadImageString">
            <summary>Sets the shim of Textures.LoadImage(String fileName)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTextures.StaticConstructor">
            <summary>Sets the shim of Textures.Textures()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTextures.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTimeQuadrantPatcher">
            <summary>Shim type of RemoteTech.TimeQuadrantPatcher</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTimeQuadrantPatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTimeQuadrantPatcher.#ctor(RemoteTech.TimeQuadrantPatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTimeQuadrantPatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTimeQuadrantPatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.ButtonStyleGet">
            <summary>Sets the shim of TimeQuadrantPatcher.get_ButtonStyle()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.Constructor">
            <summary>Sets the shim of TimeQuadrantPatcher.TimeQuadrantPatcher()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.DisplayTextGet">
            <summary>Sets the shim of TimeQuadrantPatcher.get_DisplayText()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.Draw">
            <summary>Sets the shim of TimeQuadrantPatcher.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.Patch">
            <summary>Sets the shim of TimeQuadrantPatcher.Patch()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.StaticConstructor">
            <summary>Sets the shim of TimeQuadrantPatcher.TimeQuadrantPatcher()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.Undo">
            <summary>Sets the shim of TimeQuadrantPatcher.Undo()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTimeQuadrantPatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.AllInstances.ButtonStyleGet">
            <summary>Sets the shim of TimeQuadrantPatcher.get_ButtonStyle()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.AllInstances.DisplayTextGet">
            <summary>Sets the shim of TimeQuadrantPatcher.get_DisplayText()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.AllInstances.Draw">
            <summary>Sets the shim of TimeQuadrantPatcher.Draw()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.AllInstances.Patch">
            <summary>Sets the shim of TimeQuadrantPatcher.Patch()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTimeQuadrantPatcher.AllInstances.Undo">
            <summary>Sets the shim of TimeQuadrantPatcher.Undo()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTopicEventOwner`2">
            <summary>Shim type of RemoteTech.TopicEventOwner`2</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTopicEventOwner`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTopicEventOwner`2.#ctor(RemoteTech.TopicEventOwner{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTopicEventOwner`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTopicEventOwner`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimTopicEventOwner`2.Bind(RemoteTech.ITopicEvent{`0,`1})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.ClientGet">
            <summary>Sets the shim of TopicEventOwner`2.get_Client()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.Constructor">
            <summary>Sets the shim of TopicEventOwner`2.TopicEventOwner`2()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.SubscribeT0ActionOfT1">
            <summary>Sets the shim of TopicEventOwner`2.Subscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.TriggerT0T1">
            <summary>Sets the shim of TopicEventOwner`2.Trigger(!0 key, !1 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.UnsubscribeT0ActionOfT1">
            <summary>Sets the shim of TopicEventOwner`2.Unsubscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2._Subscribeb__0T1">
            <summary>Sets the shim of TopicEventOwner`2.&lt;Subscribe&gt;b__0(!1 param0)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimTopicEventOwner`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.AllInstances.ClientGet">
            <summary>Sets the shim of TopicEventOwner`2.get_Client()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.AllInstances.SubscribeT0ActionOfT1">
            <summary>Sets the shim of TopicEventOwner`2.Subscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.AllInstances.TriggerT0T1">
            <summary>Sets the shim of TopicEventOwner`2.Trigger(!0 key, !1 value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimTopicEventOwner`2.AllInstances.UnsubscribeT0ActionOfT1">
            <summary>Sets the shim of TopicEventOwner`2.Unsubscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimUIPartActionMenuPatcher">
            <summary>Shim type of RemoteTech.UIPartActionMenuPatcher</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUIPartActionMenuPatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUIPartActionMenuPatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUIPartActionMenuPatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher.WrapVesselActionOfBaseEventBoolean">
            <summary>Sets the shim of UIPartActionMenuPatcher.Wrap(Vessel parent, Action`2&lt;BaseEvent,Boolean&gt; pass)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher._Wrapb__0FieldInfo">
            <summary>Sets the shim of UIPartActionMenuPatcher.&lt;Wrap&gt;b__0(FieldInfo fi)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher._Wrapb__2FieldInfo">
            <summary>Sets the shim of UIPartActionMenuPatcher.&lt;Wrap&gt;b__2(FieldInfo fi)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher._Wrapb__3FieldInfo">
            <summary>Sets the shim of UIPartActionMenuPatcher.&lt;Wrap&gt;b__3(FieldInfo fi)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher._Wrapb__4Object">
            <summary>Sets the shim of UIPartActionMenuPatcher.&lt;Wrap&gt;b__4(Object a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher._Wrapb__5Object">
            <summary>Sets the shim of UIPartActionMenuPatcher.&lt;Wrap&gt;b__5(Object a)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUIPartActionMenuPatcher._Wrapb__6FieldInfo">
            <summary>Sets the shim of UIPartActionMenuPatcher.&lt;Wrap&gt;b__6(FieldInfo fi)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimUnorderedPair`1">
            <summary>Shim type of RemoteTech.UnorderedPair`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUnorderedPair`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUnorderedPair`1.#ctor(RemoteTech.UnorderedPair{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUnorderedPair`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUnorderedPair`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimUnorderedPair`1.Bind(System.IEquatable{RemoteTech.UnorderedPair{`0}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.ConstructorT0T0">
            <summary>Sets the shim of UnorderedPair`1.UnorderedPair`1(!0 a, !0 b)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.EqualsObject">
            <summary>Sets the shim of UnorderedPair`1.Equals(Object obj)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.EqualsUnorderedPairOfT0">
            <summary>Sets the shim of UnorderedPair`1.Equals(UnorderedPair`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.GetHashCode">
            <summary>Sets the shim of UnorderedPair`1.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.ToString">
            <summary>Sets the shim of UnorderedPair`1.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimUnorderedPair`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.AllInstances.EqualsObject">
            <summary>Sets the shim of UnorderedPair`1.Equals(Object obj)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.AllInstances.EqualsUnorderedPairOfT0">
            <summary>Sets the shim of UnorderedPair`1.Equals(UnorderedPair`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.AllInstances.GetHashCode01">
            <summary>Sets the shim of UnorderedPair`1.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimUnorderedPair`1.AllInstances.ToString01">
            <summary>Sets the shim of UnorderedPair`1.ToString()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimVesselAntenna">
            <summary>Shim type of RemoteTech.VesselAntenna</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselAntenna.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselAntenna.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselAntenna.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.IsAntennaPartModule">
            <summary>Sets the shim of VesselAntenna.IsAntenna(PartModule pm)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.IsAntennaProtoPartModuleSnapshot">
            <summary>Sets the shim of VesselAntenna.IsAntenna(ProtoPartModuleSnapshot ppms)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.ParseAntennaDishRangeConfigNode">
            <summary>Sets the shim of VesselAntenna.ParseAntennaDishRange(ConfigNode n)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.ParseAntennaIsActivatedConfigNode">
            <summary>Sets the shim of VesselAntenna.ParseAntennaIsActivated(ConfigNode n)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.ParseAntennaIsPoweredConfigNode">
            <summary>Sets the shim of VesselAntenna.ParseAntennaIsPowered(ConfigNode n)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.ParseAntennaOmniRangeConfigNode">
            <summary>Sets the shim of VesselAntenna.ParseAntennaOmniRange(ConfigNode n)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.ParseAntennaRadiansConfigNode">
            <summary>Sets the shim of VesselAntenna.ParseAntennaRadians(ConfigNode n)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.ParseAntennaSingleTargetConfigNode">
            <summary>Sets the shim of VesselAntenna.ParseAntennaSingleTarget(ConfigNode n)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.ParseAntennaTargetsConfigNode">
            <summary>Sets the shim of VesselAntenna.ParseAntennaTargets(ConfigNode n)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselAntenna.SaveAntennaTargetsConfigNodeEventListWrapperOfTarget">
            <summary>Sets the shim of VesselAntenna.SaveAntennaTargets(ConfigNode n, EventListWrapper`1&lt;Target&gt; targets)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimVesselSatellite">
            <summary>Shim type of RemoteTech.VesselSatellite</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselSatellite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselSatellite.#ctor(RemoteTech.VesselSatellite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselSatellite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselSatellite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:RemoteTech.Fakes.ShimVesselSatellite.Bind(RemoteTech.ISatellite)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AntennasGet">
            <summary>Sets the shim of VesselSatellite.get_Antennas()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.BodyGet">
            <summary>Sets the shim of VesselSatellite.get_Body()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.ConstructorGuidListOfISignalProcessor">
            <summary>Sets the shim of VesselSatellite.VesselSatellite(Guid key, List`1&lt;ISignalProcessor&gt; parts)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.FlightComputerGet">
            <summary>Sets the shim of VesselSatellite.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.GetHashCode">
            <summary>Sets the shim of VesselSatellite.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.GroupGet">
            <summary>Sets the shim of VesselSatellite.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.GroupSetGroup">
            <summary>Sets the shim of VesselSatellite.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.GuidGet">
            <summary>Sets the shim of VesselSatellite.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.GuidSetGuid">
            <summary>Sets the shim of VesselSatellite.set_Guid(Guid value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.HasLocalControlGet">
            <summary>Sets the shim of VesselSatellite.get_HasLocalControl()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.IsCommandStationGet">
            <summary>Sets the shim of VesselSatellite.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.NameGet">
            <summary>Sets the shim of VesselSatellite.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.NameSetString">
            <summary>Sets the shim of VesselSatellite.set_Name(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.OnConnectionRefreshListOfNetworkRouteOfISatellite">
            <summary>Sets the shim of VesselSatellite.OnConnectionRefresh(List`1&lt;NetworkRoute`1&lt;ISatellite&gt;&gt; routes)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.PositionGet">
            <summary>Sets the shim of VesselSatellite.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.PoweredGet">
            <summary>Sets the shim of VesselSatellite.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.SignalProcessorGet">
            <summary>Sets the shim of VesselSatellite.get_SignalProcessor()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.SignalProcessorsGet">
            <summary>Sets the shim of VesselSatellite.get_SignalProcessors()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.SignalProcessorsSetListOfISignalProcessor">
            <summary>Sets the shim of VesselSatellite.set_SignalProcessors(List`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.ToString">
            <summary>Sets the shim of VesselSatellite.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.VisibleGet">
            <summary>Sets the shim of VesselSatellite.get_Visible()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite._get_HasLocalControlb__7">
            <summary>Sets the shim of VesselSatellite.&lt;get_HasLocalControl&gt;b__7()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite._get_HasLocalControlb__8Part">
            <summary>Sets the shim of VesselSatellite.&lt;get_HasLocalControl&gt;b__8(Part p)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite._get_IsCommandStationb__2ISignalProcessor">
            <summary>Sets the shim of VesselSatellite.&lt;get_IsCommandStation&gt;b__2(ISignalProcessor s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite._get_Poweredb__0ISignalProcessor">
            <summary>Sets the shim of VesselSatellite.&lt;get_Powered&gt;b__0(ISignalProcessor s)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite._get_SignalProcessorb__4">
            <summary>Sets the shim of VesselSatellite.&lt;get_SignalProcessor&gt;b__4()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite._get_SignalProcessorb__5ISignalProcessor">
            <summary>Sets the shim of VesselSatellite.&lt;get_SignalProcessor&gt;b__5(ISignalProcessor s)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.ShimVesselSatellite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.AntennasGet">
            <summary>Sets the shim of VesselSatellite.get_Antennas()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.BodyGet">
            <summary>Sets the shim of VesselSatellite.get_Body()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.FlightComputerGet">
            <summary>Sets the shim of VesselSatellite.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.GetHashCode01">
            <summary>Sets the shim of VesselSatellite.GetHashCode()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.GroupGet">
            <summary>Sets the shim of VesselSatellite.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.GroupSetGroup">
            <summary>Sets the shim of VesselSatellite.set_Group(Group value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.GuidGet">
            <summary>Sets the shim of VesselSatellite.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.GuidSetGuid">
            <summary>Sets the shim of VesselSatellite.set_Guid(Guid value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.HasLocalControlGet">
            <summary>Sets the shim of VesselSatellite.get_HasLocalControl()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.IsCommandStationGet">
            <summary>Sets the shim of VesselSatellite.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.NameGet">
            <summary>Sets the shim of VesselSatellite.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.NameSetString">
            <summary>Sets the shim of VesselSatellite.set_Name(String value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.OnConnectionRefreshListOfNetworkRouteOfISatellite">
            <summary>Sets the shim of VesselSatellite.OnConnectionRefresh(List`1&lt;NetworkRoute`1&lt;ISatellite&gt;&gt; routes)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.PositionGet">
            <summary>Sets the shim of VesselSatellite.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.PoweredGet">
            <summary>Sets the shim of VesselSatellite.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.SignalProcessorGet">
            <summary>Sets the shim of VesselSatellite.get_SignalProcessor()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.SignalProcessorsGet">
            <summary>Sets the shim of VesselSatellite.get_SignalProcessors()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.SignalProcessorsSetListOfISignalProcessor">
            <summary>Sets the shim of VesselSatellite.set_SignalProcessors(List`1&lt;ISignalProcessor&gt; value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.ToString01">
            <summary>Sets the shim of VesselSatellite.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances.VisibleGet">
            <summary>Sets the shim of VesselSatellite.get_Visible()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances._get_HasLocalControlb__7">
            <summary>Sets the shim of VesselSatellite.&lt;get_HasLocalControl&gt;b__7()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.ShimVesselSatellite.AllInstances._get_SignalProcessorb__4">
            <summary>Sets the shim of VesselSatellite.&lt;get_SignalProcessor&gt;b__4()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAbstractCommand">
            <summary>Stub type of RemoteTech.AbstractCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractCommand.Abort">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractCommand.Abort01">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubAbstractCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractCommand.DescriptionGet">
            <summary>Sets the stub of AbstractCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractCommand.ExtraDelayGet">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractCommand.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of AbstractCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractCommand.PopFlightComputer">
            <summary>Sets the stub of AbstractCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractCommand.PriorityGet">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractCommand.Description">
            <summary>Sets the stub of AbstractCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractCommand.ExtraDelay">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractCommand.Priority">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAbstractWindow">
            <summary>Stub type of RemoteTech.AbstractWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractWindow.#ctor(System.Guid,System.String,UnityEngine.Rect,RemoteTech.WindowAlign)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractWindow.Draw">
            <summary>Sets the stub of AbstractWindow.Draw()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractWindow.Draw01">
            <summary>Sets the stub of AbstractWindow.Draw()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractWindow.Hide">
            <summary>Sets the stub of AbstractWindow.Hide()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractWindow.Hide01">
            <summary>Sets the stub of AbstractWindow.Hide()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractWindow.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractWindow.Show">
            <summary>Sets the stub of AbstractWindow.Show()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractWindow.Show01">
            <summary>Sets the stub of AbstractWindow.Show()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAbstractWindow.Window(System.Int32)">
            <summary>Sets the stub of AbstractWindow.Window(Int32 uid)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAbstractWindow.WindowInt32">
            <summary>Sets the stub of AbstractWindow.Window(Int32 uid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractWindow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractWindow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAbstractWindow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubActionGroupCommand">
            <summary>Stub type of RemoteTech.ActionGroupCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubActionGroupCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubActionGroupCommand.Abort">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubActionGroupCommand.Abort01">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubActionGroupCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubActionGroupCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubActionGroupCommand.DescriptionGet">
            <summary>Sets the stub of ActionGroupCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubActionGroupCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubActionGroupCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubActionGroupCommand.ExtraDelayGet">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubActionGroupCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubActionGroupCommand.InitializeStub">
            <summary>Initializes a new instance of type StubActionGroupCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubActionGroupCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of ActionGroupCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubActionGroupCommand.PopFlightComputer">
            <summary>Sets the stub of ActionGroupCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubActionGroupCommand.PriorityGet">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubActionGroupCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubActionGroupCommand.Description">
            <summary>Sets the stub of ActionGroupCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubActionGroupCommand.ExtraDelay">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubActionGroupCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubActionGroupCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubActionGroupCommand.Priority">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAdjacencyMap">
            <summary>Stub type of RemoteTech.AdjacencyMap</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAdjacencyMap.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAdjacencyMap.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAdjacencyMap.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAdjacencyMap.InitializeStub">
            <summary>Initializes a new instance of type StubAdjacencyMap</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAdjacencyMap.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAdjacencyMap.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAdjacencyMap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAdjacencyMap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAdjacencyMap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAntennaFragment">
            <summary>Stub type of RemoteTech.AntennaFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaFragment.#ctor(RemoteTech.IAntenna)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaFragment.InitializeStub">
            <summary>Initializes a new instance of type StubAntennaFragment</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaFragment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaFragment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaFragment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAntennaManager">
            <summary>Stub type of RemoteTech.AntennaManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaManager.InitializeStub">
            <summary>Initializes a new instance of type StubAntennaManager</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAntennaWindow">
            <summary>Stub type of RemoteTech.AntennaWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaWindow.#ctor(RemoteTech.IAntenna)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaWindow.Draw">
            <summary>Sets the stub of AbstractWindow.Draw()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAntennaWindow.Draw01">
            <summary>Sets the stub of AbstractWindow.Draw()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaWindow.Hide">
            <summary>Sets the stub of AntennaWindow.Hide()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAntennaWindow.Hide01">
            <summary>Sets the stub of AntennaWindow.Hide()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaWindow.InitializeStub">
            <summary>Initializes a new instance of type StubAntennaWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaWindow.Show">
            <summary>Sets the stub of AntennaWindow.Show()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAntennaWindow.Show01">
            <summary>Sets the stub of AntennaWindow.Show()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAntennaWindow.Window(System.Int32)">
            <summary>Sets the stub of AntennaWindow.Window(Int32 uid)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAntennaWindow.WindowInt32">
            <summary>Sets the stub of AntennaWindow.Window(Int32 uid)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaWindow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaWindow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAntennaWindow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAttitudeCommand">
            <summary>Stub type of RemoteTech.AttitudeCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeCommand.Abort">
            <summary>Sets the stub of AttitudeCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAttitudeCommand.Abort01">
            <summary>Sets the stub of AttitudeCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubAttitudeCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAttitudeCommand.DescriptionGet">
            <summary>Sets the stub of AttitudeCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of AttitudeCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAttitudeCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of AttitudeCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAttitudeCommand.ExtraDelayGet">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAttitudeCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeCommand.InitializeStub">
            <summary>Initializes a new instance of type StubAttitudeCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of AttitudeCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAttitudeCommand.PopFlightComputer">
            <summary>Sets the stub of AttitudeCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubAttitudeCommand.PriorityGet">
            <summary>Sets the stub of AttitudeCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeCommand.Description">
            <summary>Sets the stub of AttitudeCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeCommand.ExtraDelay">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeCommand.Priority">
            <summary>Sets the stub of AttitudeCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubAttitudeFragment">
            <summary>Stub type of RemoteTech.AttitudeFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeFragment.#ctor(RemoteTech.FlightComputer,System.Action)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubAttitudeFragment.InitializeStub">
            <summary>Initializes a new instance of type StubAttitudeFragment</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeFragment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeFragment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubAttitudeFragment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubBurnCommand">
            <summary>Stub type of RemoteTech.BurnCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubBurnCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubBurnCommand.Abort">
            <summary>Sets the stub of BurnCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubBurnCommand.Abort01">
            <summary>Sets the stub of BurnCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubBurnCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubBurnCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubBurnCommand.DescriptionGet">
            <summary>Sets the stub of BurnCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubBurnCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of BurnCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubBurnCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of BurnCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubBurnCommand.ExtraDelayGet">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubBurnCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubBurnCommand.InitializeStub">
            <summary>Initializes a new instance of type StubBurnCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubBurnCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of BurnCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubBurnCommand.PopFlightComputer">
            <summary>Sets the stub of BurnCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubBurnCommand.PriorityGet">
            <summary>Sets the stub of BurnCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubBurnCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubBurnCommand.Description">
            <summary>Sets the stub of BurnCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubBurnCommand.ExtraDelay">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubBurnCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubBurnCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubBurnCommand.Priority">
            <summary>Sets the stub of BurnCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubCachedField`1">
            <summary>Stub type of RemoteTech.CachedField`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCachedField`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCachedField`1.InitializeStub">
            <summary>Initializes a new instance of type StubCachedField</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCachedField`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCachedField`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCachedField`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubCancelCommand">
            <summary>Stub type of RemoteTech.CancelCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCancelCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCancelCommand.Abort">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubCancelCommand.Abort01">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCancelCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubCancelCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubCancelCommand.DescriptionGet">
            <summary>Sets the stub of CancelCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCancelCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubCancelCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubCancelCommand.ExtraDelayGet">
            <summary>Sets the stub of CancelCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubCancelCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of CancelCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCancelCommand.InitializeStub">
            <summary>Initializes a new instance of type StubCancelCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubCancelCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of CancelCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubCancelCommand.PopFlightComputer">
            <summary>Sets the stub of CancelCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubCancelCommand.PriorityGet">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCancelCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCancelCommand.Description">
            <summary>Sets the stub of CancelCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCancelCommand.ExtraDelay">
            <summary>Sets the stub of CancelCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCancelCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCancelCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubCancelCommand.Priority">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubConnectionMap">
            <summary>Stub type of RemoteTech.ConnectionMap</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubConnectionMap.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubConnectionMap.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubConnectionMap.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubConnectionMap.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionMap</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubConnectionMap.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubConnectionMap.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubConnectionMap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubConnectionMap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubConnectionMap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubDelayedFlightCtrlState">
            <summary>Stub type of RemoteTech.DelayedFlightCtrlState</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubDelayedFlightCtrlState.#ctor(FlightCtrlState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubDelayedFlightCtrlState.InitializeStub">
            <summary>Initializes a new instance of type StubDelayedFlightCtrlState</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDelayedFlightCtrlState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDelayedFlightCtrlState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDelayedFlightCtrlState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubDelayedManeuver">
            <summary>Stub type of RemoteTech.DelayedManeuver</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubDelayedManeuver.#ctor(ManeuverNode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubDelayedManeuver.InitializeStub">
            <summary>Initializes a new instance of type StubDelayedManeuver</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDelayedManeuver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDelayedManeuver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDelayedManeuver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubDish">
            <summary>Stub type of RemoteTech.Dish</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubDish.#ctor(System.Guid,System.Double,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubDish.InitializeStub">
            <summary>Initializes a new instance of type StubDish</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubDish.ToString">
            <summary>Sets the stub of Dish.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubDish.ToString01">
            <summary>Sets the stub of Dish.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDish.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDish.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubDish.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubEventCommand">
            <summary>Stub type of RemoteTech.EventCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventCommand.Abort">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubEventCommand.Abort01">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubEventCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubEventCommand.DescriptionGet">
            <summary>Sets the stub of EventCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubEventCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of AbstractCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubEventCommand.ExtraDelayGet">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubEventCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventCommand.InitializeStub">
            <summary>Initializes a new instance of type StubEventCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of EventCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubEventCommand.PopFlightComputer">
            <summary>Sets the stub of EventCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubEventCommand.PriorityGet">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventCommand.Description">
            <summary>Sets the stub of EventCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventCommand.ExtraDelay">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventCommand.Priority">
            <summary>Sets the stub of AbstractCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubEventListWrapper`1">
            <summary>Stub type of RemoteTech.EventListWrapper`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventListWrapper`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventListWrapper`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubEventListWrapper`1.InitializeStub">
            <summary>Initializes a new instance of type StubEventListWrapper</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventListWrapper`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventListWrapper`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubEventListWrapper`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubFilterOverlay">
            <summary>Stub type of RemoteTech.FilterOverlay</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFilterOverlay.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFilterOverlay.InitializeStub">
            <summary>Initializes a new instance of type StubFilterOverlay</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFilterOverlay.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFilterOverlay.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFilterOverlay.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubFlightComputer">
            <summary>Stub type of RemoteTech.FlightComputer</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputer.#ctor(RemoteTech.ISignalProcessor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputer.InitializeStub">
            <summary>Initializes a new instance of type StubFlightComputer</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightComputer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightComputer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightComputer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubFlightComputerWindow">
            <summary>Stub type of RemoteTech.FlightComputerWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputerWindow.#ctor(RemoteTech.FlightComputer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputerWindow.Draw">
            <summary>Sets the stub of AbstractWindow.Draw()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubFlightComputerWindow.Draw01">
            <summary>Sets the stub of AbstractWindow.Draw()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputerWindow.Hide">
            <summary>Sets the stub of AbstractWindow.Hide()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubFlightComputerWindow.Hide01">
            <summary>Sets the stub of AbstractWindow.Hide()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputerWindow.InitializeStub">
            <summary>Initializes a new instance of type StubFlightComputerWindow</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputerWindow.Show">
            <summary>Sets the stub of AbstractWindow.Show()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubFlightComputerWindow.Show01">
            <summary>Sets the stub of AbstractWindow.Show()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightComputerWindow.Window(System.Int32)">
            <summary>Sets the stub of FlightComputerWindow.Window(Int32 id)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubFlightComputerWindow.WindowInt32">
            <summary>Sets the stub of FlightComputerWindow.Window(Int32 id)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightComputerWindow.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightComputerWindow.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightComputerWindow.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubFlightUIPatcher">
            <summary>Stub type of RemoteTech.FlightUIPatcher</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightUIPatcher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFlightUIPatcher.InitializeStub">
            <summary>Initializes a new instance of type StubFlightUIPatcher</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightUIPatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightUIPatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFlightUIPatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubFocusFragment">
            <summary>Stub type of RemoteTech.FocusFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFocusFragment.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFocusFragment.InitializeStub">
            <summary>Initializes a new instance of type StubFocusFragment</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFocusFragment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFocusFragment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFocusFragment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubFocusOverlay">
            <summary>Stub type of RemoteTech.FocusOverlay</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFocusOverlay.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubFocusOverlay.InitializeStub">
            <summary>Initializes a new instance of type StubFocusOverlay</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFocusOverlay.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFocusOverlay.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubFocusOverlay.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubGroup">
            <summary>Stub type of RemoteTech.Group</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubGroup.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubGroup.Equals(System.Object)">
            <summary>Sets the stub of Group.Equals(Object obj)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubGroup.EqualsObject">
            <summary>Sets the stub of Group.Equals(Object obj)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubGroup.GetHashCode">
            <summary>Sets the stub of Group.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubGroup.GetHashCode01">
            <summary>Sets the stub of Group.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubGroup.InitializeStub">
            <summary>Initializes a new instance of type StubGroup</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubGroup.ToString">
            <summary>Sets the stub of Group.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubGroup.ToString01">
            <summary>Sets the stub of Group.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubGroupManager">
            <summary>Stub type of RemoteTech.GroupManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubGroupManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubGroupManager.InitializeStub">
            <summary>Initializes a new instance of type StubGroupManager</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubGroupManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubGroupManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubGroupManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubIAntenna">
            <summary>Stub type of RemoteTech.IAntenna</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIAntenna.#ctor">
            <summary>Initializes a new instance of type StubIAntenna</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.ActivatedGet">
            <summary>Sets the stub of IAntenna.get_Activated()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.ActivatedSetBoolean">
            <summary>Sets the stub of IAntenna.set_Activated(Boolean value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIAntenna.AttachBackingFieldToActivated">
            <summary>Attaches delegates to emulate StubIAntenna.Activated as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.CanTargetGet">
            <summary>Sets the stub of IAntenna.get_CanTarget()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.ConsumptionGet">
            <summary>Sets the stub of IAntenna.get_Consumption()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.DishGet">
            <summary>Sets the stub of IAntenna.get_Dish()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.GuidGet">
            <summary>Sets the stub of IAntenna.get_Guid()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.NameGet">
            <summary>Sets the stub of IAntenna.get_Name()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.OmniGet">
            <summary>Sets the stub of IAntenna.get_Omni()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.OnConnectionRefresh">
            <summary>Sets the stub of IAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.PositionGet">
            <summary>Sets the stub of IAntenna.get_Position()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.PoweredGet">
            <summary>Sets the stub of IAntenna.get_Powered()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.RadiansGet">
            <summary>Sets the stub of IAntenna.get_Radians()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#OnConnectionRefresh">
            <summary>Sets the stub of IAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIAntenna.TargetsGet">
            <summary>Sets the stub of IAntenna.get_Targets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Activated">
            <summary>Sets the stub of IAntenna.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#CanTarget">
            <summary>Sets the stub of IAntenna.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Consumption">
            <summary>Sets the stub of IAntenna.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Dish">
            <summary>Sets the stub of IAntenna.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Guid">
            <summary>Sets the stub of IAntenna.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Name">
            <summary>Sets the stub of IAntenna.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Omni">
            <summary>Sets the stub of IAntenna.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Position">
            <summary>Sets the stub of IAntenna.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Powered">
            <summary>Sets the stub of IAntenna.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Radians">
            <summary>Sets the stub of IAntenna.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIAntenna.rt2::RemoteTech#IAntenna#Targets">
            <summary>Sets the stub of IAntenna.get_Targets()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubICommand">
            <summary>Stub type of RemoteTech.ICommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubICommand.#ctor">
            <summary>Initializes a new instance of type StubICommand</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.Abort">
            <summary>Sets the stub of ICommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubICommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubICommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubICommand.AttachBackingFieldToTimeStamp">
            <summary>Attaches delegates to emulate StubICommand.TimeStamp as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.CompareToICommand">
            <summary>Sets the stub of IComparable`1.CompareTo(!0 other)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.DescriptionGet">
            <summary>Sets the stub of ICommand.get_Description()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of ICommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.ExtraDelayGet">
            <summary>Sets the stub of ICommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.ExtraDelaySetDouble">
            <summary>Sets the stub of ICommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.PopFlightComputer">
            <summary>Sets the stub of ICommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.PriorityGet">
            <summary>Sets the stub of ICommand.get_Priority()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubICommand.rt2::RemoteTech#ICommand#Abort">
            <summary>Sets the stub of ICommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubICommand.rt2::RemoteTech#ICommand#Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of ICommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubICommand.rt2::RemoteTech#ICommand#Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of ICommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubICommand.global::System#IComparable{RemoteTech#ICommand}#CompareTo(RemoteTech.ICommand)">
            <summary>Sets the stub of IComparable`1.CompareTo(!0 other)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.TimeStampGet">
            <summary>Sets the stub of ICommand.get_TimeStamp()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubICommand.TimeStampSetDouble">
            <summary>Sets the stub of ICommand.set_TimeStamp(Double value)</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubICommand.rt2::RemoteTech#ICommand#Description">
            <summary>Sets the stub of ICommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubICommand.rt2::RemoteTech#ICommand#ExtraDelay">
            <summary>Sets the stub of ICommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubICommand.rt2::RemoteTech#ICommand#Priority">
            <summary>Sets the stub of ICommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubICommand.rt2::RemoteTech#ICommand#TimeStamp">
            <summary>Sets the stub of ICommand.get_TimeStamp()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubIFragment">
            <summary>Stub type of RemoteTech.IFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIFragment.#ctor">
            <summary>Initializes a new instance of type StubIFragment</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIFragment.Draw">
            <summary>Sets the stub of IFragment.Draw()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIFragment.rt2::RemoteTech#IFragment#Draw">
            <summary>Sets the stub of IFragment.Draw()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubIRangeModel">
            <summary>Stub type of RemoteTech.IRangeModel</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIRangeModel.#ctor">
            <summary>Initializes a new instance of type StubIRangeModel</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIRangeModel.GetLinkISatelliteISatellite">
            <summary>Sets the stub of IRangeModel.GetLink(ISatellite sat_a, ISatellite sat_b)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIRangeModel.rt2::RemoteTech#IRangeModel#GetLink(RemoteTech.ISatellite,RemoteTech.ISatellite)">
            <summary>Sets the stub of IRangeModel.GetLink(ISatellite sat_a, ISatellite sat_b)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubISatellite">
            <summary>Stub type of RemoteTech.ISatellite</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubISatellite.#ctor">
            <summary>Initializes a new instance of type StubISatellite</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.AntennasGet">
            <summary>Sets the stub of ISatellite.get_Antennas()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubISatellite.AttachBackingFieldToGroup">
            <summary>Attaches delegates to emulate StubISatellite.Group as a property with a backing field.</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubISatellite.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubISatellite.Name as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.BodyGet">
            <summary>Sets the stub of ISatellite.get_Body()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.GroupGet">
            <summary>Sets the stub of ISatellite.get_Group()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.GroupSetGroup">
            <summary>Sets the stub of ISatellite.set_Group(Group value)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.GuidGet">
            <summary>Sets the stub of ISatellite.get_Guid()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.HasLocalControlGet">
            <summary>Sets the stub of ISatellite.get_HasLocalControl()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.IsCommandStationGet">
            <summary>Sets the stub of ISatellite.get_IsCommandStation()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.NameGet">
            <summary>Sets the stub of ISatellite.get_Name()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.NameSetString">
            <summary>Sets the stub of ISatellite.set_Name(String value)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.PositionGet">
            <summary>Sets the stub of ISatellite.get_Position()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.PoweredGet">
            <summary>Sets the stub of ISatellite.get_Powered()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISatellite.VisibleGet">
            <summary>Sets the stub of ISatellite.get_Visible()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Antennas">
            <summary>Sets the stub of ISatellite.get_Antennas()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Body">
            <summary>Sets the stub of ISatellite.get_Body()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Group">
            <summary>Sets the stub of ISatellite.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Guid">
            <summary>Sets the stub of ISatellite.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#HasLocalControl">
            <summary>Sets the stub of ISatellite.get_HasLocalControl()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#IsCommandStation">
            <summary>Sets the stub of ISatellite.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Name">
            <summary>Sets the stub of ISatellite.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Position">
            <summary>Sets the stub of ISatellite.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Powered">
            <summary>Sets the stub of ISatellite.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISatellite.rt2::RemoteTech#ISatellite#Visible">
            <summary>Sets the stub of ISatellite.get_Visible()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubISignalProcessor">
            <summary>Stub type of RemoteTech.ISignalProcessor</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubISignalProcessor.#ctor">
            <summary>Initializes a new instance of type StubISignalProcessor</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.FlightComputerGet">
            <summary>Sets the stub of ISignalProcessor.get_FlightComputer()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.GroupGet">
            <summary>Sets the stub of ISignalProcessor.get_Group()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.GuidGet">
            <summary>Sets the stub of ISignalProcessor.get_Guid()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.IsCommandStationGet">
            <summary>Sets the stub of ISignalProcessor.get_IsCommandStation()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.NameGet">
            <summary>Sets the stub of ISignalProcessor.get_Name()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.PoweredGet">
            <summary>Sets the stub of ISignalProcessor.get_Powered()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.VesselGet">
            <summary>Sets the stub of ISignalProcessor.get_Vessel()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubISignalProcessor.VisibleGet">
            <summary>Sets the stub of ISignalProcessor.get_Visible()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#FlightComputer">
            <summary>Sets the stub of ISignalProcessor.get_FlightComputer()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#Group">
            <summary>Sets the stub of ISignalProcessor.get_Group()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#Guid">
            <summary>Sets the stub of ISignalProcessor.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#IsCommandStation">
            <summary>Sets the stub of ISignalProcessor.get_IsCommandStation()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#Name">
            <summary>Sets the stub of ISignalProcessor.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#Powered">
            <summary>Sets the stub of ISignalProcessor.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#Vessel">
            <summary>Sets the stub of ISignalProcessor.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubISignalProcessor.rt2::RemoteTech#ISignalProcessor#Visible">
            <summary>Sets the stub of ISignalProcessor.get_Visible()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubITopicEvent`2">
            <summary>Stub type of RemoteTech.ITopicEvent`2</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubITopicEvent`2.#ctor">
            <summary>Initializes a new instance of type StubITopicEvent</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubITopicEvent`2.rt2::RemoteTech#ITopicEvent{TKey@TValue}#Subscribe(`0,System.Action{`1})">
            <summary>Sets the stub of ITopicEvent`2.Subscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubITopicEvent`2.rt2::RemoteTech#ITopicEvent{TKey@TValue}#Unsubscribe(`0,System.Action{`1})">
            <summary>Sets the stub of ITopicEvent`2.Unsubscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubITopicEvent`2.SubscribeT0ActionOfT1">
            <summary>Sets the stub of ITopicEvent`2.Subscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubITopicEvent`2.UnsubscribeT0ActionOfT1">
            <summary>Sets the stub of ITopicEvent`2.Unsubscribe(!0 key, Action`1&lt;!1&gt; subscriber)</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubIVesselAntenna">
            <summary>Stub type of RemoteTech.IVesselAntenna</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIVesselAntenna.#ctor">
            <summary>Initializes a new instance of type StubIVesselAntenna</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.ActivatedGet">
            <summary>Sets the stub of IAntenna.get_Activated()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.ActivatedSetBoolean">
            <summary>Sets the stub of IAntenna.set_Activated(Boolean value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIVesselAntenna.AttachBackingFieldToActivated">
            <summary>Attaches delegates to emulate StubIVesselAntenna.Activated as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.CanTargetGet">
            <summary>Sets the stub of IAntenna.get_CanTarget()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.ConsumptionGet">
            <summary>Sets the stub of IAntenna.get_Consumption()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.DishGet">
            <summary>Sets the stub of IAntenna.get_Dish()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.GuidGet">
            <summary>Sets the stub of IAntenna.get_Guid()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.NameGet">
            <summary>Sets the stub of IAntenna.get_Name()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.OmniGet">
            <summary>Sets the stub of IAntenna.get_Omni()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.OnConnectionRefresh">
            <summary>Sets the stub of IAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.PositionGet">
            <summary>Sets the stub of IAntenna.get_Position()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.PoweredGet">
            <summary>Sets the stub of IAntenna.get_Powered()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.RadiansGet">
            <summary>Sets the stub of IAntenna.get_Radians()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#OnConnectionRefresh">
            <summary>Sets the stub of IAntenna.OnConnectionRefresh()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.TargetsGet">
            <summary>Sets the stub of IAntenna.get_Targets()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubIVesselAntenna.VesselGet">
            <summary>Sets the stub of IVesselAntenna.get_Vessel()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Activated">
            <summary>Sets the stub of IAntenna.get_Activated()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#CanTarget">
            <summary>Sets the stub of IAntenna.get_CanTarget()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Consumption">
            <summary>Sets the stub of IAntenna.get_Consumption()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Dish">
            <summary>Sets the stub of IAntenna.get_Dish()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Guid">
            <summary>Sets the stub of IAntenna.get_Guid()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Name">
            <summary>Sets the stub of IAntenna.get_Name()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Omni">
            <summary>Sets the stub of IAntenna.get_Omni()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Position">
            <summary>Sets the stub of IAntenna.get_Position()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Powered">
            <summary>Sets the stub of IAntenna.get_Powered()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Radians">
            <summary>Sets the stub of IAntenna.get_Radians()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IAntenna#Targets">
            <summary>Sets the stub of IAntenna.get_Targets()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubIVesselAntenna.rt2::RemoteTech#IVesselAntenna#Vessel">
            <summary>Sets the stub of IVesselAntenna.get_Vessel()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubManeuverCommand">
            <summary>Stub type of RemoteTech.ManeuverCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubManeuverCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubManeuverCommand.Abort">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubManeuverCommand.Abort01">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubManeuverCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubManeuverCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubManeuverCommand.DescriptionGet">
            <summary>Sets the stub of ManeuverCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubManeuverCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of ManeuverCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubManeuverCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of ManeuverCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubManeuverCommand.ExtraDelayGet">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubManeuverCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of AbstractCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubManeuverCommand.InitializeStub">
            <summary>Initializes a new instance of type StubManeuverCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubManeuverCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of ManeuverCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubManeuverCommand.PopFlightComputer">
            <summary>Sets the stub of ManeuverCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubManeuverCommand.PriorityGet">
            <summary>Sets the stub of ManeuverCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubManeuverCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubManeuverCommand.Description">
            <summary>Sets the stub of ManeuverCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubManeuverCommand.ExtraDelay">
            <summary>Sets the stub of AbstractCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubManeuverCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubManeuverCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubManeuverCommand.Priority">
            <summary>Sets the stub of ManeuverCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubModuleRTAntenna">
            <summary>Stub type of RemoteTech.ModuleRTAntenna</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.GetInfo">
            <summary>Sets the stub of ModuleRTAntenna.GetInfo()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.GetInfo01">
            <summary>Sets the stub of ModuleRTAntenna.GetInfo()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.InitializeStub">
            <summary>Initializes a new instance of type StubModuleRTAntenna</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnActive">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnActive01">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnAwake">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnAwake01">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnFixedUpdate">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnFixedUpdate01">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnInactive">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnInactive01">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnInitialize">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnInitialize01">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnLoad(ConfigNode)">
            <summary>Sets the stub of ModuleRTAntenna.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnLoadConfigNode">
            <summary>Sets the stub of ModuleRTAntenna.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnSave(ConfigNode)">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnSaveConfigNode">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnStart(PartModule.StartState)">
            <summary>Sets the stub of ModuleRTAntenna.OnStart(StartState state)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnStartPartModuleStartState">
            <summary>Sets the stub of ModuleRTAntenna.OnStart(StartState state)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.OnUpdate">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.OnUpdate01">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.SetState(System.Boolean)">
            <summary>Sets the stub of ModuleRTAntenna.SetState(Boolean state)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.SetStateBoolean">
            <summary>Sets the stub of ModuleRTAntenna.SetState(Boolean state)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntenna.ToString">
            <summary>Sets the stub of ModuleRTAntenna.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntenna.ToString01">
            <summary>Sets the stub of ModuleRTAntenna.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntenna.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntenna.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntenna.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubModuleRTAntennaPassive">
            <summary>Stub type of RemoteTech.ModuleRTAntennaPassive</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.GetInfo">
            <summary>Sets the stub of ModuleRTAntennaPassive.GetInfo()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.GetInfo01">
            <summary>Sets the stub of ModuleRTAntennaPassive.GetInfo()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.InitializeStub">
            <summary>Initializes a new instance of type StubModuleRTAntennaPassive</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnActive">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnActive01">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnAwake">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnAwake01">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnFixedUpdate">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnFixedUpdate01">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnInactive">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnInactive01">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnInitialize">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnInitialize01">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnLoad(ConfigNode)">
            <summary>Sets the stub of ModuleRTAntennaPassive.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnLoadConfigNode">
            <summary>Sets the stub of ModuleRTAntennaPassive.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnSave(ConfigNode)">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnSaveConfigNode">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnStart(PartModule.StartState)">
            <summary>Sets the stub of ModuleRTAntennaPassive.OnStart(StartState state)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnStartPartModuleStartState">
            <summary>Sets the stub of ModuleRTAntennaPassive.OnStart(StartState state)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnUpdate">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.OnUpdate01">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.SetState(System.Boolean)">
            <summary>Sets the stub of ModuleRTAntennaPassive.SetState(Boolean state)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.SetStateBoolean">
            <summary>Sets the stub of ModuleRTAntennaPassive.SetState(Boolean state)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive.ToString">
            <summary>Sets the stub of ModuleRTAntennaPassive.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive.ToString01">
            <summary>Sets the stub of ModuleRTAntennaPassive.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntennaPassive.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntennaPassive.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntennaPassive.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo">
            <summary>Stub type of RemoteTech.ModuleRTAntennaPassive_ReloadPartInfo</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.InitializeStub">
            <summary>Initializes a new instance of type StubModuleRTAntennaPassive_ReloadPartInfo</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.ToString">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.ToString01">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleRTAntennaPassive_ReloadPartInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubModuleSPU">
            <summary>Stub type of RemoteTech.ModuleSPU</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.GetInfo">
            <summary>Sets the stub of ModuleSPU.GetInfo()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.GetInfo01">
            <summary>Sets the stub of ModuleSPU.GetInfo()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.InitializeStub">
            <summary>Initializes a new instance of type StubModuleSPU</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnActive">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnActive01">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnAwake">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnAwake01">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnFixedUpdate">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnFixedUpdate01">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnInactive">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnInactive01">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnInitialize">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnInitialize01">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnLoad(ConfigNode)">
            <summary>Sets the stub of PartModule.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnLoadConfigNode">
            <summary>Sets the stub of PartModule.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnSave(ConfigNode)">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnSaveConfigNode">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnStart(PartModule.StartState)">
            <summary>Sets the stub of ModuleSPU.OnStart(StartState state)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnStartPartModuleStartState">
            <summary>Sets the stub of ModuleSPU.OnStart(StartState state)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.OnUpdate">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.OnUpdate01">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPU.ToString">
            <summary>Sets the stub of ModuleSPU.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPU.ToString01">
            <summary>Sets the stub of ModuleSPU.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleSPU.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleSPU.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleSPU.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubModuleSPUPassive">
            <summary>Stub type of RemoteTech.ModuleSPUPassive</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.GetInfo">
            <summary>Sets the stub of PartModule.GetInfo()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.GetInfo01">
            <summary>Sets the stub of PartModule.GetInfo()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.InitializeStub">
            <summary>Initializes a new instance of type StubModuleSPUPassive</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnActive">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnActive01">
            <summary>Sets the stub of PartModule.OnActive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnAwake">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnAwake01">
            <summary>Sets the stub of PartModule.OnAwake()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnFixedUpdate">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnFixedUpdate01">
            <summary>Sets the stub of PartModule.OnFixedUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnInactive">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnInactive01">
            <summary>Sets the stub of PartModule.OnInactive()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnInitialize">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnInitialize01">
            <summary>Sets the stub of PartModule.OnInitialize()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnLoad(ConfigNode)">
            <summary>Sets the stub of PartModule.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnLoadConfigNode">
            <summary>Sets the stub of PartModule.OnLoad(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnSave(ConfigNode)">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnSaveConfigNode">
            <summary>Sets the stub of PartModule.OnSave(ConfigNode node)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnStart(PartModule.StartState)">
            <summary>Sets the stub of ModuleSPUPassive.OnStart(StartState state)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnStartPartModuleStartState">
            <summary>Sets the stub of ModuleSPUPassive.OnStart(StartState state)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.OnUpdate">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.OnUpdate01">
            <summary>Sets the stub of PartModule.OnUpdate()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubModuleSPUPassive.ToString">
            <summary>Sets the stub of ModuleSPUPassive.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubModuleSPUPassive.ToString01">
            <summary>Sets the stub of ModuleSPUPassive.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleSPUPassive.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleSPUPassive.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubModuleSPUPassive.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkCone">
            <summary>Stub type of RemoteTech.NetworkCone</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkCone.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkCone.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkCone.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkCone.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkCone.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkCone.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkCone</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkCone.ToString">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkCone.ToString01">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkCone.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkCone.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkCone.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkLine">
            <summary>Stub type of RemoteTech.NetworkLine</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLine.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLine.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkLine.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLine.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkLine.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLine.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkLine</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLine.ToString">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkLine.ToString01">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLine.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLine.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLine.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkLink">
            <summary>Stub type of RemoteTech.NetworkLink</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLink.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLink.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkLink</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLink.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLink.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLink.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkLink`1">
            <summary>Stub type of RemoteTech.NetworkLink`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLink`1.#ctor(`0,`0,System.Collections.Generic.IList{RemoteTech.IAntenna},System.Collections.Generic.IList{RemoteTech.IAntenna},RemoteTech.LinkType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLink`1.Equals(System.Object)">
            <summary>Sets the stub of UnorderedPair`1.Equals(Object obj)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkLink`1.EqualsObject">
            <summary>Sets the stub of UnorderedPair`1.Equals(Object obj)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLink`1.GetHashCode">
            <summary>Sets the stub of UnorderedPair`1.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkLink`1.GetHashCode01">
            <summary>Sets the stub of UnorderedPair`1.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLink`1.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkLink</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkLink`1.ToString">
            <summary>Sets the stub of NetworkLink`1.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkLink`1.ToString01">
            <summary>Sets the stub of NetworkLink`1.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLink`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLink`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkLink`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkManager">
            <summary>Stub type of RemoteTech.NetworkManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkManager.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkManager</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkPathfinder`1">
            <summary>Stub type of RemoteTech.NetworkPathfinder`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkPathfinder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{RemoteTech.NetworkLink{`0}}},System.Func{`0,`0,System.Double})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkPathfinder`1.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkPathfinder</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkPathfinder`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkPathfinder`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkPathfinder`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkRenderer">
            <summary>Stub type of RemoteTech.NetworkRenderer</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRenderer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRenderer.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkRenderer.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRenderer.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkRenderer.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRenderer.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkRenderer</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRenderer.ToString">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkRenderer.ToString01">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkRenderer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkRenderer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkRenderer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubNetworkRoute`1">
            <summary>Stub type of RemoteTech.NetworkRoute`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRoute`1.#ctor(`0,`0,System.Collections.Generic.IDictionary{`0,RemoteTech.NetworkLink{`0}},System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRoute`1.InitializeStub">
            <summary>Initializes a new instance of type StubNetworkRoute</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubNetworkRoute`1.ToString">
            <summary>Sets the stub of NetworkRoute`1.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubNetworkRoute`1.ToString01">
            <summary>Sets the stub of NetworkRoute`1.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkRoute`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkRoute`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubNetworkRoute`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubPriorityQueue`1">
            <summary>Stub type of RemoteTech.PriorityQueue`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubPriorityQueue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubPriorityQueue`1.InitializeStub">
            <summary>Initializes a new instance of type StubPriorityQueue</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubPriorityQueue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubPriorityQueue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubPriorityQueue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubProtoSignalProcessor">
            <summary>Stub type of RemoteTech.ProtoSignalProcessor</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubProtoSignalProcessor.#ctor(ProtoPartModuleSnapshot,Vessel)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubProtoSignalProcessor.InitializeStub">
            <summary>Initializes a new instance of type StubProtoSignalProcessor</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubProtoSignalProcessor.ToString">
            <summary>Sets the stub of ProtoSignalProcessor.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubProtoSignalProcessor.ToString01">
            <summary>Sets the stub of ProtoSignalProcessor.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubProtoSignalProcessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubProtoSignalProcessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubProtoSignalProcessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubQueueFragment">
            <summary>Stub type of RemoteTech.QueueFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubQueueFragment.#ctor(RemoteTech.FlightComputer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubQueueFragment.InitializeStub">
            <summary>Initializes a new instance of type StubQueueFragment</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubQueueFragment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubQueueFragment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubQueueFragment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubRTCore">
            <summary>Stub type of RemoteTech.RTCore</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCore.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCore.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCore.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCore.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCore.InitializeStub">
            <summary>Initializes a new instance of type StubRTCore</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCore.ToString">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCore.ToString01">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubRTCoreFlight">
            <summary>Stub type of RemoteTech.RTCoreFlight</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreFlight.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreFlight.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCoreFlight.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreFlight.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCoreFlight.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreFlight.InitializeStub">
            <summary>Initializes a new instance of type StubRTCoreFlight</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreFlight.ToString">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCoreFlight.ToString01">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCoreFlight.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCoreFlight.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCoreFlight.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubRTCoreTracking">
            <summary>Stub type of RemoteTech.RTCoreTracking</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreTracking.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreTracking.Equals(System.Object)">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCoreTracking.EqualsObject">
            <summary>Sets the stub of Object.Equals(Object o)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreTracking.GetHashCode">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCoreTracking.GetHashCode01">
            <summary>Sets the stub of Object.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreTracking.InitializeStub">
            <summary>Initializes a new instance of type StubRTCoreTracking</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTCoreTracking.ToString">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubRTCoreTracking.ToString01">
            <summary>Sets the stub of Object.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCoreTracking.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCoreTracking.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTCoreTracking.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubRTSettings">
            <summary>Stub type of RemoteTech.RTSettings</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRTSettings.InitializeStub">
            <summary>Initializes a new instance of type StubRTSettings</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRTSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubRangeModelBuilder">
            <summary>Stub type of RemoteTech.RangeModelBuilder</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRangeModelBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRangeModelBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubRangeModelBuilder</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubRangeModelRoot">
            <summary>Stub type of RemoteTech.RangeModelRoot</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRangeModelRoot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRangeModelRoot.InitializeStub">
            <summary>Initializes a new instance of type StubRangeModelRoot</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelRoot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelRoot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelRoot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubRangeModelStandard">
            <summary>Stub type of RemoteTech.RangeModelStandard</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRangeModelStandard.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubRangeModelStandard.InitializeStub">
            <summary>Initializes a new instance of type StubRangeModelStandard</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelStandard.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelStandard.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubRangeModelStandard.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubReadOnlyDictionary`2">
            <summary>Stub type of RemoteTech.ReadOnlyDictionary`2</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubReadOnlyDictionary`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubReadOnlyDictionary`2.InitializeStub">
            <summary>Initializes a new instance of type StubReadOnlyDictionary</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubReadOnlyDictionary`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubReadOnlyDictionary`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubReadOnlyDictionary`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubSatelliteFragment">
            <summary>Stub type of RemoteTech.SatelliteFragment</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubSatelliteFragment.#ctor(RemoteTech.ISatellite)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubSatelliteFragment.InitializeStub">
            <summary>Initializes a new instance of type StubSatelliteFragment</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSatelliteFragment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSatelliteFragment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSatelliteFragment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubSatelliteManager">
            <summary>Stub type of RemoteTech.SatelliteManager</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubSatelliteManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubSatelliteManager.InitializeStub">
            <summary>Initializes a new instance of type StubSatelliteManager</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSatelliteManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSatelliteManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSatelliteManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubSettings">
            <summary>Stub type of RemoteTech.Settings</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubSettings.InitializeStub">
            <summary>Initializes a new instance of type StubSettings</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubTargetCommand">
            <summary>Stub type of RemoteTech.TargetCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTargetCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTargetCommand.Abort">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubTargetCommand.Abort01">
            <summary>Sets the stub of AbstractCommand.Abort()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTargetCommand.AttachBackingFieldToExtraDelay">
            <summary>Attaches delegates to emulate StubTargetCommand.ExtraDelay as a property with a backing field.</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubTargetCommand.DescriptionGet">
            <summary>Sets the stub of TargetCommand.get_Description()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTargetCommand.Execute(RemoteTech.FlightComputer,FlightCtrlState)">
            <summary>Sets the stub of TargetCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubTargetCommand.ExecuteFlightComputerFlightCtrlState">
            <summary>Sets the stub of TargetCommand.Execute(FlightComputer f, FlightCtrlState fcs)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubTargetCommand.ExtraDelayGet">
            <summary>Sets the stub of TargetCommand.get_ExtraDelay()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubTargetCommand.ExtraDelaySetDouble">
            <summary>Sets the stub of TargetCommand.set_ExtraDelay(Double value)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTargetCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTargetCommand</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTargetCommand.Pop(RemoteTech.FlightComputer)">
            <summary>Sets the stub of TargetCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubTargetCommand.PopFlightComputer">
            <summary>Sets the stub of TargetCommand.Pop(FlightComputer f)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubTargetCommand.PriorityGet">
            <summary>Sets the stub of TargetCommand.get_Priority()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTargetCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTargetCommand.Description">
            <summary>Sets the stub of TargetCommand.get_Description()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTargetCommand.ExtraDelay">
            <summary>Sets the stub of TargetCommand.get_ExtraDelay()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTargetCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTargetCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTargetCommand.Priority">
            <summary>Sets the stub of TargetCommand.get_Priority()</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubTextures">
            <summary>Stub type of RemoteTech.Textures</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTextures.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTextures.InitializeStub">
            <summary>Initializes a new instance of type StubTextures</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTextures.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTextures.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTextures.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubTimeQuadrantPatcher">
            <summary>Stub type of RemoteTech.TimeQuadrantPatcher</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTimeQuadrantPatcher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTimeQuadrantPatcher.InitializeStub">
            <summary>Initializes a new instance of type StubTimeQuadrantPatcher</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTimeQuadrantPatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTimeQuadrantPatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTimeQuadrantPatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubTopicEventOwner`2">
            <summary>Stub type of RemoteTech.TopicEventOwner`2</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTopicEventOwner`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubTopicEventOwner`2.InitializeStub">
            <summary>Initializes a new instance of type StubTopicEventOwner</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTopicEventOwner`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTopicEventOwner`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubTopicEventOwner`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubUnorderedPair`1">
            <summary>Stub type of RemoteTech.UnorderedPair`1</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubUnorderedPair`1.#ctor(`0,`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubUnorderedPair`1.Equals(System.Object)">
            <summary>Sets the stub of UnorderedPair`1.Equals(Object obj)</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubUnorderedPair`1.EqualsObject">
            <summary>Sets the stub of UnorderedPair`1.Equals(Object obj)</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubUnorderedPair`1.GetHashCode">
            <summary>Sets the stub of UnorderedPair`1.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubUnorderedPair`1.GetHashCode01">
            <summary>Sets the stub of UnorderedPair`1.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubUnorderedPair`1.InitializeStub">
            <summary>Initializes a new instance of type StubUnorderedPair</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubUnorderedPair`1.ToString">
            <summary>Sets the stub of UnorderedPair`1.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubUnorderedPair`1.ToString01">
            <summary>Sets the stub of UnorderedPair`1.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubUnorderedPair`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubUnorderedPair`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubUnorderedPair`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:RemoteTech.Fakes.StubVesselSatellite">
            <summary>Stub type of RemoteTech.VesselSatellite</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubVesselSatellite.#ctor(System.Guid,System.Collections.Generic.List{RemoteTech.ISignalProcessor})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubVesselSatellite.GetHashCode">
            <summary>Sets the stub of VesselSatellite.GetHashCode()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubVesselSatellite.GetHashCode01">
            <summary>Sets the stub of VesselSatellite.GetHashCode()</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubVesselSatellite.InitializeStub">
            <summary>Initializes a new instance of type StubVesselSatellite</summary>
        </member>
        <member name="M:RemoteTech.Fakes.StubVesselSatellite.ToString">
            <summary>Sets the stub of VesselSatellite.ToString()</summary>
        </member>
        <member name="F:RemoteTech.Fakes.StubVesselSatellite.ToString01">
            <summary>Sets the stub of VesselSatellite.ToString()</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubVesselSatellite.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubVesselSatellite.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:RemoteTech.Fakes.StubVesselSatellite.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:kOS.Fakes.ShimSteeringHelper">
            <summary>Shim type of kOS.SteeringHelper</summary>
        </member>
        <member name="M:kOS.Fakes.ShimSteeringHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:kOS.Fakes.ShimSteeringHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:kOS.Fakes.ShimSteeringHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.GetEffectiveInertiaVesselVector3d">
            <summary>Sets the shim of SteeringHelper.GetEffectiveInertia(Vessel vessel, Vector3d torque)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.GetThrustTorquePartVessel">
            <summary>Sets the shim of SteeringHelper.GetThrustTorque(Part p, Vessel vessel)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.GetTorqueVesselSingle">
            <summary>Sets the shim of SteeringHelper.GetTorque(Vessel vessel, Single thrust)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.InverseVector3d">
            <summary>Sets the shim of SteeringHelper.Inverse(Vector3d input)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.KillRotationFlightCtrlStateVessel">
            <summary>Sets the shim of SteeringHelper.KillRotation(FlightCtrlState c, Vessel vessel)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.PowVector3dSingle">
            <summary>Sets the shim of SteeringHelper.Pow(Vector3d v3d, Single exponent)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.ReduceAnglesVector3d">
            <summary>Sets the shim of SteeringHelper.ReduceAngles(Vector3d input)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.SignVector3d">
            <summary>Sets the shim of SteeringHelper.Sign(Vector3d vector)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.StaticConstructor">
            <summary>Sets the shim of SteeringHelper.SteeringHelper()</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.SteerShipTowardQuaternionFlightCtrlStateVessel">
            <summary>Sets the shim of SteeringHelper.SteerShipToward(Quaternion target, FlightCtrlState c, Vessel vessel)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.SwapYZVector3d">
            <summary>Sets the shim of SteeringHelper.SwapYZ(Vector3d input)</summary>
        </member>
        <member name="P:kOS.Fakes.ShimSteeringHelper.averageVector3dVector3dArrayVector3dInt32">
            <summary>Sets the shim of SteeringHelper.averageVector3d(Vector3d[] vectorArray, Vector3d newVector, Int32 n)</summary>
        </member>
    </members>
</doc>
